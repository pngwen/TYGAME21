; File mechs.c
; 
; // I N C L U D E S ///////////////////////////////////////////////////////////
; 
; #include <io.h>
; #include <conio.h>
; #include <stdio.h>
; #include <stdlib.h>
; #include <dos.h>
; #include <bios.h>
; #include <fcntl.h>
; #include <memory.h>
; #include <malloc.h>
; #include <math.h>
; #include <string.h>
; 
; #include "graph3.h"  // include our graphics stuff
; #include "graph4.h"
; #include "graph6.h"
; #include "graph9.h"  // sound library
; 
; 
; // P R O T O T Y P E S //////////////////////////////////////////////////////
; 
; void Start_PDeath(void);
; 
; void Erase_PDeath(void);
; 
; void Animate_PDeath(void);
; 
; void Behind_PDeath(void);
; 
; void Draw_PDeath(void);
; 
; void Draw_Sprite_DBM(sprite_ptr sprite);
; 
; unsigned char Get_Pixel_DB(int x,int y);
; 
; void Blit_Char_G(int xc,int yc,char c,int color,int trans_flag);
; 
; void Blit_String_G(int x,int y,int color, char *string,int trans_flag);
; 
; void Blink_Lights(void);
; 
; void Energize(void);
; 
; void Start_Wave(void);
; 
; void Init_Mechs(void);
; 
; void Delete_Mechs(void);
; 
; void Move_Mechs(void);
; 
; void Erase_Mechs(void);
; 
; void Draw_Mechs(void);
; 
; void Behind_Mechs(void);
; 
; void Control_Mother(void);
; 
; void Move_Mother(void);
; 
; void Erase_Mother(void);
; 
; void Behind_Mother(void);
; 
; void Draw_Mother(void);
; 
; void Init_Stars(void);
; 
; void Move_Stars(void);
; 
; void Behind_Stars(void);
; 
; void Draw_Stars(void);
; 
; void Erase_Stars(void);
; 
; void Start_Missile(sprite_ptr who,
;                    int x,
;                    int y,
;                    int xv,
;                    int yv,
;                    int color,
;                    int tag);
; 
; void Erase_Missiles(void);
; 
; void Behind_Missiles(void);
; 
; void Draw_Missiles(void);
; 
; void Move_Missiles(void);
; 
; void Init_Missiles(void);
; 
; void Start_Explosion(int x,int y,int speed);
; 
; void Behind_Explosions(void);
; 
; void Erase_Explosions(void);
; 
; void Draw_Explosions(void);
; 
; void Animate_Explosions(void);
; 
; void Display_Instruments(void);
; 
; void Erase_Instruments(void);
; 
; void Play_Sound(int sound);
; 
; void _interrupt _far New_Key_Int(void);
; 
; // D E F I N E S /////////////////////////////////////////////////////////////
; 
; // begin keyboard stuff
; 
; #define KEYBOARD_INT    0x09        // the keyboard interrupt number
; #define KEY_BUFFER      0x60        // the buffer port
; #define KEY_CONTROL     0x61        // the controller port
; #define INT_CONTROL     0x20        // the interrupt controller
; 
; // make and break codes for the arrow keys, space and Q
; 
; #define MAKE_RIGHT       77
; #define MAKE_LEFT        75
; 
; #define MAKE_Q           16
; #define MAKE_SPACE       57
; 
; 
; #define BREAK_RIGHT      205
; #define BREAK_LEFT       203
; 
; #define BREAK_Q          144
; #define BREAK_SPACE      185
; 
; // indices into arrow key state table
; 
; #define INDEX_SPACE     0
; #define INDEX_Q         1
; #define INDEX_RIGHT     2
; #define INDEX_LEFT      3
; 
; // end keyboard
; 
; 
; #define PLAYER_DEATH_TIME    120    // how long it takes player to die
; #define NUM_DEATH_PARTICLES  30     // number of explosion particles in death
; 
; 
; 
; #define NUM_PATTERNS          4     // number of patterns mechs have
; #define MAX_PATTERN_ELEMENTS  60    // number of elements in a pattern
; 
; #define NUM_DIRECTIONS        9     // number of directions a mech can go
; 
; #define RED_BASE 32                 // start of the reds in default palette
; 
; #define BARRIER_START_COLOR 176     // the barrier color range
; #define BARRIER_END_COLOR   176+16
; 
; 
; // defines for starfield
; 
; #define NUM_STARS  50               // number of stars in the star field
; 
; #define PLANE_1    1
; #define PLANE_2    2
; #define PLANE_3    3
; 
; // constants for player and enemy
; 
; #define ENEMY_MISSILE  0
; #define PLAYER_MISSILE 1
; #define MISS_ALIVE     1
; #define MISS_DEAD      0
; #define NUM_MISSILES  30
; 
; // velocity of player
; 
; #define PLAYER_X_MOVE 6
; #define PLAYER_Y_MOVE 0
; 
; // player states
; 
; #define PLAYER_NOT_FIRING 0
; #define PLAYER_FIRING     1
; 
; #define PLAYER_DEAD       0
; #define PLAYER_ALIVE      1
; #define PLAYER_DYING      2
; 
; // general explosions
; 
; #define NUM_EXPLOSIONS    5         // numbre of explosions that can run at once
; 
; #define EXPLOSION_DEAD    0
; #define EXPLOSION_ALIVE   1
; 
; 
; // defines for mothership
; 
; #define MOTHER_DEAD       0
; #define MOTHER_ALIVE      1
; 
; #define MOTHER_RIGHT      1
; #define MOTHER_LEFT       0
; 
; 
; // defines for initial attack pattern
; 
; #define PATTERN_X_SIZE    7          // dimensions of pattern matrix
; #define PATTERN_Y_SIZE    5
; #define PATTERN_XO        48         // origin of pattern formation
; #define PATTERN_YO        16
; 
; #define NUM_ROBOT_FRAMES  10         // number of animation frames a mech has
; 
; // mech types
; 
; #define MECH_1            1
; #define MECH_2            2
; #define MECH_3            3
; 
; // states of mechs
; 
; #define MECH_DEAD         0 // dead
; #define MECH_ALIVE        1 // alive
; #define MECH_DYING        2 // dying
; 
; #define MECH_ATTACK       2 // action of attacking
; #define MECH_PATTERN      3 // action of pattern
; #define MECH_RETREAT      4 // looking for a place to stop
; #define MECH_FLOCK        5 // moving with others
; #define MECH_ROTATING     6 // mech is just spining
; #define MECH_ENERGIZING   7 // mech is energizing
; 
; 
; #define MECH_RIGHT        0 // mech moving to the right
; #define MECH_LEFT         1 // mech moving to the left
; #define MECH_UP           2 // mech moving up
; #define MECH_DOWN         3 // mech moving down
; 
; #define MAX_NUMBER_MECHS  20 // maximum number of mechs in game
; 
; #define NUMBER_WAVES      15
; 
; // sound stuff
; 
; #define NUM_SOUNDS 8
; 
; #define SOUND_MISSILE  0
; #define SOUND_EXPL1    1
; #define SOUND_EXPL2    2
; #define SOUND_EXPL3    3
; #define SOUND_KILL     4
; #define SOUND_ENERGY   5
; #define SOUND_READY    6
; #define SOUND_END      7
; 
; #define SOUND_DEFAULT_PORT  0x220  // default sound port for sound blaster
; #define SOUND_DEFAULT_INT   5      // default interrupt
; 
; // S T R U C T U R E S ///////////////////////////////////////////////////////
; 
; // typedef for a explosion particle and for a missile
; 
; typedef struct particle_typ
;         {
;         int x;                   // x position
;         int y;                   // y position
;         int xv;                  // x velocity
;         int yv;                  // y velocity
;         unsigned char color;     // the color of the particle
;         unsigned char back;      // the color behind the particle
;         int state;               // the state of the particle
;         int tag;                 // if the particle is a missile then who
;                                  // does it belong to?
;         int counter;             // use for counting
;         int threshold;           // the counters threshold
; 
;         int counter_2;
;         int threshold_2;
; 
;         } particle, *particle_ptr;
; 
; 
; // data structure for a single star
; 
; typedef struct star_typ
;         {
;         int x,y;              // position of star
;         int plane;            // which plane is star in
;         unsigned char color;  // color of star
;         unsigned char back;   // under star
; 
;         } star, *star_ptr;
; 
; 
; // data structure for mech
; 
; typedef struct mech_typ
;         {
;         int type;                 // type of mech 1,2,3
;         int x;                    // position of mech
;         int y;
;         int xv;                   // velocity of mech
;         int yv;
;         int state_1;              // state variables
;         int state_2;
;         int counter_1;            // counters
;         int counter_2;
;         int threshold_1;          // thresholds for counters
;         int threshold_2;
;         int aux_1;                // aux variables
;         int aux_2;
;         int new_state;            // the next state
;         int direction;            // direction of motion when flocking
;         int curr_frame;           // current animation frame
;         char far *background;     // background pointer
; 
;         } mech, *mech_ptr;
; 
; 
; // G L O B A L S  ////////////////////////////////////////////////////////////
; 
; // begin keyboard
; 
; void (_interrupt _far *Old_Isr)();  // holds old keyboard interrupt handler
; 
; int raw_key;                        // the global raw keyboard data
; 
; int key_table[4] = {0,0,0,0};      // the arrow key state table
; 
; 
; // end keyboard
; 
; 
; int cos_look[320];            // lookup table for cosines used for moving mother
; 
; long game_clock=0,            // how many ticks has current wave been running for
;      attack_time=500;         // threshold to start attack
; 
; star stars[NUM_STARS];        // the star field
; 
; particle pdeath[NUM_DEATH_PARTICLES]; // the particles used for player's death
; 
; // star field velocities
; 
; int velocity_1=2,             // the speeds of each plane
;     velocity_2=4,
;     velocity_3=6;
; 
; // pcx imagery
; 
; pcx_picture intro_pcx,        // the introduction and instructions
;             imagery_pcx,      // the game imagery
;             background_pcx;   // the backdrop
; 
; // the sprites used in the game
; 
; sprite player,                // the player
;        fire,                  // and explosion
;        mother,                // the mothership
;        robot_1,               // each robot type
;        robot_2,
;        robot_3;
; 
; 
; // variables pertaining to the player
; 
; long player_ships     = 3,    // number of ships the player has
;      player_energy    = 100,  // the initial energy of player's weapon
;      player_score     = 0,    // his score
;      player_gun_state = PLAYER_NOT_FIRING; // state of cannons
; 
; particle missiles[NUM_MISSILES];   // the array of missiles in the world
; 
; sprite explosions[NUM_EXPLOSIONS]; // the array of explosions
; 
; mech mech_array[MAX_NUMBER_MECHS]; // the mechs themselves
; 
; int energize_state = 0;            // state of wave, are the mech's energizing
; 
; int num_mechs      = 0;            // number of mechs for the current wave
; int wave_number    = 0;            // the wave number
; int mechs_killed   = 0;            // mechs killed thus far in current wave
; 
; int *current_wave;                 // pointer to current wave data
; 
; 
; 
; // these are the wave tables, there are used to place the mechs
; 
; 
; int wave_0[PATTERN_X_SIZE*PATTERN_Y_SIZE] = {0,0,1,1,1,0,0,
;                                              0,0,2,2,2,0,0,
;                                              0,0,3,3,3,0,0,
;                                              0,0,0,0,0,0,0,
;                                              0,0,0,0,0,0,0};
; 
; int wave_1[PATTERN_X_SIZE*PATTERN_Y_SIZE] = {0,1,0,0,0,1,0,
;                                              0,0,1,2,1,0,0,
;                                              0,3,3,3,3,3,0,
;                                              0,0,0,0,0,0,0,
;                                              0,0,0,0,0,0,0};
; 
; 
; 
; 
; int wave_2[PATTERN_X_SIZE*PATTERN_Y_SIZE] = {2,0,2,3,2,0,2,
;                                              0,2,0,3,0,2,0,
;                                              0,0,3,3,3,0,0,
;                                              0,0,0,3,0,0,0,
;                                              0,0,0,0,0,0,0};
; 
; int wave_3[PATTERN_X_SIZE*PATTERN_Y_SIZE] = {1,1,0,1,0,1,1,
;                                              1,1,0,0,0,1,1,
;                                              0,0,2,2,2,0,0,
;                                              0,3,3,3,3,3,0,
;                                              0,0,0,0,0,0,0};
; 
; 
; 
; int wave_4[PATTERN_X_SIZE*PATTERN_Y_SIZE] = {0,0,3,3,3,0,0,
;                                              1,0,1,0,1,0,1,
;                                              2,1,2,1,2,1,2,
;                                              0,0,3,3,3,0,0,
;                                              0,0,0,3,0,0,0};
; 
; 
; 
; int wave_5[PATTERN_X_SIZE*PATTERN_Y_SIZE] = {0,1,0,1,0,1,0,
;                                              0,0,3,3,3,0,0,
;                                              0,3,3,1,3,3,0,
;                                              0,3,2,2,2,3,0,
;                                              0,0,0,0,0,0,0};
; 
; 
; 
; int wave_6[PATTERN_X_SIZE*PATTERN_Y_SIZE] = {1,2,3,3,3,2,1,
;                                              0,1,2,3,2,1,0,
;                                              0,0,1,2,1,0,0,
;                                              0,0,0,1,0,0,0,
;                                              0,0,0,0,0,0,0};
; 
; 
; 
; int wave_7[PATTERN_X_SIZE*PATTERN_Y_SIZE] = {1,2,1,0,1,2,1,
;                                              0,1,0,0,0,1,0,
;                                              0,0,0,2,0,0,0,
;                                              0,0,3,3,3,0,0,
;                                              0,0,0,3,0,0,0};
; 
; 
; int wave_8[PATTERN_X_SIZE*PATTERN_Y_SIZE] = {0,0,0,0,0,0,0,
;                                              2,2,2,2,2,2,2,
;                                              0,3,0,3,0,3,0,
;                                              0,0,0,0,0,0,0,
;                                              0,0,1,0,1,0,0};
; 
; 
; 
; 
; int wave_9[PATTERN_X_SIZE*PATTERN_Y_SIZE] = {1,3,1,3,1,3,1,
;                                              1,0,1,0,1,0,1,
;                                              1,0,1,0,1,0,1,
;                                              0,2,0,2,0,2,0,
;                                              0,0,0,0,0,0,0};
; 
; 
; int wave_10[PATTERN_X_SIZE*PATTERN_Y_SIZE] = {0,0,1,1,1,0,0,
;                                               0,0,2,2,2,0,0,
;                                               0,2,3,3,3,2,0,
;                                               2,3,0,0,0,3,2,
;                                               3,0,0,0,0,0,3};
; 
; 
; 
; 
; int wave_11[PATTERN_X_SIZE*PATTERN_Y_SIZE] = {0,0,0,1,0,0,0,
;                                               0,0,1,2,1,0,0,
;                                               0,1,2,3,2,1,0,
;                                               0,0,1,2,1,0,0,
;                                               0,0,0,1,0,0,0};
; 
; 
; 
; 
; 
; int wave_12[PATTERN_X_SIZE*PATTERN_Y_SIZE] = {1,2,1,0,1,2,1,
;                                               0,0,2,0,2,0,0,
;                                               0,0,1,3,1,0,0,
;                                               0,0,0,3,0,0,0,
;                                               0,0,0,3,0,0,0};
; 
; int wave_13[PATTERN_X_SIZE*PATTERN_Y_SIZE] = {1,0,0,3,0,0,1,
;                                               0,0,2,0,2,0,0,
;                                               0,3,0,0,0,3,0,
;                                               0,0,2,0,2,0,0,
;                                               1,0,0,3,0,0,1};
; 
; 
; 
; 
; int wave_14[PATTERN_X_SIZE*PATTERN_Y_SIZE] = {1,1,1,0,3,0,0,
;                                               1,0,1,0,3,0,0,
;                                               1,1,1,2,3,0,0,
;                                               1,0,1,0,3,0,0,
;                                               1,0,1,0,3,3,3};
; 
; // this is an array that is used to point to all the wave tables
; 
; int *waves[NUMBER_WAVES];
; 
; 
; // this is a data structure that holds the instructions for the patterns
; // that the mechs take when in pattern mode
; 
; int patterns[NUM_PATTERNS][MAX_PATTERN_ELEMENTS]
; 
;     = {1,1,1,1,1,1,1,1,1,2,2,2,2,3,3,3,3,3,3,3,4,4,4,4,5,5,5,5,6,6,7,7,7,7,8,8,8,8,7,7,7,7,7,7,6,6,7,5,4,4,3,3,2,2,1,1,0,0,0,-1,
;        1,1,1,1,1,1,1,1,1,1,2,2,3,3,4,4,5,5,5,5,5,5,5,5,5,5,7,7,7,7,7,7,7,7,8,8,8,8,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,-1,
;        1,1,8,8,7,7,8,8,7,7,7,7,7,7,7,7,6,6,5,5,4,4,3,3,3,3,3,3,3,3,4,4,4,4,5,5,6,6,7,7,7,7,7,7,7,7,6,6,5,5,4,4,3,3,2,2,1,1,0,-1,
;        1,1,2,2,3,3,3,3,3,3,3,3,4,4,5,5,5,5,5,5,6,6,7,7,7,7,7,7,7,7,7,8,8,1,1,1,1,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,1,1,0,0,0,0,-1};
; 
; // these are the velocity vectors used to move the mechs via a pattern instruction
; 
; int dirs_x[NUM_DIRECTIONS] = {0, 0, 4, 4, 4, 0,-4,-4,-4};
; int dirs_y[NUM_DIRECTIONS] = {0,-4,-4, 0, 4, 4, 4, 0,-4};
; 
; // sound stuff
; 
; char far *sound_fx[NUM_SOUNDS];
; unsigned char sound_lengths[NUM_SOUNDS];
; 
; int sound_available = 1;
; 
; int sound_port = SOUND_DEFAULT_PORT;  // default sound port
; int sound_int  = SOUND_DEFAULT_INT;   // default sound interrupt
;                                       // both read from mechs.cfg
; 
; // F U N C T I O N S //////////////////////////////////////////////////////////
; 
; void _interrupt _far New_Key_Int(void)
; {
; Line 549
					_New_Key_Int:
	*** 000000	60 			pusha
	*** 000001	1e 			push	ds
	*** 000002	06 			push	es
	*** 000003	8b ec 			mov	bp,sp
	*** 000005	81 ec 00 00 		sub	sp,OFFSET L01660
	*** 000009	1e 			push	ds
	*** 00000a	b8 00 00 		mov	ax,SEG con0
	*** 00000d	8e d8 			mov	ds,ax
	*** 00000f	fc 			cld
; 
; // I'm in the mood for some inline!
; 
; _asm
; Line 553
;    {
; Line 554
;    sti                    ; re-enable interrupts
; Line 555
	*** 000010	fb 			sti
;    in al, KEY_BUFFER      ; get the key that was pressed
; Line 556
	*** 000011	e4 60 			in	OFFSET 96
;    xor ah,ah              ; zero out upper 8 bits of AX
; Line 557
	*** 000013	32 e4 			xor	ah,ah
;    mov raw_key, ax        ; store the key in global
; Line 558
	*** 000015	a3 00 00 		mov	WORD PTR _raw_key,ax
;    in al, KEY_CONTROL     ; set the control register
; Line 559
	*** 000018	e4 61 			in	OFFSET 97
;    or al, 82h             ; set the proper bits to reset the FF
; Line 560
	*** 00001a	0c 82 			or	al,OFFSET 130
;    out KEY_CONTROL,al     ; send the new data back to the control register
; Line 561
	*** 00001c	e6 61 			out	OFFSET 97
;    and al,7fh
; Line 562
	*** 00001e	24 7f 			and	al,OFFSET 127
;    out KEY_CONTROL,al     ; complete the reset
; Line 563
	*** 000020	e6 61 			out	OFFSET 97
;    mov al,20h
; Line 564
	*** 000022	b0 20 			mov	al,OFFSET 32
;    out INT_CONTROL,al     ; re-enable interrupts
; Line 565
	*** 000024	e6 20 			out	OFFSET 32
;                           ; when this baby hits 88 mph, your gonna see
; Line 566
;                           ; some serious @#@#$%
; Line 567
; 
;    } // end inline assembly
; Line 569
; 
; // now for some C to update the arrow state table
; 
; // process the key and update the table
; 
; switch(raw_key)
; Line 575
	*** 000026	a1 00 00 		mov	ax,WORD PTR _raw_key
	*** 000029	e9 00 00 		jmp	L01036
;       {
; Line 576
; 
;       case MAKE_RIGHT: // pressing right
; Line 578
					L01040:
;            {
; Line 579
;            key_table[INDEX_RIGHT] = 1;
; Line 580
	*** 00002c	c7 06 04 00 01 00 	mov	WORD PTR _key_table+4,OFFSET 1
;            } break;
; Line 581
	*** 000032	e9 00 00 		jmp	L01037
; 
;       case MAKE_LEFT:  // pressing left
; Line 583
					L01041:
;            {
; Line 584
;            key_table[INDEX_LEFT]  = 1;
; Line 585
	*** 000035	c7 06 06 00 01 00 	mov	WORD PTR _key_table+6,OFFSET 1
;            } break;
; Line 586
	*** 00003b	e9 00 00 		jmp	L01037
; 
;       case MAKE_SPACE: // pressing space
; Line 588
					L01042:
;            {
; Line 589
;            key_table[INDEX_SPACE] = 1;
; Line 590
	*** 00003e	c7 06 00 00 01 00 	mov	WORD PTR _key_table,OFFSET 1
;            } break;
; Line 591
	*** 000044	e9 00 00 		jmp	L01037
; 
;       case MAKE_Q:  // pressing Q
; Line 593
					L01043:
;            {
; Line 594
;            key_table[INDEX_Q]  = 1;
; Line 595
	*** 000047	c7 06 02 00 01 00 	mov	WORD PTR _key_table+2,OFFSET 1
;            } break;
; Line 596
	*** 00004d	e9 00 00 		jmp	L01037
; 
;       case BREAK_RIGHT: // releasing right
; Line 598
					L01044:
;            {
; Line 599
;            key_table[INDEX_RIGHT] = 0;
; Line 600
	*** 000050	c7 06 04 00 00 00 	mov	WORD PTR _key_table+4,OFFSET 0
;            } break;
; Line 601
	*** 000056	e9 00 00 		jmp	L01037
; 
;       case BREAK_LEFT:  // releasing left
; Line 603
					L01045:
;            {
; Line 604
;            key_table[INDEX_LEFT]  = 0;
; Line 605
	*** 000059	c7 06 06 00 00 00 	mov	WORD PTR _key_table+6,OFFSET 0
;            } break;
; Line 606
	*** 00005f	e9 00 00 		jmp	L01037
; 
;       case BREAK_SPACE: // releasing space
; Line 608
					L01046:
;            {
; Line 609
;            key_table[INDEX_SPACE] = 0;
; Line 610
	*** 000062	c7 06 00 00 00 00 	mov	WORD PTR _key_table,OFFSET 0
;            } break;
; Line 611
	*** 000068	e9 00 00 		jmp	L01037
; 
;       case BREAK_Q:  // releasing Q
; Line 613
					L01047:
;            {
; Line 614
;            key_table[INDEX_Q]  = 0;
; Line 615
	*** 00006b	c7 06 02 00 00 00 	mov	WORD PTR _key_table+2,OFFSET 0
;            } break;
; Line 616
	*** 000071	e9 00 00 		jmp	L01037
; 
;       default: break;
; Line 618
					L01048:
	*** 000074	e9 00 00 		jmp	L01037
; 
;       } // end switch
; Line 620
; Line 620
	*** 000077	e9 00 00 		jmp	L01037
					L01036:
	*** 00007a	3d 10 00 		cmp	ax,OFFSET 16
	*** 00007d	75 03 e9 c5 ff 		je	L01043
	*** 000082	3d 39 00 		cmp	ax,OFFSET 57
	*** 000085	75 03 e9 b4 ff 		je	L01042
	*** 00008a	3d 4b 00 		cmp	ax,OFFSET 75
	*** 00008d	75 03 e9 a3 ff 		je	L01041
	*** 000092	3d 4d 00 		cmp	ax,OFFSET 77
	*** 000095	75 03 e9 92 ff 		je	L01040
	*** 00009a	3d 90 00 		cmp	ax,OFFSET 144
	*** 00009d	75 03 e9 c9 ff 		je	L01047
	*** 0000a2	3d b9 00 		cmp	ax,OFFSET 185
	*** 0000a5	75 03 e9 b8 ff 		je	L01046
	*** 0000aa	3d cb 00 		cmp	ax,OFFSET 203
	*** 0000ad	75 03 e9 a7 ff 		je	L01045
	*** 0000b2	3d cd 00 		cmp	ax,OFFSET 205
	*** 0000b5	75 03 e9 96 ff 		je	L01044
	*** 0000ba	e9 b7 ff 		jmp	L01048
					L01037:
; 
; } // end New_Key_Int
; Line 622
; Line 622
					L01035:
	*** 0000bd	8b e5 			mov	sp,bp
	*** 0000bf	07 			pop	es
	*** 0000c0	1f 			pop	ds
	*** 0000c1	61 			popa
	*** 0000c2	cf 			iret
Local Size: 2
; Line 0
; 
; ///////////////////////////////////////////////////////////////////////////////
; 
; int Initialize_Sound_System(void)
; {
; 
; FILE *fp;
; 
; // test if driver is on disk
; 
; if ( (fp=fopen("ct-voice.drv","rb") )==NULL)
;    {
;    return(0);
;    } // end if not file
; 
; fclose(fp);
; 
; // load up sound configuration file
; 
; if ( (fp=fopen("mechs.cfg","r"))==NULL )
;    {
;    printf("\nSound configuration file not found...");
;    printf("\nUsing default values of port 220h and interrupt 5.");
; 
;    } // end if open sound configuration file
; else
;    {
; 
;    fscanf(fp,"%d %d",&sound_port, &sound_int);
;    printf("\nSetting sound system to port %d decimal with interrupt %d.",
;                                                     sound_port, sound_int);
; 
;    } // end else
; 
; // start up the whole sound system and load everything
; 
; Voc_Load_Driver();
; 
; Voc_Set_Port(sound_port);
; Voc_Set_IRQ(sound_int);
; Voc_Init_Driver();
; Voc_Get_Version();
; Voc_Set_Status_Addr((char __far *)&ct_voice_status);
; 
; // load in sounds
; 
; sound_fx[SOUND_MISSILE ] = Voc_Load_Sound("missile.voc", &sound_lengths[SOUND_MISSILE ]);
; sound_fx[SOUND_EXPL1   ] = Voc_Load_Sound("expl1.voc",   &sound_lengths[SOUND_EXPL1   ]);
; sound_fx[SOUND_EXPL2   ] = Voc_Load_Sound("expl2.voc",   &sound_lengths[SOUND_EXPL2   ]);
; sound_fx[SOUND_EXPL3   ] = Voc_Load_Sound("expl3.voc",   &sound_lengths[SOUND_EXPL3   ]);
; sound_fx[SOUND_KILL    ] = Voc_Load_Sound("kill.voc",    &sound_lengths[SOUND_KILL    ]);
; sound_fx[SOUND_ENERGY  ] = Voc_Load_Sound("energy.voc",  &sound_lengths[SOUND_ENERGY  ]);
; sound_fx[SOUND_READY   ] = Voc_Load_Sound("ready.voc",   &sound_lengths[SOUND_READY   ]);
; sound_fx[SOUND_END     ] = Voc_Load_Sound("end.voc",     &sound_lengths[SOUND_END]);
; 
; Voc_Set_Speaker(1);
; 
; return(1);
; 
; } // end Initialize_Sound_System
; 
; /////////////////////////////////////////////////////////////////////////////
; 
; void Close_Sound_System(void)
; {
; // make sure there is sound
; 
; if (sound_available)
;    {
; 
;    Voc_Set_Speaker(0);
; 
;    // unload sounds
; 
;    Voc_Unload_Sound(sound_fx[SOUND_MISSILE ]);
;    Voc_Unload_Sound(sound_fx[SOUND_EXPL1   ]);
;    Voc_Unload_Sound(sound_fx[SOUND_EXPL2   ]);
;    Voc_Unload_Sound(sound_fx[SOUND_EXPL3   ]);
;    Voc_Unload_Sound(sound_fx[SOUND_KILL    ]);
;    Voc_Unload_Sound(sound_fx[SOUND_ENERGY  ]);
;    Voc_Unload_Sound(sound_fx[SOUND_READY   ]);
;    Voc_Unload_Sound(sound_fx[SOUND_END     ]);
; 
;    Voc_Terminate_Driver();
; 
;    } // end if sound
; 
; } // end Close_Sound_System
; 
; /////////////////////////////////////////////////////////////////////////////
; 
; void Play_Sound(int sound)
; {
; 
; if (sound_available)
;    {
;    Voc_Stop_Sound();
;    Voc_Play_Sound(sound_fx[sound] , sound_lengths[sound]);
;    } // end if sound available
; 
; } // end Play_Sound
; 
; ///////////////////////////////////////////////////////////////////////////////
; 
; void Start_PDeath(void)
; {
; 
; // this function begins the death of a player
; 
; int index;
; 
; // make sure the player is dying otherwise return
; 
; if (player.state!=PLAYER_DYING) return;
; 
; // loop thru all particles and initialize them to different upward velocities
; 
; for (index=0; index<NUM_DEATH_PARTICLES; index++)
;     {
; 
;     pdeath[index].x           =  9+player.x - 4 + rand()%9;
;     pdeath[index].y           =  9+player.y - 4 + rand()%9;
;     pdeath[index].xv          =  -5 + rand()%11;
;     pdeath[index].yv          =  -5-(rand()%7);
;     pdeath[index].color       =  137;
;     pdeath[index].back        =  0;
;     pdeath[index].state       =  0;
;     pdeath[index].tag         =  0;
; 
;     pdeath[index].counter     =  0;
;     pdeath[index].threshold   =  5;
; 
;     pdeath[index].counter_2   =  0;
;     pdeath[index].threshold_2 =  5;
; 
; 
;     } // end for index
; 
; Play_Sound(SOUND_EXPL1);
; 
; } // end Start_PDeath
; 
; ///////////////////////////////////////////////////////////////////////////////
; 
; void Erase_PDeath(void)
; {
; // this function is used to erase all the particles in the players death
; 
; int index;
; 
; // make sure the player is dying otherwise return
; 
; if (player.state!=PLAYER_DYING) return;
; 
; // loop thru all particles and erase them i.e. replace the background
; 
; for (index=0; index<NUM_DEATH_PARTICLES; index++)
;     {
; 
;     Plot_Pixel_Fast_DB(pdeath[index].x,pdeath[index].y,pdeath[index].back);
; 
;     } // end for index
; 
; } // end Erase_PDeath
; 
; ///////////////////////////////////////////////////////////////////////////////
; 
; void Animate_PDeath(void)
; {
; 
; // this is the workhorse of the death animation sequence, it moves the particles
; // applies gravity to them and changes their colors, also it bounds them to the
; // screen
; 
; int index;
; 
; // should we be doing this?
; 
; if (player.state!=PLAYER_DYING) return;
; 
; // process each particle
; 
; for (index=0; index<NUM_DEATH_PARTICLES; index++)
;     {
; 
;     // translation
; 
;     pdeath[index].x+=pdeath[index].xv;
;     pdeath[index].y+=pdeath[index].yv;
; 
;     // boundary tests
; 
;     // xtests
; 
;     if (pdeath[index].x > 319)
;        {
;        pdeath[index].x = 319;
;        }
;     else
;     if (pdeath[index].x < 0)
;        {
;        pdeath[index].x = 0;
;        }
; 
;     // ytests
; 
;     if (pdeath[index].y > 199)
;         {
;         pdeath[index].y     = 199;
;         pdeath[index].xv    = 0;
;         pdeath[index].color = 0;
;         }
;     else
;     if (pdeath[index].y < 1)
;         {
;         pdeath[index].y = 1;
;         }
; 
;     // gravity
; 
;     if (++pdeath[index].counter == pdeath[index].threshold)
;        {
;        // apply gravity field
; 
;        pdeath[index].yv++;
; 
;        // reset counter
; 
;        pdeath[index].counter = 0;
; 
;        } // end if time to apply gravity
; 
;     // color
; 
;     if (pdeath[index].y<199)
;        if (++pdeath[index].counter_2 == pdeath[index].threshold_2)
;           {
;           // change color
; 
;           pdeath[index].color++;
; 
;           // reset counter
; 
;           pdeath[index].counter_2 = 0;
; 
;           } // end if time to change color
; 
;     // end of sequence
; 
;     } // end for
; 
; // update death time
; 
; if (++player.anim_clock == PLAYER_DEATH_TIME)
;    {
; 
;    // reset players position
; 
;    player.x          = 160;
;    player.y          = 168;
;    player.curr_frame = 0;
;    player.state      = PLAYER_ALIVE;
; 
;    // clear all the missiles
; 
;    Init_Missiles();
; 
;    // reset the wave
; 
;    Start_Wave();
; 
;    } // end if player done dying
; 
; } // end Animate_PDeath
; 
; ///////////////////////////////////////////////////////////////////////////////
; 
; void Behind_PDeath(void)
; {
; 
; int index;
; 
; // check if we should do this
; 
; if (player.state!=PLAYER_DYING) return;
; 
; // loop thru all particles and scan their backgrounds
; 
; for (index=0; index<NUM_DEATH_PARTICLES; index++)
;     {
; 
;     pdeath[index].back = Get_Pixel_DB(pdeath[index].x,pdeath[index].y);
; 
;     } // end for index
; 
; } // end Behind_PDeath
; 
; ///////////////////////////////////////////////////////////////////////////////
; 
; void Draw_PDeath(void)
; {
; 
; int index;
; 
; // check if we should do this
; 
; if (player.state!=PLAYER_DYING) return;
; 
; // loop thru all particles and draw them
; 
; for (index=0; index<NUM_DEATH_PARTICLES; index++)
;     {
; 
;     Plot_Pixel_Fast_DB(pdeath[index].x,pdeath[index].y,pdeath[index].color);
; 
;     } // end for index
; 
; } // end Draw_PDeath
; 
; //////////////////////////////////////////////////////////////////////////////
; 
; void Draw_Sprite_DBM(sprite_ptr sprite)
; {
; 
; // this function draws a sprite on the screen row by row very quickly
; // note the use of shifting to implement multplication
; // also it is used as a special effect, the sprite drawn is melted by
; // randomly selecting red pixels
; 
; 
; char far *work_sprite;
; int work_offset=0,offset,x,y;
; unsigned char data;
; 
; // alias a pointer to sprite for ease of access
; 
; work_sprite = sprite->frames[sprite->curr_frame];
; 
; // compute offset of sprite in video buffer
; 
; offset = (sprite->y << 8) + (sprite->y << 6) + sprite->x;
; 
; for (y=0; y<sprite_height; y++)
;     {
;     // copy the next row into the double buffer using memcpy for speed
; 
;     for (x=0; x<sprite_width; x++)
;         {
; 
;         // test for transparent pixel i.e. 0, if not transparent then draw
; 
;         if ((work_sprite[work_offset+x]))
;              double_buffer[offset+x] = RED_BASE+rand()%32;
; 
;         } // end for x
; 
;     // move to next line in double buffer and in sprite bitmap buffer
; 
;     offset      += SCREEN_WIDTH;
;     work_offset += sprite_width;
; 
;     } // end for y
; 
; } // end Draw_Sprite_DBM
; 
; ///////////////////////////////////////////////////////////////////////////////
; 
; unsigned char Get_Pixel_DB(int x,int y)
; {
; 
; // gets the color value of pixel at (x,y) from the double buffer
; 
; return double_buffer[((y<<8) + (y<<6)) + x];
; 
; } // end Get_Pixel_DB
; 
; ///////////////////////////////////////////////////////////////////////////////
; 
; void Blit_Char_G(int xc,int yc,char c,int color,int trans_flag)
; {
; // this function uses the rom 8x8 character set to blit a character to the
; // double buffer, also it blits the character in two colors
; 
; int offset,x,y;
; unsigned char data;
; char far *work_char;
; unsigned char bit_mask = 0x80;
; 
; // compute starting offset in rom character lookup table
; 
; work_char = rom_char_set + c * CHAR_HEIGHT;
; 
; // compute offset of character in video buffer
; 
; offset = (yc << 8) + (yc << 6) + xc;
; 
; for (y=0; y<CHAR_HEIGHT; y++)
;     {
;     // reset bit mask
; 
;     bit_mask = 0x80;
; 
;     // test if it's time to change colors
; 
;     if (y==(CHAR_HEIGHT/2))
;        color-=8; // change to lower intensity
; 
;     for (x=0; x<CHAR_WIDTH; x++)
;         {
;         // test for transparent pixel i.e. 0, if not transparent then draw
; 
;         if ((*work_char & bit_mask))
;              video_buffer[offset+x] = color;
;         else
;         if (!trans_flag)  // takes care of transparency
;             video_buffer[offset+x] = 0;
; 
; 
;         // shift bit mask
; 
;         bit_mask = (bit_mask>>1);
; 
;         } // end for x
; 
;     // move to next line in video buffer and in rom character data area
; 
;     offset      += SCREEN_WIDTH;
;     work_char++;
; 
;     } // end for y
; 
; } // end Blit_Char_G
; 
; //////////////////////////////////////////////////////////////////////////////
; 
; void Blit_String_G(int x,int y,int color, char *string,int trans_flag)
; {
; // this function blits an entire string to the double buffer
; // It calls blit_char_g which is the gradient version of the character blitter
; 
; int index;
; 
; for (index=0; string[index]!=0; index++)
;      {
; 
;      Blit_Char_G(x+(index<<3),y,string[index],color,trans_flag);
; 
;      } /* end while */
; 
; } /* end Blit_String_G */
; 
; //////////////////////////////////////////////////////////////////////////////
; 
; void Blink_Lights(void)
; {
; // this function blinks the lights on the barriers
; 
; static int clock=0,
;            entered_yet=0;// used for timing, note: they are static!
; 
; static RGB_color color;
; 
; // this function blinks the running lights on the walkway
; 
; if (!entered_yet)
;    {
; 
;    // reset the palette register 243 to light green
;    // black, black
; 
;    color.red   = 0;
;    color.green = 10;
;    color.blue  = 0;
; 
;    Set_Palette_Register(243,(RGB_color_ptr)&color);
; 
;    // system has initialized, so flag it
; 
;    entered_yet=1;
; 
;    } // end if first time into function
; 
; // try and blick the lights, is it time
; 
;    ++clock;
; 
;    if (clock==4)
;       {
;       // turn the lights on
; 
;       color.green = 255;
; 
;       Set_Palette_Register(243,(RGB_color_ptr)&color);
; 
;       } // end if time to rotate
;    else
;    if (clock==8)
;       {
; 
;       // turn the lights off
; 
;       color.green = 0;
; 
;       Set_Palette_Register(243,(RGB_color_ptr)&color);
; 
;       clock=0;
; 
;       } // end if time to blink
; 
; } // end Blink_Lights
; 
; ///////////////////////////////////////////////////////////////////////////////
; 
; void Energize(void)
; {
; 
; // this function is used to slowly materialize the mechs, it does this by
; // drwing them in separate bitmaps that are of a single color that can
; // be controlled
; 
; static RGB_color color_grey,
;                  color_red,
;                  color_green;
; 
; 
; // test if this is start of sequence
; 
; if (energize_state==0)
;    {
; 
;    // the grey robot
; 
;    color_grey.red    = 0;
;    color_grey.green  = 0;
;    color_grey.blue   = 0;
; 
;    // the red robot
; 
;    color_red.red    = 0;
;    color_red.green  = 0;
;    color_red.blue   = 0;
; 
; 
;    // the grey robot
; 
;    color_green.red    = 0;
;    color_green.green  = 0;
;    color_green.blue   = 0;
; 
; 
;    // energizing has begun
; 
;    energize_state  = 1;
; 
;    Set_Palette_Register(240,(RGB_color_ptr)&color_grey);
;    Set_Palette_Register(241,(RGB_color_ptr)&color_red);
;    Set_Palette_Register(242,(RGB_color_ptr)&color_green);
; 
;    } // end if starting
; else
; if (rand()%2==1)
;    {
;    // update grey mechs
; 
;    ++color_grey.red;
;    ++color_grey.green;
;    ++color_grey.blue;
; 
;    // update red mechs
; 
;    ++color_red.red;
; 
;    // update green mechs
; 
;    ++color_green.green;
; 
;    // update the palette registers
; 
;    Set_Palette_Register(240,(RGB_color_ptr)&color_grey);
; 
;    Set_Palette_Register(241,(RGB_color_ptr)&color_red);
; 
;    Set_Palette_Register(242,(RGB_color_ptr)&color_green);
; 
;    } // end if time to increment color intensity
; 
; } // end Energize
; 
; ///////////////////////////////////////////////////////////////////////////////
; 
; void Start_Wave(void)
; {
; 
; // this function is used to start a wave off
; 
; int x,y,mech_index=0,element, local_wave;
; 
; // reset number of mechs on this level
; 
; num_mechs=0;
; 
; // reset number of mechs killed
; 
; mechs_killed=0;
; 
; // select level
; 
; local_wave = wave_number;
; 
; // test to see if level is too high, if so choose randomly
; 
; if (local_wave>14)
;    {
;    // select wave randomly
; 
;    local_wave = rand()%10 + 5;
; 
;    // decrease the overall attack time of game now
; 
;    attack_time=-10;
; 
;    // test if we overflowed attack time
; 
;    if (attack_time<100)
;       attack_time=100;
; 
;    } // end if did the first 15 waves
; Line 627
					_Initialize_Sound_System:
	*** 0000c4	c8 00 00 00 		enter	OFFSET L01661,OFFSET 0
	*** 0000c8	56 			push	si
	*** 0000c9	57 			push	di
; fp = fffc
; 
; // alias data structure for current wave
; Line 629
; 
; current_wave = waves[local_wave];
; 
; // loop and create mechs
; Line 633
	*** 0000ca	68 52 06 		push	OFFSET L01053
	*** 0000cd	68 55 06 		push	OFFSET L01054
	*** 0000d0	9a 00 00 00 00 		call	FAR PTR _fopen
	*** 0000d5	83 c4 04 		add	sp,OFFSET 4
	*** 0000d8	89 46 fc 		mov	WORD PTR -4[bp],ax
	*** 0000db	3d 00 00 		cmp	ax,OFFSET 0
	*** 0000de	74 03 e9 00 00 		jne	L01052
; 
; Line 634
; for (x=0; x<PATTERN_X_SIZE; x++)
; Line 635
	*** 0000e3	b8 00 00 		mov	ax,OFFSET 0
	*** 0000e6	e9 00 00 		jmp	L01050
;     {
; Line 636
; 
;     for (y=0; y<PATTERN_Y_SIZE; y++)
; Line 638
					L01052:
	*** 0000e9	ff 76 fc 		push	WORD PTR -4[bp]
	*** 0000ec	9a 00 00 00 00 		call	FAR PTR _fclose
	*** 0000f1	83 c4 02 		add	sp,OFFSET 2
;         {
; 
;         // extract element out of database
; 
; Line 642
	*** 0000f4	68 62 06 		push	OFFSET L01056
	*** 0000f7	68 64 06 		push	OFFSET L01057
	*** 0000fa	9a 00 00 00 00 		call	FAR PTR _fopen
	*** 0000ff	83 c4 04 		add	sp,OFFSET 4
	*** 000102	89 46 fc 		mov	WORD PTR -4[bp],ax
	*** 000105	3d 00 00 		cmp	ax,OFFSET 0
	*** 000108	74 03 e9 00 00 		jne	L01055
;         element = current_wave[PATTERN_X_SIZE*y + x];
; Line 643
; 
; Line 644
	*** 00010d	68 6e 06 		push	OFFSET L01058
	*** 000110	9a 00 00 00 00 		call	FAR PTR _printf
	*** 000115	83 c4 02 		add	sp,OFFSET 2
;         // test if this is a live mech
; Line 645
	*** 000118	68 95 06 		push	OFFSET L01059
	*** 00011b	9a 00 00 00 00 		call	FAR PTR _printf
	*** 000120	83 c4 02 		add	sp,OFFSET 2
; 
;         if (element!=0)
; Line 647
;            {
; Line 648
	*** 000123	e9 00 00 		jmp	L01060
					L01055:
; Line 648
; 
; Line 649
;            // set fixed fields
; 
; Line 651
	*** 000126	68 50 06 		push	OFFSET _sound_int
	*** 000129	68 4e 06 		push	OFFSET _sound_port
	*** 00012c	68 c9 06 		push	OFFSET L01061
	*** 00012f	ff 76 fc 		push	WORD PTR -4[bp]
	*** 000132	9a 00 00 00 00 		call	FAR PTR _fscanf
	*** 000137	83 c4 08 		add	sp,OFFSET 8
;            mech_array[num_mechs].x            = x * 32 + PATTERN_XO;
; Line 652
;            mech_array[num_mechs].y            = y * 22 + PATTERN_YO;
; Line 653
	*** 00013a	ff 36 50 06 		push	WORD PTR _sound_int
	*** 00013e	ff 36 4e 06 		push	WORD PTR _sound_port
	*** 000142	68 cf 06 		push	OFFSET L01062
	*** 000145	9a 00 00 00 00 		call	FAR PTR _printf
	*** 00014a	83 c4 06 		add	sp,OFFSET 6
; 
;            mech_array[num_mechs].xv           = 0;
; Line 655
					L01060:
;            mech_array[num_mechs].yv           = 0;
;            mech_array[num_mechs].state_1      = MECH_ALIVE;
;            mech_array[num_mechs].state_2      = MECH_ENERGIZING;
;            mech_array[num_mechs].counter_1    = 0;
; Line 659
	*** 00014d	9a 00 00 00 00 		call	FAR PTR _Voc_Load_Driver
;            mech_array[num_mechs].counter_2    = 0;
;            mech_array[num_mechs].aux_1        = 0;
; Line 661
	*** 000152	a1 4e 06 		mov	ax,WORD PTR _sound_port
	*** 000155	50 			push	ax
	*** 000156	9a 00 00 00 00 		call	FAR PTR _Voc_Set_Port
	*** 00015b	83 c4 02 		add	sp,OFFSET 2
;            mech_array[num_mechs].aux_2        = 0;
; Line 662
	*** 00015e	a1 50 06 		mov	ax,WORD PTR _sound_int
	*** 000161	50 			push	ax
	*** 000162	9a 00 00 00 00 		call	FAR PTR _Voc_Set_IRQ
	*** 000167	83 c4 02 		add	sp,OFFSET 2
;            mech_array[num_mechs].threshold_1  = 0;
; Line 663
	*** 00016a	9a 00 00 00 00 		call	FAR PTR _Voc_Init_Driver
;            mech_array[num_mechs].threshold_2  = 64;
; Line 664
	*** 00016f	9a 00 00 00 00 		call	FAR PTR _Voc_Get_Version
;            mech_array[num_mechs].direction    = 0;
; Line 665
	*** 000174	b8 00 00 		mov	ax,OFFSET _ct_voice_status
	*** 000177	8c da 			mov	dx,ds
	*** 000179	52 			push	dx
	*** 00017a	50 			push	ax
	*** 00017b	9a 00 00 00 00 		call	FAR PTR _Voc_Set_Status_Addr
	*** 000180	83 c4 04 		add	sp,OFFSET 4
;            mech_array[num_mechs].curr_frame   = 9;
; 
;            // set type field
; 
; Line 669
	*** 000183	68 00 00 		push	OFFSET _sound_lengths
	*** 000186	68 0b 07 		push	OFFSET L01063
	*** 000189	9a 00 00 00 00 		call	FAR PTR _Voc_Load_Sound
	*** 00018e	83 c4 04 		add	sp,OFFSET 4
	*** 000191	a3 00 00 		mov	WORD PTR _sound_fx,ax
	*** 000194	89 16 02 00 		mov	WORD PTR _sound_fx+2,dx
;            mech_array[num_mechs].type         = element;
; Line 670
	*** 000198	68 01 00 		push	OFFSET _sound_lengths+1
	*** 00019b	68 17 07 		push	OFFSET L01064
	*** 00019e	9a 00 00 00 00 		call	FAR PTR _Voc_Load_Sound
	*** 0001a3	83 c4 04 		add	sp,OFFSET 4
	*** 0001a6	a3 04 00 		mov	WORD PTR _sound_fx+4,ax
	*** 0001a9	89 16 06 00 		mov	WORD PTR _sound_fx+6,dx
; 
; Line 671
	*** 0001ad	68 02 00 		push	OFFSET _sound_lengths+2
	*** 0001b0	68 21 07 		push	OFFSET L01065
	*** 0001b3	9a 00 00 00 00 		call	FAR PTR _Voc_Load_Sound
	*** 0001b8	83 c4 04 		add	sp,OFFSET 4
	*** 0001bb	a3 08 00 		mov	WORD PTR _sound_fx+8,ax
	*** 0001be	89 16 0a 00 		mov	WORD PTR _sound_fx+10,dx
;            // there is one more mech now
; Line 672
	*** 0001c2	68 03 00 		push	OFFSET _sound_lengths+3
	*** 0001c5	68 2b 07 		push	OFFSET L01066
	*** 0001c8	9a 00 00 00 00 		call	FAR PTR _Voc_Load_Sound
	*** 0001cd	83 c4 04 		add	sp,OFFSET 4
	*** 0001d0	a3 0c 00 		mov	WORD PTR _sound_fx+12,ax
	*** 0001d3	89 16 0e 00 		mov	WORD PTR _sound_fx+14,dx
; 
; Line 673
	*** 0001d7	68 04 00 		push	OFFSET _sound_lengths+4
	*** 0001da	68 35 07 		push	OFFSET L01067
	*** 0001dd	9a 00 00 00 00 		call	FAR PTR _Voc_Load_Sound
	*** 0001e2	83 c4 04 		add	sp,OFFSET 4
	*** 0001e5	a3 10 00 		mov	WORD PTR _sound_fx+16,ax
	*** 0001e8	89 16 12 00 		mov	WORD PTR _sound_fx+18,dx
;            num_mechs++;
; Line 674
	*** 0001ec	68 05 00 		push	OFFSET _sound_lengths+5
	*** 0001ef	68 3e 07 		push	OFFSET L01068
	*** 0001f2	9a 00 00 00 00 		call	FAR PTR _Voc_Load_Sound
	*** 0001f7	83 c4 04 		add	sp,OFFSET 4
	*** 0001fa	a3 14 00 		mov	WORD PTR _sound_fx+20,ax
	*** 0001fd	89 16 16 00 		mov	WORD PTR _sound_fx+22,dx
; 
; Line 675
	*** 000201	68 06 00 		push	OFFSET _sound_lengths+6
	*** 000204	68 49 07 		push	OFFSET L01069
	*** 000207	9a 00 00 00 00 		call	FAR PTR _Voc_Load_Sound
	*** 00020c	83 c4 04 		add	sp,OFFSET 4
	*** 00020f	a3 18 00 		mov	WORD PTR _sound_fx+24,ax
	*** 000212	89 16 1a 00 		mov	WORD PTR _sound_fx+26,dx
;            } // end if a live mech
; Line 676
	*** 000216	68 07 00 		push	OFFSET _sound_lengths+7
	*** 000219	68 53 07 		push	OFFSET L01070
	*** 00021c	9a 00 00 00 00 		call	FAR PTR _Voc_Load_Sound
	*** 000221	83 c4 04 		add	sp,OFFSET 4
	*** 000224	a3 1c 00 		mov	WORD PTR _sound_fx+28,ax
	*** 000227	89 16 1e 00 		mov	WORD PTR _sound_fx+30,dx
; 
;         } // end for y
; Line 678
	*** 00022b	6a 01 			push	OFFSET 1
	*** 00022d	9a 00 00 00 00 		call	FAR PTR _Voc_Set_Speaker
	*** 000232	83 c4 02 		add	sp,OFFSET 2
; 
;     } // end for x
; Line 680
	*** 000235	b8 01 00 		mov	ax,OFFSET 1
	*** 000238	e9 00 00 		jmp	L01050
; 
; // reset energizer colors
; Line 682
; Line 682
					L01050:
	*** 00023b	5f 			pop	di
	*** 00023c	5e 			pop	si
	*** 00023d	c9 			leave
	*** 00023e	cb 			ret	OFFSET 0
Local Size: 4
; Line 0
; 
; energize_state = 0;
; 
; // reset game clock
; 
; game_clock = 0;
; 
; // start things up
; 
; Energize();
; 
; // let's here some noise
; 
; if (player_ships>0)
;     Play_Sound(SOUND_READY);
; 
; 
; } // end Start_Wave
; 
; ///////////////////////////////////////////////////////////////////////////////
; 
; void Init_Mechs(void)
; {
; 
; // this function is used to clear all the mechs and get them ready
; 
; int index;
; 
; for (index=0; index<MAX_NUMBER_MECHS; index++)
;     {
;     // zero out all the fields and allocate the memory
; 
;     mech_array[index].type        = 0;
;     mech_array[index].x           = 0;
;     mech_array[index].y           = 0;
;     mech_array[index].xv          = 0;
;     mech_array[index].yv          = 0;
;     mech_array[index].state_1     = 0;
;     mech_array[index].state_2     = 0;
;     mech_array[index].aux_1       = 0;
;     mech_array[index].aux_2       = 0;
;     mech_array[index].new_state   = 0;
;     mech_array[index].counter_1   = 0;
;     mech_array[index].counter_2   = 0;
;     mech_array[index].threshold_1 = 0;
;     mech_array[index].threshold_2 = 0;
;     mech_array[index].direction   = 0;
;     mech_array[index].curr_frame  = 0;
;     mech_array[index].background  =
;                       (char far *)_fmalloc(sprite_width * sprite_height+1);
; 
;     } // end index
; 
; } // end Init_Mechs
; 
; ///////////////////////////////////////////////////////////////////////////////
; 
; void Delete_Mechs(void)
; {
; 
; int index;
; 
; for (index=0; index<MAX_NUMBER_MECHS; index++)
;     {
;     _ffree(mech_array[index].background);
;     } // end for index
; 
; } // end Delete_Mechs
; 
; ///////////////////////////////////////////////////////////////////////////////
; 
; void Move_Mechs(void)
; {
; 
; // this is an extremely complex function is controls the mechs movement
; // and their state machine transitions.  currently only pattern mode and
; // flock mode are implemented
; 
; int index,                 // loop variable
;     flock_switch=0,        // has the flock switched direction
;     mech_killed_switch=0,  // has there been a death
;     mdx=0,                 // the delta x
;     curr_direction;        // current pattern direction
; 
; static int global_flock=MECH_RIGHT; // used to track the flock's direction
; 
; mech_ptr worker;                    // used as an alias to current mech
; 
; // loop process each mech
; 
; for (index=0; index<num_mechs; index++)
;     {
; 
;     // alias current mech
; 
;     worker = (mech_ptr)&mech_array[index];
; 
;     // test state of mech
; 
;     if (worker->state_1==MECH_ALIVE)
;        {
; 
;        // this is the hard part, based on state perform proper logic
; 
;        switch(worker->state_2)
;              {
; 
;              case MECH_PATTERN: // process pattern mode
;                   {
; 
;                   // test for start of state
; 
;                   if (worker->new_state)
;                      {
;                      // reset new state
; 
;                      worker->new_state=0;
; 
;                      // select a pattern and reset all vars
; 
;                      worker->aux_1     = rand()%NUM_PATTERNS;
; 
;                      // use counter 1 as index into pattern table
; 
;                      worker->counter_1 = 0;
;                      worker->counter_2   = 0;
;                      worker->threshold_2 = 2+rand()%3;
; 
;                      } // end if need to initialize state
; 
;                   // else must be continuing state
; 
;                   // access current direction
; 
;                   curr_direction = patterns[worker->aux_1][worker->counter_1];
; 
;                   // test if we are at end of sequence
; 
;                   if (curr_direction==-1)
;                      {
;                      worker->state_2    = MECH_FLOCK;
;                      worker->new_state  = 1;
;                      break;
; 
;                      } // end if at end
; 
;                   // extract current frame of animation
; 
;                   worker->curr_frame = curr_direction;
; 
;                   // using current direction, compute velocity vector
; 
;                   worker->x+=dirs_x[curr_direction];
;                   worker->y+=dirs_y[curr_direction];
; 
;                   // test if we went too far
; 
;                   if (worker->x > 300 )
;                      {
;                      worker->x = 0;
;                      }
;                   else
;                   if (worker->x < 0)
;                      {
;                      worker->x = 300;
;                      }
; 
;                   if (worker->y >= 120)
;                      worker->y = 120;
;                   else
;                   if (worker->y < 0)
;                      worker->y = 0;
; 
;                   // move to next element in pattern
; 
;                   if (++worker->counter_2 == worker->threshold_2)
;                      {
;                      worker->counter_2=0;
;                      worker->counter_1++;
; 
;                      } // end if time to switch pattern element
; 
; 
;                   // test if we want to fire a missile
; 
;                   if ( (worker->x > (player.x - 60)) &&
;                        (worker->x < (player.x + 80)) &&
;                        (curr_direction>=4)   &&
;                        (curr_direction<=6)   &&
;                        (rand()%10==1) )
;                      {
; 
; 
;                      // start missile with current trajectory
; 
; 
;                      Start_Missile((sprite_ptr)worker,
;                                    worker->x+10,
;                                    worker->y+sprite_height,
;                                    dirs_x[curr_direction]*2,
;                                    dirs_y[curr_direction]*2,
;                                    0x27,
;                                    ENEMY_MISSILE);
; 
;                      } // end if fire missile
; 
; 
;                   } break;
; 
;              case MECH_ATTACK:  // mech attack mode (not implemented)
;                   {
; 
;                   // test for start of state
; 
;                   if (worker->new_state)
;                      {
; 
; 
; 
; 
;                      } // end if need to initialize state
; 
;                   // else must be continuing state
; 
;                   } break;
; 
;              case MECH_RETREAT:  // mech retreat mode (not implemented)
;                   {
; 
;                   // test for start of state
; 
;                   if (worker->new_state)
;                      {
; 
; 
;                      } // end if need to initialize state
; 
; 
;                   // else must be continuing state
; 
;                   } break;
; 
; 
;              case MECH_FLOCK:   // mech flock mode
;                   {
; 
;                   // test for start of state
; 
;                   if (worker->new_state)
;                      {
;                      // reset new state
; 
;                      worker->new_state=0;
; 
;                      // select a pattern and reset all vars
; 
;                      worker->counter_2    = 0;
;                      worker->threshold_2  = 4;
;                      worker->direction    = global_flock;
; 
;                      } // end if need to initialize state
; 
; 
;                   // motion
; 
;                   if (worker->direction==MECH_RIGHT)
;                      {
; 
;                      // do translation
; 
;                      worker->x+=(worker->xv);
; 
;                      // test right boundary
; 
;                      if (worker->x > SCREEN_WIDTH-32)
;                         flock_switch=1;
; 
;                      } // end if moving right
;                   else
;                   if (worker->direction==MECH_LEFT)
;                      {
;                      // do translation
; 
;                      worker->x-=(worker->xv);
; 
;                      // test left boundary
; 
;                      if (worker->x < 32-18)
;                         flock_switch=1;
; 
;                      } // end if moving left
; 
; 
;                   // animation
; 
;                   if (++worker->counter_2 == worker->threshold_2)
;                      {
;                      // reset counter
; 
;                      worker->counter_2 = 0;
; 
;                      if (++worker->curr_frame > 1)
;                         worker->curr_frame=0;
; 
;                      } // end if time to change frames
; 
; 
;                   // weapons
; 
;                   if ( (worker->x > (player.x - 50)) &&
;                        (worker->x < (player.x + 70)) &&
;                        (rand()%50==1) )
;                      {
; 
; 
;                      // compute trajectory
; 
;                      if (worker->x < player.x - 10)
;                         mdx=+3;
;                      else
;                      if (worker->x > player.x + 30)
;                         mdx=-3;
;                      else
;                         mdx=0;
; 
;                      // the the missile with computed trajectory velocity
; 
;                      Start_Missile((sprite_ptr)worker,
;                                    worker->x+10,
;                                    worker->y+sprite_height,
;                                    mdx,
;                                    6,
;                                    0x27,
;                                    ENEMY_MISSILE);
; 
;                      } // end if time to fire
; 
;                   // test if it's time to blow this coup!
; 
;                   if (game_clock>attack_time && rand()%100==1)
;                      {
; 
;                      // switch state to pattern
; 
;                      worker->state_2    = MECH_PATTERN;
;                      worker->new_state  = 1;
; 
;                      if (rand()%5==1)
;                         Play_Sound(SOUND_KILL);
; 
;                      } // end if time to switch to pattern state
; 
;                   } break;
; 
; 
;              case MECH_ROTATING:  // not implemented
;                   {
; 
;                   } break;
; 
; 
;              case MECH_ENERGIZING:  // the initial start up state of mechs
;                   {
; 
;                   // increment energizer time
; 
;                   worker->counter_2++;
; 
;                   // test if we are done energizing
; 
;                   if (worker->counter_2 < worker->threshold_2)
;                      {
;                      // continue energizing
; 
; 
;                      } // end if still energizing
;                   else
;                      {
;                      // need to move to flock state
; 
;                      worker->state_2      = MECH_FLOCK;
;                      worker->xv           = 2;
;                      worker->counter_2    = 0;
;                      worker->threshold_2  = 4;
;                      worker->direction    = MECH_RIGHT;
;                      worker->curr_frame   = 0;
; 
;                      // move out of energizing state
; 
;                      ++energize_state;
; 
;                      } // end else move to flock state
; 
;                   } break;
; 
;              default:break;
; 
;              } // end switch state_2
; 
;        } // end if alive
;     else
;     if (mech_array[index].state_1==MECH_DYING)  // test if mech is dying
;        {
;        // one more frame of death
; 
;        if (++worker->counter_1 > worker->threshold_1)
;           {
; 
;           worker->state_1 = MECH_DEAD;
;           mechs_killed++;
;           mech_killed_switch=1;
; 
;           // were getting killed, let's get more agressive!
; 
;           game_clock+=25;
; 
;           } // end if done dying
; 
;        } // end if alive
; 
;     } // end for index
; 
; // processed all mechs now do any global updates
; 
; // test if we need to flip the whole crew around
; 
; if (flock_switch==1)
; {
; 
; // loop thru all mechs
; 
; for (index=0; index<num_mechs; index++)
;     {
; 
;     // alias pointer to current mech
; 
;     worker = (mech_ptr)&mech_array[index];
; 
;     // test if mech is alive and flocking
; 
;     if (worker->state_1 == MECH_ALIVE &&
;         worker->state_2 == MECH_FLOCK )
;        {
;        // switch directions
; 
;        if (worker->direction==MECH_RIGHT)
;            {
;            global_flock = MECH_LEFT;
;            worker->direction=MECH_LEFT;
;            }
;        else // else must be right
;            {
;            global_flock = MECH_RIGHT;
;            worker->direction=MECH_RIGHT;
;            }
; 
;        } // end if alive
; 
;     } // end for index global
; 
; } // end if global change
; 
; // test if someone has been killed
; 
; if (mech_killed_switch==1)
; {
; 
; // loop thru them all
; 
; for (index=0; index<num_mechs; index++)
;     {
; 
;     // alias for speed
; 
;     worker = (mech_ptr)&mech_array[index];
; 
;     // if it was a flocker then crank up velocity and move down a little
; 
;     if (worker->state_1 == MECH_ALIVE &&
;         worker->state_2 == MECH_FLOCK )
;        {
; 
;        // increase acceleration
; 
;        if (++worker->xv > 6)
;           worker->xv=6;
; 
;        // move them down a little
; 
;        worker->y+=2;
; 
;        } // end if alive
; 
;     } // end for index global
; 
; } // end if global change
; 
; 
; // test if mechs are energizing, if so call energizing function to
; // perform special fX
; 
; if (energize_state==1)
;    Energize();
; 
; } // end Move_Mechs
; 
; ///////////////////////////////////////////////////////////////////////////////
; 
; void Erase_Mechs(void)
; {
; 
; // this function erases all the mechs
; 
; int index;
; 
; // loop thru all mechs
; 
; for (index=0; index<num_mechs; index++)
;     {
; 
;     // based on type of mech use proper animation frames
; 
;     // test if mech is alive
; 
;     if (mech_array[index].state_1 != MECH_DEAD)
;        {
; 
;        // need to know which mech type so correct bitmaps can be used
; 
;        switch(mech_array[index].type)
;              {
; 
;              case MECH_1:   // type one mech
;                   {
;                   robot_1.x          = mech_array[index].x;
;                   robot_1.y          = mech_array[index].y;
;                   robot_1.background = mech_array[index].background;
; 
;                   Erase_Sprite_DB((sprite_ptr)&robot_1);
; 
;                   } break;
; 
;              case MECH_2:   // type two mech
;                   {
;                   robot_2.x          = mech_array[index].x;
;                   robot_2.y          = mech_array[index].y;
;                   robot_2.background = mech_array[index].background;
; 
;                   Erase_Sprite_DB((sprite_ptr)&robot_2);
; 
;                   } break;
; 
;              case MECH_3:   // type three mech
;                   {
;                   robot_3.x          = mech_array[index].x;
;                   robot_3.y          = mech_array[index].y;
;                   robot_3.background = mech_array[index].background;
; 
;                   Erase_Sprite_DB((sprite_ptr)&robot_3);
; 
;                   } break;
; 
;              default:break;
; 
;              } // end switch
; 
;        } // end if mech dead
; 
;     } // end for index
; 
; } // end Erase_Mechs
; 
; ///////////////////////////////////////////////////////////////////////////////
; 
; void Draw_Mechs(void)
; {
; 
; // this function draws the mechs
; 
; int index;
; 
; // process each mech
; 
; for (index=0; index<num_mechs; index++)
;     {
; 
;     // test if mech is alive
; 
;     if (mech_array[index].state_1 != MECH_DEAD)
;        {
; 
;        switch(mech_array[index].type)
;              {
; 
;              case MECH_1:   // type one mech
;                   {
;                   robot_1.x          = mech_array[index].x;
;                   robot_1.y          = mech_array[index].y;
;                   robot_1.curr_frame = mech_array[index].curr_frame;
; 
;                   // test if we should use dying blitter
; 
;                   if (mech_array[index].state_1==MECH_ALIVE)
;                      Draw_Sprite_DB((sprite_ptr)&robot_1);
;                   else // use melter draw
;                      Draw_Sprite_DBM((sprite_ptr)&robot_1);
; 
;                   } break;
; 
;              case MECH_2: // type two mech
;                   {
;                   robot_2.x          = mech_array[index].x;
;                   robot_2.y          = mech_array[index].y;
;                   robot_2.curr_frame = mech_array[index].curr_frame;
; 
;                   // test if we should use dying blitter
; 
;                   if (mech_array[index].state_1==MECH_ALIVE)
;                      Draw_Sprite_DB((sprite_ptr)&robot_2);
;                   else // use melter draw
;                      Draw_Sprite_DBM((sprite_ptr)&robot_2);
; 
;                   } break;
; 
;              case MECH_3:    // type three mech
;                   {
;                   robot_3.x          = mech_array[index].x;
;                   robot_3.y          = mech_array[index].y;
;                   robot_3.curr_frame = mech_array[index].curr_frame;
; 
;                   // test if we should use dying blitter
; 
;                   if (mech_array[index].state_1==MECH_ALIVE)
;                      Draw_Sprite_DB((sprite_ptr)&robot_3);
;                   else // use melter draw
;                      Draw_Sprite_DBM((sprite_ptr)&robot_3);
; 
;                   } break;
; 
;              default:break;
; 
;              } // end switch
; 
;        } // end if mech dead
; 
;     } // end for index
; 
; } // end Draw_Mechs
; 
; //////////////////////////////////////////////////////////////////////////////
; 
; void Behind_Mechs(void)
; {
; // this function scans the background under the mechs
; 
; int index;
; 
; // loop and process all mechs
; 
; for (index=0; index<num_mechs; index++)
;     {
; 
;     // test if mech is alive
; 
;     if (mech_array[index].state_1 != MECH_DEAD)
;        {
; 
;        switch(mech_array[index].type)
;              {
; 
;              case MECH_1:   // type one mech
;                   {
;                   robot_1.x          = mech_array[index].x;
;                   robot_1.y          = mech_array[index].y;
;                   robot_1.background = mech_array[index].background;
; 
;                   Behind_Sprite_DB((sprite_ptr)&robot_1);
; 
;                   } break;
; 
;              case MECH_2:   // type two mech
;                   {
;                   robot_2.x          = mech_array[index].x;
;                   robot_2.y          = mech_array[index].y;
;                   robot_2.background = mech_array[index].background;
; 
;                   Behind_Sprite_DB((sprite_ptr)&robot_2);
; Line 687
					_Close_Sound_System:
	*** 000240	c8 00 00 00 		enter	OFFSET L01662,OFFSET 0
	*** 000244	56 			push	si
	*** 000245	57 			push	di
; 
;                   } break;
; 
; Line 690
	*** 000246	83 3e 4c 06 00 		cmp	WORD PTR _sound_available,OFFSET 0
	*** 00024b	75 03 e9 00 00 		je	L01073
;              case MECH_3:   // type three mech
; Line 691
;                   {
;                   robot_3.x          = mech_array[index].x;
; Line 693
	*** 000250	6a 00 			push	OFFSET 0
	*** 000252	9a 00 00 00 00 		call	FAR PTR _Voc_Set_Speaker
	*** 000257	83 c4 02 		add	sp,OFFSET 2
;                   robot_3.y          = mech_array[index].y;
;                   robot_3.background = mech_array[index].background;
; 
;                   Behind_Sprite_DB((sprite_ptr)&robot_3);
; Line 697
	*** 00025a	ff 36 02 00 		push	WORD PTR _sound_fx+2
	*** 00025e	ff 36 00 00 		push	WORD PTR _sound_fx
	*** 000262	9a 00 00 00 00 		call	FAR PTR _Voc_Unload_Sound
	*** 000267	83 c4 04 		add	sp,OFFSET 4
; 
; Line 698
	*** 00026a	ff 36 06 00 		push	WORD PTR _sound_fx+6
	*** 00026e	ff 36 04 00 		push	WORD PTR _sound_fx+4
	*** 000272	9a 00 00 00 00 		call	FAR PTR _Voc_Unload_Sound
	*** 000277	83 c4 04 		add	sp,OFFSET 4
;                   } break;
; Line 699
	*** 00027a	ff 36 0a 00 		push	WORD PTR _sound_fx+10
	*** 00027e	ff 36 08 00 		push	WORD PTR _sound_fx+8
	*** 000282	9a 00 00 00 00 		call	FAR PTR _Voc_Unload_Sound
	*** 000287	83 c4 04 		add	sp,OFFSET 4
; 
; Line 700
	*** 00028a	ff 36 0e 00 		push	WORD PTR _sound_fx+14
	*** 00028e	ff 36 0c 00 		push	WORD PTR _sound_fx+12
	*** 000292	9a 00 00 00 00 		call	FAR PTR _Voc_Unload_Sound
	*** 000297	83 c4 04 		add	sp,OFFSET 4
;              default:break;
; Line 701
	*** 00029a	ff 36 12 00 		push	WORD PTR _sound_fx+18
	*** 00029e	ff 36 10 00 		push	WORD PTR _sound_fx+16
	*** 0002a2	9a 00 00 00 00 		call	FAR PTR _Voc_Unload_Sound
	*** 0002a7	83 c4 04 		add	sp,OFFSET 4
; 
; Line 702
	*** 0002aa	ff 36 16 00 		push	WORD PTR _sound_fx+22
	*** 0002ae	ff 36 14 00 		push	WORD PTR _sound_fx+20
	*** 0002b2	9a 00 00 00 00 		call	FAR PTR _Voc_Unload_Sound
	*** 0002b7	83 c4 04 		add	sp,OFFSET 4
;              } // end switch
; Line 703
	*** 0002ba	ff 36 1a 00 		push	WORD PTR _sound_fx+26
	*** 0002be	ff 36 18 00 		push	WORD PTR _sound_fx+24
	*** 0002c2	9a 00 00 00 00 		call	FAR PTR _Voc_Unload_Sound
	*** 0002c7	83 c4 04 		add	sp,OFFSET 4
; 
; Line 704
	*** 0002ca	ff 36 1e 00 		push	WORD PTR _sound_fx+30
	*** 0002ce	ff 36 1c 00 		push	WORD PTR _sound_fx+28
	*** 0002d2	9a 00 00 00 00 		call	FAR PTR _Voc_Unload_Sound
	*** 0002d7	83 c4 04 		add	sp,OFFSET 4
;        } // end if mech dead
; 
; Line 706
	*** 0002da	9a 00 00 00 00 		call	FAR PTR _Voc_Terminate_Driver
;     } // end for index
; 
; Line 708
; } // end Behind_Mechs
; 
; Line 710
					L01073:
; Line 710
					L01072:
	*** 0002df	5f 			pop	di
	*** 0002e0	5e 			pop	si
	*** 0002e1	c9 			leave
	*** 0002e2	cb 			ret	OFFSET 0
Local Size: 2
; Line 0
; //////////////////////////////////////////////////////////////////////////////
; 
; void Control_Mother(void)
; {
; 
; // this function controls the mother ship
; 
; if (mother.state == MOTHER_DEAD && rand()%500==1)
;    {
; 
;    // turn on the mother ship
; 
;    mother.state = MOTHER_ALIVE;
; 
;    // select a random direction
; 
;    switch(rand()%2)
;          {
; 
;          case 0:  // right
;                {
; 
;                mother.curr_frame   = MOTHER_RIGHT;
;                mother.motion_speed = 4+rand()%2;
;                mother.x            = 0;
;                mother.y            = 12+rand()%16;
; 
;                } break;
; 
;          case 1: // left
;                {
; 
;                mother.curr_frame   = MOTHER_LEFT;
;                mother.motion_speed = -(4+rand()%2);
;                mother.x            = SCREEN_WIDTH-20;
;                mother.y            = 12+rand()%16;
; 
; 
;                } break;
; 
; 
;          default:break;
; 
;          } // end switch
; 
;     Behind_Sprite_DB((sprite_ptr)&mother);
; 
;    } // end if start mother up
; 
; } // end Control_Mother
; 
; ///////////////////////////////////////////////////////////////////////////////
; 
; void Move_Mother(void)
; {
; 
; // this moves the mother ship if it is alive
; 
; if (mother.state == MOTHER_ALIVE)
;    {
; 
;    // move x at a constant speed
; 
;    mother.x+=mother.motion_speed;
; 
;    // modulate the y position by a cosine wave
; 
;    mother.y+=cos_look[mother.x];
; 
;    // do boundary collisions
; 
;    if (mother.y<0) mother.y=0;
; 
;    if (mother.x > SCREEN_WIDTH-20 || mother.x < 0)
;       mother.state = MOTHER_DEAD;
; 
;    } // end if alive
; 
; } // end Move_Mother
; 
; //////////////////////////////////////////////////////////////////////////////
; 
; void Erase_Mother(void)
; {
; 
; // this function erases the mother ship
; 
; if (mother.state == MOTHER_ALIVE)
;    {
; 
;    Erase_Sprite_DB((sprite_ptr)&mother);
; 
;    } // end if alive
; 
; } // end Erase_Mother
; 
; //////////////////////////////////////////////////////////////////////////////
; 
; void Behind_Mother(void)
; {
; 
; // this function scans the background under the mothership
; 
; if (mother.state == MOTHER_ALIVE)
;    {
; 
;    Behind_Sprite_DB((sprite_ptr)&mother);
; 
;    } // end if alive
; 
; } // end Behind_Mother
; 
; //////////////////////////////////////////////////////////////////////////////
; 
; void Draw_Mother(void)
; {
; 
; // this function draws the mothership
; 
; if (mother.state == MOTHER_ALIVE)
;    {
; 
;    Draw_Sprite_DB((sprite_ptr)&mother);
; 
;    } // end if alive
; 
; } // end Draw_Mother
; 
; //////////////////////////////////////////////////////////////////////////////
; 
; void Init_Stars(void)
; {
; 
; // this function will initialize the star field
; 
; int index;
; 
; // for each star choose a position, plane and color
; 
; for (index=0; index<NUM_STARS; index++)
;     {
;     // initialize each star to a velocity, position and color
; 
;     stars[index].x     = rand()%320;
;     stars[index].y     = rand()%180;
; 
;     // decide what star plane the star is in
; 
;     switch(rand()%3)
;           {
;           case 0: // plane 1- the farthest star plane
;                {
;                // set velocity and color
; 
;                stars[index].plane = 1;
;                stars[index].color = 8;
; 
;                } break;
; 
;           case 1: // plane 2-The medium distance star plane
;                {
; 
;                stars[index].plane = 2;
;                stars[index].color = 7;
; 
;                } break;
; 
;           case 2: // plane 3-The nearest star plane
;                {
; 
;                stars[index].plane = 3;
;                stars[index].color = 15;
; 
;                } break;
; 
;           } // end switch
; 
;     } // end for index
; 
; } // end Init_Stars
; 
; ////////////////////////////////////////////////////////////////////////////////
; 
; void Move_Stars(void)
; {
; 
; int index;
; 
; 
; // move the star fields
; 
; for (index=0; index<NUM_STARS; index++)
;     {
; 
;     // move the star and test for off screen condition
; 
;     // each star is in a different plane so test which plane star is
;     // in so that proper velocity may be used
; 
;     switch(stars[index].plane)
;           {
;           case PLANE_1: // the slowest plane
;                {
;                stars[index].y+=velocity_1;
;                } break;
; 
;           case PLANE_2: // the medium speed plane
;                {
;                stars[index].y+=velocity_2;
;                } break;
; 
;           case PLANE_3: // the fastest plane (near)
;                {
;                stars[index].y+=velocity_3;
;                } break;
; 
;            } // end switch
; 
;     // test if star went off screen
; 
;     if (stars[index].y > 179 )
;        stars[index].y=(stars[index].y-180); // wrap around
;     else
;     if (stars[index].y < 0) // off left edge?
;         stars[index].y = (180+stars[index].y); // wrap around
; 
; 
;     } // end for index
; 
; } // end Move_Stars
; 
; ////////////////////////////////////////////////////////////////////////////////
; 
; void Behind_Stars(void)
; {
; // this function scans the background under the stars
; 
; int index;
; 
; for (index=0; index<NUM_STARS; index++)
;     {
; 
;     stars[index].back = Get_Pixel_DB(stars[index].x,stars[index].y);
; 
;     } // end for index
; 
; } // end Behind_Stars
; 
; ////////////////////////////////////////////////////////////////////////////////
; 
; void Draw_Stars(void)
; {
; 
; // this function draws the stars
; 
; int index;
; 
; for (index=0; index<NUM_STARS; index++)
;     {
; 
;     Plot_Pixel_Fast_DB(stars[index].x,stars[index].y,stars[index].color);
; 
;     } // end for index
; 
; } // end Draw_Stars
; 
; ////////////////////////////////////////////////////////////////////////////////
; 
; void Erase_Stars(void)
; {
; // this function erases the stars
; 
; int index;
; 
; for (index=0; index<NUM_STARS; index++)
;     {
; 
;     Plot_Pixel_Fast_DB(stars[index].x,stars[index].y,stars[index].back);
; 
;     } // end for index
; 
; } // end Erase_Stars
; 
; //////////////////////////////////////////////////////////////////////////////
; 
; void Erase_Missiles(void)
; {
; 
; // this function indexes through all the missiles and if they are active
; // erases them by replacing the background color that was under them
; 
; int index;
; 
; for (index=0; index<NUM_MISSILES; index++)
;     {
; 
;     // is this missile active
; 
;     if (missiles[index].state == MISS_ALIVE)
;        {
; 
;        Plot_Pixel_Fast_DB(missiles[index].x,missiles[index].y,missiles[index].back);
;        Plot_Pixel_Fast_DB(missiles[index].x,missiles[index].y+1,missiles[index].back);
;        Plot_Pixel_Fast_DB(missiles[index].x+1,missiles[index].y,missiles[index].back);
;        Plot_Pixel_Fast_DB(missiles[index].x+1,missiles[index].y+1,missiles[index].back);
; 
;        } // end if alive
; 
;     } // end for index
; 
; } // end Erase_Missiles
; 
; /////////////////////////////////////////////////////////////////////////////
; 
; void Behind_Missiles(void)
; {
; 
; // this function indexes through all the missiles and if they are active
; // scans the background color that is behind them so it can be replaced later
; 
; int index;
; 
; for (index=0; index<NUM_MISSILES; index++)
;     {
; 
;     // is this missile active
; 
;     if (missiles[index].state == MISS_ALIVE)
;        {
; 
;        missiles[index].back = Get_Pixel_DB(missiles[index].x,missiles[index].y);
; 
;        } // end if alive
; 
;     } // end for index
; 
; } // end Behind_Missiles
; 
; /////////////////////////////////////////////////////////////////////////////
; 
; void Draw_Missiles(void)
; {
; 
; // this function indexes through all the missiles and if they are active
; // draws the missile as a bright white pixel on the screen
; 
; int index;
; 
; for (index=0; index<NUM_MISSILES; index++)
;     {
; 
;     // is this missile active
; 
;     if (missiles[index].state == MISS_ALIVE)
;        {
; 
;        Plot_Pixel_Fast_DB(missiles[index].x,missiles[index].y,missiles[index].color);
;        Plot_Pixel_Fast_DB(missiles[index].x,missiles[index].y,missiles[index].color);
;        Plot_Pixel_Fast_DB(missiles[index].x+1,missiles[index].y+1,missiles[index].color);
;        Plot_Pixel_Fast_DB(missiles[index].x+1,missiles[index].y+1,missiles[index].color);
; 
;        } // end if alive
; 
;     } // end for index
; 
; } // end Draw_Missiles
; 
; /////////////////////////////////////////////////////////////////////////////
; 
; void Move_Missiles(void)
; {
; 
; // this function moves the missiles and does all the collision detection
; 
; int index,     // used for loops
;     index2,
;     index_3,
;     pixel_y,   // used during barrier collsion scan
;     delta_x,   // used to help test for bouding box collisions
;     delta_y,
;     miss_x,   // position of missile
;     miss_y,
;     creature_hit=0; // flag to jump out of loop when a creature has been hit
; 
; unsigned char pixel; // pixel extracted from screen used to test for barrier
;                      // collisions
; mech_ptr worker;     // the current mech being processed
; 
; 
; // loop thru all missiles and perform a lot of tests
; 
; for (index=0; index<NUM_MISSILES; index++)
;     {
; 
;     // is missile active
; 
;     if (missiles[index].state == MISS_ALIVE)
;        {
; 
;        // move the missile
; 
;        miss_x = (missiles[index].x += missiles[index].xv);
;        miss_y = (missiles[index].y += missiles[index].yv);
; 
;       // test if it's hit the edge of the screen or a wall
; 
;       if ( (miss_x >= SCREEN_WIDTH) || (miss_x <= 0) ||
;           (miss_y > (SCREEN_HEIGHT-16)) || ( miss_y <=0) )
;          {
;          missiles[index].state = MISS_DEAD;
;          continue;
; 
;          } // end if off edge of screen
; 
;        // test for player->creature collisions
;        else
;        if (mother.state == MOTHER_ALIVE && missiles[index].tag==PLAYER_MISSILE)
;           {
; 
;           delta_x = miss_x - mother.x;
;           delta_y = miss_y - mother.y;
; 
;           // test the bounding box
; 
;           if ( (delta_x >= 0 && delta_x <=sprite_width) &&
;                (delta_y >= 0 && delta_y <=sprite_height))
;              {
; 
;              // kill missile
; 
;              missiles[index].state = MISS_DEAD;
; 
;              // kill mother
; 
;              mother.state = MOTHER_DEAD;
; 
;              // start explosion
; 
;              Start_Explosion(mother.x+10, mother.y+10,1);
; 
;              // give the player some points
; 
;              player_score+=500;
; 
;              // this missile is done so move to next missile
; 
;              continue;
; 
;              } // end if a hit
; 
;           } // end if mother alive
; 
;           // test if missiles hit a creature
; 
;           creature_hit = 0; // reset this flag
; 
;           // make sure missole is players
; 
;           if (missiles[index].tag==PLAYER_MISSILE)
;              {
; 
;              // this missile is from player do test it against all mechs
; 
;              for (index_3=0; index_3<num_mechs && !creature_hit; index_3++)
;                  {
; 
;                  // extract the working mech
; 
;                  worker=(mech_ptr)&mech_array[index_3];
; 
; 
;                  // test if the mech is a live and it isn't energizing
; 
;                  if (worker->state_1==MECH_ALIVE && energize_state>1)
;                     {
; 
;                     // compute deltas
; 
;                     delta_x = miss_x - worker->x;
;                     delta_y = miss_y - worker->y;
; 
; 
;                     // test for collision
; 
;                     if ( (delta_x >= 0 && delta_x <=sprite_width) &&
;                          (delta_y >= 0 && delta_y <=sprite_height))
;                        {
; 
;                        // kill missile
; 
;                        missiles[index].state = MISS_DEAD;
; 
;                        // kill mech
; 
;                        worker->state_1     = MECH_DYING;
;                        worker->counter_1   = 0;
;                        worker->threshold_1 = 8;
; 
;                        creature_hit=1;
; 
;                        Play_Sound(SOUND_EXPL3);
; 
;                        // start explosion
; 
;                        player_score+=50;
; 
;                        } // end if a hit
; 
;                     } // end if worth testing
; 
;                  } // end for index_3
; 
;              } // end if missile was from player
; 
;        // if there was a hit no need to go any further, next itteration
; 
;           if (creature_hit)
;              continue;
; 
;        // test for creature->player collisions
; 
;        if (player.state == PLAYER_ALIVE && missiles[index].tag==ENEMY_MISSILE)
;           {
; 
;           // compute deltas
; 
;           delta_x = miss_x - player.x;
;           delta_y = miss_y - player.y;
; 
;           // test for collision
; 
;           if ( (delta_x >= 0 && delta_x <=sprite_width) &&
;                (delta_y >= 0 && delta_y <=sprite_height))
;              {
; 
;              // reset state of player to dying
; 
;              player.state = PLAYER_DYING;
; 
;              player.anim_clock = 0;
; 
;              // decrease number of ships
; 
;              player_ships--;
; 
;              // kill missile
; 
;              missiles[index].state = MISS_DEAD;
; 
;              // start the players death
; 
;              Start_PDeath();
; 
;              } // end if player hit
; 
;           } // end if player is alive to be hit
; 
;        // test for barrier collisions by scanning the pixels in the near vicinity
;        // to the torpedo
; 
;        for (pixel_y=miss_y; pixel_y<miss_y+8; pixel_y++)
;            {
; 
;            pixel=Get_Pixel_DB(miss_x, pixel_y);
; 
;            if (pixel>=BARRIER_START_COLOR && pixel<=BARRIER_END_COLOR)
;               {
; 
;               // kill missile
; 
;               missiles[index].state = MISS_DEAD;
; 
;               // start explosion
; 
;               Start_Explosion(miss_x, pixel_y,1);
; 
;               // smash barrier a bit
; 
;               for (index2=0; index2<25; index2++)
;                   {
; 
;                   Plot_Pixel_Fast_DB(miss_x-4+rand()%8, pixel_y-4+rand()%8, 0);
; 
;                   } // end for
; 
;               break;
; 
;               } // end if barrier hit
; 
;            } // end for pixel_y
; 
;        } // end if missile alive
; 
;     } // end for index
; 
; } // end Move_Missiles
; 
; /////////////////////////////////////////////////////////////////////////////
; 
; void Start_Missile(sprite_ptr who,
;                    int x,
;                    int y,
;                    int xv,
;                    int yv,
;                    int color,
;                    int tag)
; {
; 
; // this function scans through the missile array and tries to find one that
; // isn't being used.  this function could be more efficient.
; 
; int index;
; 
; // scan for a useable missle
; 
; for (index=0; index<NUM_MISSILES; index++)
;     {
;     // is this missile free?
; 
;     if (missiles[index].state == MISS_DEAD)
;        {
; 
;        // set up fields
; 
;        missiles[index].state = MISS_ALIVE;
;        missiles[index].x     = x;
;        missiles[index].y     = y;
;        missiles[index].xv    = xv;
;        missiles[index].yv    = yv;
;        missiles[index].color = color;
;        missiles[index].back  = Get_Pixel_DB(x,y);
;        missiles[index].tag   = tag;
; 
;        break; // exit loop
; 
;        } // end if found a good one
; 
;     } // end for index
; 
; } // end Start_Missile
; 
; /////////////////////////////////////////////////////////////////////////////
; 
; void Init_Missiles(void)
; {
; // this function just makes sure all the "state" fields of the missiles are
; // dead so that we don't get any strays on start up.  Remember never assume
; // that variables are zeroed on instantiation!
; 
; int index;
; 
; for (index=0; index<NUM_MISSILES; index++)
;     missiles[index].state = MISS_DEAD;
; 
; } // Init_Missiles
; 
; ////////////////////////////////////////////////////////////////////////////
; 
; void Start_Explosion(int x,int y,int speed)
; {
; // this function stars a generic explosion
; int index;
; 
; // scan for a useable explosion
; 
; for (index=0; index<NUM_EXPLOSIONS; index++)
;     {
; 
;     if (explosions[index].state == EXPLOSION_DEAD)
;        {
; 
;        // set up fields
; 
;        explosions[index].state      = EXPLOSION_ALIVE;
;        explosions[index].x          = x-10;
;        explosions[index].y          = y-10;
;        explosions[index].curr_frame = 0;
;        explosions[index].anim_speed = speed;
;        explosions[index].anim_clock = 0;
; 
;        // scan background to be safe
; 
;        Behind_Sprite_DB((sprite_ptr)&explosions[index]);
; 
;        // make sound
; 
;        Play_Sound(SOUND_EXPL2);
; 
;        break; // exit loop
; 
;        } // end if found a good one
; 
;     } // end for index
; 
; } // end Start_Explosion
; 
; /////////////////////////////////////////////////////////////////////////////
; 
; void Behind_Explosions(void)
; {
; 
; // this function scans under the explosions
; 
; int index;
; 
; // scan for a running explosions
; 
; for (index=0; index<NUM_EXPLOSIONS; index++)
;     {
; 
;     if (explosions[index].state == EXPLOSION_ALIVE)
;        {
;        Behind_Sprite_DB((sprite_ptr)&explosions[index]);
; 
;        } // end if found a good one
; Line 715
; sound = 0006
					_Play_Sound:
	*** 0002e4	c8 00 00 00 		enter	OFFSET L01663,OFFSET 0
	*** 0002e8	56 			push	si
	*** 0002e9	57 			push	di
; 
;     } // end for index
; Line 717
	*** 0002ea	83 3e 4c 06 00 		cmp	WORD PTR _sound_available,OFFSET 0
	*** 0002ef	75 03 e9 00 00 		je	L01077
; 
; Line 718
; } // end Behind_Explosions
; Line 719
	*** 0002f4	9a 00 00 00 00 		call	FAR PTR _Voc_Stop_Sound
; 
; Line 720
	*** 0002f9	8b 5e 06 		mov	bx,WORD PTR 6[bp]
	*** 0002fc	8a 87 00 00 		mov	al,BYTE PTR _sound_lengths[bx]
	*** 000300	25 ff 00 		and	ax,OFFSET 255
	*** 000303	50 			push	ax
	*** 000304	8b 5e 06 		mov	bx,WORD PTR 6[bp]
	*** 000307	d1 e3 			shl	bx,OFFSET 1
	*** 000309	d1 e3 			shl	bx,OFFSET 1
	*** 00030b	ff b7 02 00 		push	WORD PTR _sound_fx+2[bx]
	*** 00030f	ff b7 00 00 		push	WORD PTR _sound_fx[bx]
	*** 000313	9a 00 00 00 00 		call	FAR PTR _Voc_Play_Sound
	*** 000318	83 c4 06 		add	sp,OFFSET 6
; /////////////////////////////////////////////////////////////////////////////
; Line 721
; 
; void Erase_Explosions(void)
; Line 723
					L01077:
; Line 723
					L01076:
	*** 00031b	5f 			pop	di
	*** 00031c	5e 			pop	si
	*** 00031d	c9 			leave
	*** 00031e	cb 			ret	OFFSET 0
Local Size: 2
; Line 0
; {
; // this function erases all the current explosions
; int index;
; 
; // scan for a useable explosion
; 
; for (index=0; index<NUM_EXPLOSIONS; index++)
;     {
; 
;     if (explosions[index].state == EXPLOSION_ALIVE)
;        {
;        Erase_Sprite_DB((sprite_ptr)&explosions[index]);
; 
;        } // end if found a good one
; 
;     } // end for index
; 
; } // end Erase_Explosions
; 
; /////////////////////////////////////////////////////////////////////////////
; 
; void Draw_Explosions(void)
; {
; // this function draws the explosion
; 
; int index;
; 
; // scan for a useable explosion
; 
; for (index=0; index<NUM_EXPLOSIONS; index++)
;     {
; 
;     // make sure this explosion is alive
; 
;     if (explosions[index].state == EXPLOSION_ALIVE)
;        {
;        Draw_Sprite_DB((sprite_ptr)&explosions[index]);
; 
;        } // end if found a good one
; 
;     } // end for index
; 
; } // end Draw_Explosions
; 
; /////////////////////////////////////////////////////////////////////////////
; 
; void Animate_Explosions(void)
; {
; // this function steps the explosion thru the frames of animation
; int index;
; 
; // scan for a useable explosion
; 
; for (index=0; index<NUM_EXPLOSIONS; index++)
;     {
;     // test if explosion is alive
;     if (explosions[index].state == EXPLOSION_ALIVE)
;        {
;        // test if it's time to change frames
; 
;        if (++explosions[index].anim_clock == explosions[index].anim_speed)
;           {
;           // is the explosion over?
; 
;           if (++explosions[index].curr_frame == 6)
;              explosions[index].state = EXPLOSION_DEAD;
; 
;           // reset animation clock for future
; 
;           explosions[index].anim_clock = 0;
; 
;           } // end if time ti change frames
; 
;        } // end if found a good one
; 
;     } // end for index
; 
; } // end Animate_Explosions
; 
; //////////////////////////////////////////////////////////////////////////////
; 
; void Init_Explosions(void)
; {
; // reset all explosions
; 
; int index;
; 
; for (index=0; index<NUM_EXPLOSIONS; index++)
;     explosions[index].state = EXPLOSION_DEAD;
; 
; } // Init_Explosions
; 
; ////////////////////////////////////////////////////////////////////////////
; 
; void Display_Instruments(void)
; {
; // this function draws all the information on the control panel
; 
; char buffer[128];
; 
; // show the ships
; 
; sprintf(buffer,"%ld ",player_ships);
; 
; Blit_String_DB(42,189,10,buffer,0);
; 
; // show the score
; 
; sprintf(buffer,"%ld",player_score);
; 
; Blit_String_DB(142,189,10,buffer,0);
; 
; // show the energy
; 
; if (player_energy>=0)
;    {
;    sprintf(buffer,"%ld ",player_energy);
;    Blit_String_DB(276,189,10,buffer,0);
;    }
; else
;    Blit_String_DB(276,189,12,"CHRG",0);
; 
; } // end Display_Instruments
; 
; ///////////////////////////////////////////////////////////////////////////
; 
; void Erase_Instruments(void)
; {
; 
; // this function erases the instruments
; 
; Blit_String_DB(42,189,0," ",0);
; 
; Blit_String_DB(142,189,0,"      ",0);
; 
; Blit_String_DB(276,189,0,"    ",0);
; 
; } // end Erase_Instruments
; 
; ///////////////////////////////////////////////////////////////////////////
; 
; void Load_Background(void)
; {
; // this function loads in thre background imagery
; 
; // load in the background image into the double buffer
; 
; PCX_Init((pcx_picture_ptr)&background_pcx);
; 
; PCX_Load("mechback.pcx", (pcx_picture_ptr)&background_pcx,1);
; 
; // copy the background into the double buffer
; 
; _fmemcpy((char far *)double_buffer,
;          (char far *)(background_pcx.buffer),
;          SCREEN_WIDTH*SCREEN_HEIGHT);
; 
; PCX_Delete((pcx_picture_ptr)&background_pcx);
; 
; } // end Load_Background
; 
; ///////////////////////////////////////////////////////////////////////////
; 
; void Do_Intro(void)
; {
; 
; // this function does the introduction and the instructions
; 
; // load intro screen and display for a few secs.
; 
; PCX_Init((pcx_picture_ptr)&intro_pcx);
; 
; PCX_Load("mechint.pcx", (pcx_picture_ptr)&intro_pcx,1);
; 
; PCX_Show_Buffer((pcx_picture_ptr)&intro_pcx);
; 
; // let user see it
; 
; Delay(50);
; 
; Fade_Lights();
; 
; PCX_Delete((pcx_picture_ptr)&intro_pcx);
; 
; // load instructions and wait for key press
; 
; PCX_Init((pcx_picture_ptr)&intro_pcx);
; 
; PCX_Load("mechins.pcx", (pcx_picture_ptr)&intro_pcx,1);
; 
; PCX_Show_Buffer((pcx_picture_ptr)&intro_pcx);
; 
; // let user see it
; 
; getch();
; 
; Melt();
; 
; PCX_Delete((pcx_picture_ptr)&intro_pcx);
; 
; } // end Do_Intro
; 
; ///////////////////////////////////////////////////////////////////////////
; 
; void Load_Player(void)
; {
; 
; // this function loads in the imagery an initializes the mech
; 
; 
; // load in imagery for player
; 
; PCX_Init((pcx_picture_ptr)&imagery_pcx);
; 
; PCX_Load("mech.pcx", (pcx_picture_ptr)&imagery_pcx,1);
; 
; // initialize player and extract birtmaps
; 
; sprite_width  = 18;
; sprite_height = 18;
; 
; Sprite_Init((sprite_ptr)&player,0,0,0,0,0,0);
; 
; PCX_Grab_Bitmap((pcx_picture_ptr)&imagery_pcx,(sprite_ptr)&player,0,0,3);
; PCX_Grab_Bitmap((pcx_picture_ptr)&imagery_pcx,(sprite_ptr)&player,1,1,3);
; PCX_Grab_Bitmap((pcx_picture_ptr)&imagery_pcx,(sprite_ptr)&player,2,2,3);
; PCX_Grab_Bitmap((pcx_picture_ptr)&imagery_pcx,(sprite_ptr)&player,3,3,3);
; PCX_Grab_Bitmap((pcx_picture_ptr)&imagery_pcx,(sprite_ptr)&player,4,4,3);
; PCX_Grab_Bitmap((pcx_picture_ptr)&imagery_pcx,(sprite_ptr)&player,5,5,3);
; 
; player.x          = 160;
; player.y          = 168;
; player.curr_frame = 0;
; player.state      = PLAYER_ALIVE;
; 
; 
; } // end Load_Player
; 
; ///////////////////////////////////////////////////////////////////////////
; 
; void Load_Mother(void)
; 
; {
; // this function loads up the imagery for the mother ship
; // load up mother ship
; 
; Sprite_Init((sprite_ptr)&mother,0,0,0,0,0,0);
; 
; PCX_Grab_Bitmap((pcx_picture_ptr)&imagery_pcx,(sprite_ptr)&mother,0,0,4);
; PCX_Grab_Bitmap((pcx_picture_ptr)&imagery_pcx,(sprite_ptr)&mother,1,1,4);
; 
; mother.x          = 0;
; mother.y          = 0;
; mother.curr_frame = 0;
; mother.state      = MOTHER_DEAD;
; 
; 
; } // end Load_Mother
; 
; ///////////////////////////////////////////////////////////////////////////
; 
; void Load_Explosions(void)
; {
; // this function loads in the imagery for the explosions
; 
; int index;
; 
; // load data for explosions
; 
; 
; // load in frames for fire
; 
; for (index=0; index<NUM_EXPLOSIONS; index++)
;     {
; 
;     Sprite_Init((sprite_ptr)&explosions[index],0,0,0,0,0,0);
; 
;     PCX_Grab_Bitmap((pcx_picture_ptr)&imagery_pcx,
;                     (sprite_ptr)&explosions[index],0,6,3);
; 
;     PCX_Grab_Bitmap((pcx_picture_ptr)&imagery_pcx,
;                     (sprite_ptr)&explosions[index],1,7,3);
; 
;     PCX_Grab_Bitmap((pcx_picture_ptr)&imagery_pcx,
;                     (sprite_ptr)&explosions[index],2,8,3);
; 
;     PCX_Grab_Bitmap((pcx_picture_ptr)&imagery_pcx,
;                     (sprite_ptr)&explosions[index],3,9,3);
; 
;     PCX_Grab_Bitmap((pcx_picture_ptr)&imagery_pcx,
;                     (sprite_ptr)&explosions[index],4,10,3);
; 
;     PCX_Grab_Bitmap((pcx_picture_ptr)&imagery_pcx,
;                     (sprite_ptr)&explosions[index],5,11,3);
; 
;     } // end for
; 
; } // end Load_Explosions
; 
; ///////////////////////////////////////////////////////////////////////////
; 
; void Load_Mechs(void)
; {
; // this function loads the imagery for the mechs
; 
; int index;
; 
; // load in images for robots
; 
; // initialize the sprites used for mechs
; 
; Sprite_Init((sprite_ptr)&robot_1,0,0,0,0,0,0);
; Sprite_Init((sprite_ptr)&robot_2,0,0,0,0,0,0);
; Sprite_Init((sprite_ptr)&robot_3,0,0,0,0,0,0);
; 
; // zer these fields out for good measure
; 
; robot_1.x          = 0;
; robot_1.y          = 0;
; robot_1.curr_frame = 0;
; 
; robot_2.x          = 0;
; robot_2.y          = 0;
; robot_2.curr_frame = 0;
; 
; robot_3.x          = 0;
; robot_3.y          = 0;
; robot_3.curr_frame = 0;
; 
; // extract all the bitmaps out of pcx file
; 
; for (index=0; index<NUM_ROBOT_FRAMES; index++)
;     {
; 
; 
;     PCX_Grab_Bitmap((pcx_picture_ptr)&imagery_pcx,
;                     (sprite_ptr)&robot_1,index,index,0);
; 
; 
;     PCX_Grab_Bitmap((pcx_picture_ptr)&imagery_pcx,
;                     (sprite_ptr)&robot_2,index,index,1);
; 
; 
;     PCX_Grab_Bitmap((pcx_picture_ptr)&imagery_pcx,
;                     (sprite_ptr)&robot_3,index,index,2);
; 
; 
;     } // end for index
; 
; // delete imagery file
; 
; PCX_Delete((pcx_picture_ptr)&imagery_pcx);
; 
; 
; } // end Load_Mechs
; 
; ///////////////////////////////////////////////////////////////////////////
; 
; void main(int argc,char **argv)
; {
; // this is the main function
; 
; int done=0,       // exit flag for whole system
;     fired=0,      // used to track if a player has fired a missile
;     index;        // used for loop variable
; 
; char buffer[80];  // buffer to hold strings during printing
; 
; printf("\nStarting mechs...");
; 
; // initialize sound system
; 
; sound_available = Initialize_Sound_System();
; 
; Delay(100);
; 
; // set video mode to 320x200 256 color mode
; 
; Set_Video_Mode(VGA256);
; 
; // create a double buffer
; 
; if (!Create_Double_Buffer(SCREEN_HEIGHT))
;    {
;    printf("\nNot enough memory to create double buffer.");
; 
;    } // end if
; 
; // create cosine look up table
; 
; for (index=0; index<320; index++)
;     cos_look[index] = (int)(8*cos(3.14159*5*(float)index/180));
; 
; // clear the double buffer
; 
; Fill_Double_Buffer(0);
; 
; // load the background imagery
; 
; Load_Background();
; 
; // do the introduction
; 
; Do_Intro();
; 
; // install our ISR
; 
; Old_Isr = _dos_getvect(KEYBOARD_INT);
; 
; _dos_setvect(KEYBOARD_INT, New_Key_Int);
; 
; // load the player
; 
; Load_Player();
; 
; // load the mechs
; 
; Load_Mother();
; 
; // load the explosions
; 
; Load_Explosions();
; 
; // load the mechs
; 
; Load_Mechs();
; 
; // set up the current wave
; 
; waves[0]  = wave_0;
; waves[1]  = wave_1;
; waves[2]  = wave_2;
; waves[3]  = wave_3;
; waves[4]  = wave_4;
; waves[5]  = wave_5;
; waves[6]  = wave_6;
; waves[7]  = wave_7;
; waves[8]  = wave_8;
; waves[9]  = wave_9;
; waves[10] = wave_10;
; waves[11] = wave_11;
; waves[12] = wave_12;
; waves[13] = wave_13;
; waves[14] = wave_14;
; 
; current_wave = waves[wave_number];
; 
; // initialize all mechs
; 
; Init_Mechs();
; 
; // initialize starfield
; 
; Init_Stars();
; 
; // initialize the explosions
; 
; Init_Explosions();
; 
; // start the level off
; 
; Start_Wave();
; 
; // scan under mechs
; 
; Behind_Mechs();
; 
; // scan the background under player
; 
; Behind_Sprite_DB((sprite_ptr)&player);
; 
; // scan under the stars
; 
; Behind_Stars();
; 
; // display instruments for first time
; 
; Display_Instruments();
; 
; // main event loop
; 
; while(!done)
;      {
; 
;      // reset all event variables
; 
;      fired = 0 ;
; 
;      // erase all objects
; 
;      Erase_Sprite_DB((sprite_ptr)&player);
; 
;      Erase_Missiles();
; 
;      Erase_Stars();
; 
;      Erase_Mother();
; 
;      Erase_Mechs();
; 
;      Erase_PDeath();
; 
;      Erase_Explosions();
; 
;      Erase_Instruments();
; 
;      // move all objects and trasnform
; 
;      if (player.state==PLAYER_ALIVE)
;         {
; 
;         // wait key was pressed
; 
;         if (key_table[INDEX_RIGHT])
;            {
;            player.x+=PLAYER_X_MOVE;
; 
;            if (player.x > SCREEN_WIDTH-20)
;                player.x = SCREEN_WIDTH-20;
; 
;            } // end if right
; 
;         else
;         if (key_table[INDEX_LEFT])
;            {
; 
;            player.x-=PLAYER_X_MOVE;
; 
;            if (player.x < 0)
;               player.x = 0;
; 
;            } // end if  left
; 
; 
;         if (key_table[INDEX_Q])
;            {
;            done=1;
; 
;            } // end if q
; 
; 
;         if (key_table[INDEX_SPACE])
;            {
;            if (player_gun_state == PLAYER_NOT_FIRING && player_energy>0)
;               {
; 
;               player_gun_state = PLAYER_FIRING;
;               fired = 1;
; 
;               player_energy -= (5+rand()%2);
; 
;               if (player_energy < -100)
;                  player_energy=-100;
; 
;               } // end if not currently firing
; 
;            } // end if space
; 
;         } // end if player alive
; 
;      // move missiles
; 
;      Move_Missiles();
; 
;      Move_Mother();
; 
;      Move_Stars();
; 
;      Move_Mechs();
; 
;      Animate_PDeath();
; 
;      Animate_Explosions();
; 
;      // critical area
; 
;      // do cannon retraction if player has fired
; 
;      if (fired)
;         {
;         Start_Missile((sprite_ptr)&player,
;                       player.x+2,
;                       player.y+4,
;                       0,
;                       -8,
;                       12,
;                       PLAYER_MISSILE);
; 
;         Start_Missile((sprite_ptr)&player,
;                       player.x+15,
;                       player.y+4,
;                       0,
;                       -8,
;                       12,
;                       PLAYER_MISSILE);
; 
;         Play_Sound(SOUND_MISSILE);
; 
;         } // end if fired
; 
;      // do mother ship
; 
;      Control_Mother();
; 
;      // start new wave here
; 
;      if (mechs_killed==num_mechs)
;         {
;         // next wave
; 
;         wave_number++;
; 
;         Start_Wave();
; 
;         // reset mech counter
; 
;         mechs_killed=0;
; 
;         } // end if start next wave
; 
;      // scan background
; 
;      Behind_Sprite_DB((sprite_ptr)&player);
; 
;      Behind_Missiles();
; 
;      Behind_Mother();
; 
;      Behind_Mechs();
; 
;      Behind_Stars();
; 
;      Behind_Explosions();
; 
;      Behind_PDeath();
; 
;      // draw objects
; 
;      // flicker engine
; 
;      if (player.state==PLAYER_ALIVE)
;      {
;      if (player_gun_state==PLAYER_NOT_FIRING)
;         {
; 
;         player.curr_frame = rand()%2;
; 
;         if (++player_energy > 100) player_energy = 100;
; 
; 
;         } // end if not firing
;      else
;         {
;         if (++player.curr_frame > 4)
;            {
;            player.curr_frame = 0;
;            player_gun_state = PLAYER_NOT_FIRING;
;            } // end if done retracting
; 
;         } // end else player is firing so retract
; 
;      } // end if player alive
;    else
;       player.curr_frame = 5;
; 
;      // draw everything
; 
;      Draw_Sprite_DB((sprite_ptr)&player);
; 
;      Draw_Missiles();
; 
;      Draw_Stars();
; 
;      Draw_Explosions();
; 
;      Draw_Mother();
; 
;      Draw_Mechs();
; 
;      Draw_PDeath();
; 
;      Display_Instruments();
; 
;      Blink_Lights();
; 
;      // place double buffer
; 
;      Show_Double_Buffer(double_buffer);
; 
;      // test if player is dead
; 
;      if (player_ships==0 && player.anim_clock >= PLAYER_DEATH_TIME)
;         {
; 
;         sprintf(buffer,"G A M E  O V E R");
; 
;         Blit_String_G(160-64,60,4,buffer,1);
; 
;         sprintf(buffer,"Final Score %ld",player_score);
; 
;         Blit_String_G(160-64,80,1,buffer,1);
; 
;         done=1;
; 
;         } // end if player done
; 
;      // display header for level number
; 
;      else
;      {
;      if (energize_state==1)
;         {
; 
;         sprintf(buffer,"W A V E  %d",wave_number+1);
; 
;         Blit_String_G(160-40,60,10,buffer,1);
; 
;         } // end if need to display level
;      else
;      if (energize_state==2)
;         {
; 
;         // erase words
; 
;         Blit_String_G(160-40,60,0,"             ",0);
; 
;         // move on to sequence over
; 
; Line 728
					_Start_PDeath:
	*** 000320	c8 00 00 00 		enter	OFFSET L01664,OFFSET 0
	*** 000324	56 			push	si
	*** 000325	57 			push	di
; index = fffc
;         energize_state++;
; 
;         } // end if energize over
; 
; Line 732
;      } // end else ok to put up wave
; 
;      // wait a second
; 
; Line 736
	*** 000326	83 3e 78 00 02 		cmp	WORD PTR _player+120,OFFSET 2
	*** 00032b	75 03 e9 00 00 		je	L01080
	*** 000330	e9 00 00 		jmp	L01078
;      // test if this is a really fast machine and either
;      // wait 1/70 of a sec or 1/8 of second
; 
;      if (argc > 1)
; Line 740
					L01080:
	*** 000333	c7 46 fc 00 00 		mov	WORD PTR -4[bp],OFFSET 0
	*** 000338	e9 00 00 		jmp	L01084
					L01081:
;         Delay(1);
; Line 741
;      else
;         Wait_For_Vsync();
; Line 743
	*** 00033b	9a 00 00 00 00 		call	FAR PTR _rand
	*** 000340	b9 09 00 		mov	cx,OFFSET 9
	*** 000343	99 			cwd
	*** 000344	f7 f9 			idiv	cx
	*** 000346	a1 00 00 		mov	ax,WORD PTR _player
	*** 000349	05 05 00 		add	ax,OFFSET 5
	*** 00034c	03 c2 			add	ax,dx
	*** 00034e	89 46 fa 		mov	WORD PTR -6[bp],ax
	*** 000351	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 000355	8b 4e fa 		mov	cx,WORD PTR -6[bp]
	*** 000358	8b d8 			mov	bx,ax
	*** 00035a	89 8f 00 00 		mov	WORD PTR _pdeath[bx],cx
; 
; Line 744
	*** 00035e	9a 00 00 00 00 		call	FAR PTR _rand
	*** 000363	b9 09 00 		mov	cx,OFFSET 9
	*** 000366	99 			cwd
	*** 000367	f7 f9 			idiv	cx
	*** 000369	a1 02 00 		mov	ax,WORD PTR _player+2
	*** 00036c	05 05 00 		add	ax,OFFSET 5
	*** 00036f	03 c2 			add	ax,dx
	*** 000371	89 46 fa 		mov	WORD PTR -6[bp],ax
	*** 000374	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 000378	bb 00 00 		mov	bx,OFFSET _pdeath
	*** 00037b	03 d8 			add	bx,ax
	*** 00037d	8b 46 fa 		mov	ax,WORD PTR -6[bp]
	*** 000380	89 47 02 		mov	WORD PTR 2[bx],ax
;      // update all global counters and timers
; Line 745
	*** 000383	9a 00 00 00 00 		call	FAR PTR _rand
	*** 000388	b9 0b 00 		mov	cx,OFFSET 11
	*** 00038b	99 			cwd
	*** 00038c	f7 f9 			idiv	cx
	*** 00038e	83 c2 fb 		add	dx,OFFSET -5
	*** 000391	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 000395	bb 00 00 		mov	bx,OFFSET _pdeath
	*** 000398	03 d8 			add	bx,ax
	*** 00039a	89 57 04 		mov	WORD PTR 4[bx],dx
; 
; Line 746
	*** 00039d	9a 00 00 00 00 		call	FAR PTR _rand
	*** 0003a2	b9 07 00 		mov	cx,OFFSET 7
	*** 0003a5	99 			cwd
	*** 0003a6	f7 f9 			idiv	cx
	*** 0003a8	b8 fb ff 		mov	ax,OFFSET -5
	*** 0003ab	2b c2 			sub	ax,dx
	*** 0003ad	89 46 fa 		mov	WORD PTR -6[bp],ax
	*** 0003b0	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 0003b4	bb 00 00 		mov	bx,OFFSET _pdeath
	*** 0003b7	03 d8 			add	bx,ax
	*** 0003b9	8b 46 fa 		mov	ax,WORD PTR -6[bp]
	*** 0003bc	89 47 06 		mov	WORD PTR 6[bx],ax
;      game_clock++;
; Line 747
	*** 0003bf	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 0003c3	bb 00 00 		mov	bx,OFFSET _pdeath
	*** 0003c6	03 d8 			add	bx,ax
	*** 0003c8	c6 47 08 89 		mov	BYTE PTR 8[bx],OFFSET 137
; 
; Line 748
	*** 0003cc	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 0003d0	bb 00 00 		mov	bx,OFFSET _pdeath
	*** 0003d3	03 d8 			add	bx,ax
	*** 0003d5	c6 47 09 00 		mov	BYTE PTR 9[bx],OFFSET 0
;      } // end while
; Line 749
	*** 0003d9	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 0003dd	bb 00 00 		mov	bx,OFFSET _pdeath
	*** 0003e0	03 d8 			add	bx,ax
	*** 0003e2	c7 47 0a 00 00 		mov	WORD PTR 10[bx],OFFSET 0
; 
; Line 750
	*** 0003e7	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 0003eb	bb 00 00 		mov	bx,OFFSET _pdeath
	*** 0003ee	03 d8 			add	bx,ax
	*** 0003f0	c7 47 0c 00 00 		mov	WORD PTR 12[bx],OFFSET 0
; // play latter sound
; 
; Line 752
	*** 0003f5	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 0003f9	bb 00 00 		mov	bx,OFFSET _pdeath
	*** 0003fc	03 d8 			add	bx,ax
	*** 0003fe	c7 47 0e 00 00 		mov	WORD PTR 14[bx],OFFSET 0
; Play_Sound(SOUND_END);
; Line 753
	*** 000403	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 000407	bb 00 00 		mov	bx,OFFSET _pdeath
	*** 00040a	03 d8 			add	bx,ax
	*** 00040c	c7 47 10 05 00 		mov	WORD PTR 16[bx],OFFSET 5
; 
; Delay(100);
; Line 755
	*** 000411	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 000415	bb 00 00 		mov	bx,OFFSET _pdeath
	*** 000418	03 d8 			add	bx,ax
	*** 00041a	c7 47 12 00 00 		mov	WORD PTR 18[bx],OFFSET 0
; 
; Line 756
	*** 00041f	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 000423	bb 00 00 		mov	bx,OFFSET _pdeath
	*** 000426	03 d8 			add	bx,ax
	*** 000428	c7 47 14 05 00 		mov	WORD PTR 20[bx],OFFSET 5
; // use one of screen fx as exit
; 
; Fade_Lights();
; Line 759
					L01082:
; Line 759
	*** 00042d	83 46 fc 01 		add	WORD PTR -4[bp],OFFSET 1
					L01084:
	*** 000431	83 7e fc 1e 		cmp	WORD PTR -4[bp],OFFSET 30
	*** 000435	7d 03 e9 01 ff 		jl	L01081
					L01083:
; 
; // reset the video mode back to text
; Line 761
	*** 00043a	6a 01 			push	OFFSET 1
	*** 00043c	9a 00 00 00 00 		call	FAR PTR _Play_Sound
	*** 000441	83 c4 02 		add	sp,OFFSET 2
; 
; Set_Video_Mode(TEXT_MODE);
; Line 763
; Line 763
					L01078:
	*** 000444	5f 			pop	di
	*** 000445	5e 			pop	si
	*** 000446	c9 			leave
	*** 000447	cb 			ret	OFFSET 0
Local Size: 6
; Line 0
; 
; // delete all the mech data
; 
; Delete_Mechs();
; 
; // free the double buffer
; 
; Delete_Double_Buffer();
; 
; // replace old ISR
; 
; _dos_setvect(KEYBOARD_INT, Old_Isr);
; 
; // close sound system
; 
; Close_Sound_System();
; 
; // get the hell out of here!!!!!
; 
; } // end main
; 
; 
ine 768
					_Erase_PDeath:
	*** 000448	c8 00 00 00 		enter	OFFSET L01665,OFFSET 0
	*** 00044c	56 			push	si
	*** 00044d	57 			push	di
; index = fffc
; ; ; ; Line 771
; ; ; ; ; Line 775
	*** 00044e	83 3e 78 00 02 		cmp	WORD PTR _player+120,OFFSET 2
	*** 000453	75 03 e9 00 00 		je	L01087
	*** 000458	e9 00 00 		jmp	L01085
; ; ; ; ; Line 779
					L01087:
	*** 00045b	c7 46 fc 00 00 		mov	WORD PTR -4[bp],OFFSET 0
	*** 000460	e9 00 00 		jmp	L01091
					L01088:
; ; Line 780
; ; ; Line 782
	*** 000463	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 000467	bb 00 00 		mov	bx,OFFSET _pdeath
	*** 00046a	03 d8 			add	bx,ax
	*** 00046c	8a 47 09 		mov	al,BYTE PTR 9[bx]
	*** 00046f	25 ff 00 		and	ax,OFFSET 255
	*** 000472	50 			push	ax
	*** 000473	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 000477	bb 00 00 		mov	bx,OFFSET _pdeath
	*** 00047a	03 d8 			add	bx,ax
	*** 00047c	ff 77 02 		push	WORD PTR 2[bx]
	*** 00047f	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 000483	8b d8 			mov	bx,ax
	*** 000485	ff b7 00 00 		push	WORD PTR _pdeath[bx]
	*** 000489	9a 00 00 00 00 		call	FAR PTR _Plot_Pixel_Fast_DB
	*** 00048e	83 c4 06 		add	sp,OFFSET 6
; ; ; Line 784
					L01089:
; Line 784
	*** 000491	83 46 fc 01 		add	WORD PTR -4[bp],OFFSET 1
					L01091:
	*** 000495	83 7e fc 1e 		cmp	WORD PTR -4[bp],OFFSET 30
	*** 000499	7d 03 e9 c5 ff 		jl	L01088
					L01090:
; ; ; Line 786
; Line 786
					L01085:
	*** 00049e	5f 			pop	di
	*** 00049f	5e 			pop	si
	*** 0004a0	c9 			leave
	*** 0004a1	cb 			ret	OFFSET 0
Local Size: 4
; Line 0
ine 791
					_Animate_PDeath:
	*** 0004a2	c8 00 00 00 		enter	OFFSET L01666,OFFSET 0
	*** 0004a6	56 			push	si
	*** 0004a7	57 			push	di
; index = fffc
; ; ; ; ; ; ; Line 797
; ; ; ; ; Line 801
	*** 0004a8	83 3e 78 00 02 		cmp	WORD PTR _player+120,OFFSET 2
	*** 0004ad	75 03 e9 00 00 		je	L01094
	*** 0004b2	e9 00 00 		jmp	L01092
; ; ; ; ; Line 805
					L01094:
	*** 0004b5	c7 46 fc 00 00 		mov	WORD PTR -4[bp],OFFSET 0
	*** 0004ba	e9 00 00 		jmp	L01098
					L01095:
; ; Line 806
; ; ; ; ; Line 810
	*** 0004bd	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 0004c1	bb 00 00 		mov	bx,OFFSET _pdeath
	*** 0004c4	03 d8 			add	bx,ax
	*** 0004c6	8b 47 04 		mov	ax,WORD PTR 4[bx]
	*** 0004c9	89 46 fa 		mov	WORD PTR -6[bp],ax
	*** 0004cc	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 0004d0	8b 4e fa 		mov	cx,WORD PTR -6[bp]
	*** 0004d3	8b d8 			mov	bx,ax
	*** 0004d5	01 8f 00 00 		add	WORD PTR _pdeath[bx],cx
; ; Line 811
	*** 0004d9	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 0004dd	bb 00 00 		mov	bx,OFFSET _pdeath
	*** 0004e0	03 d8 			add	bx,ax
	*** 0004e2	8b 47 06 		mov	ax,WORD PTR 6[bx]
	*** 0004e5	89 46 fa 		mov	WORD PTR -6[bp],ax
	*** 0004e8	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 0004ec	bb 00 00 		mov	bx,OFFSET _pdeath
	*** 0004ef	03 d8 			add	bx,ax
	*** 0004f1	8b 46 fa 		mov	ax,WORD PTR -6[bp]
	*** 0004f4	01 47 02 		add	WORD PTR 2[bx],ax
; ; ; ; ; ; ; Line 817
	*** 0004f7	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 0004fb	8b d8 			mov	bx,ax
	*** 0004fd	81 bf 00 00 3f 01 	cmp	WORD PTR _pdeath[bx],OFFSET 319
	*** 000503	7f 03 e9 00 00 		jle	L01099
; ; Line 818
; ; Line 819
	*** 000508	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 00050c	8b d8 			mov	bx,ax
	*** 00050e	c7 87 00 00 3f 01 	mov	WORD PTR _pdeath[bx],OFFSET 319
; ; Line 820
; ; Line 821
	*** 000514	e9 00 00 		jmp	L01100
					L01099:
; Line 821
; ; Line 822
	*** 000517	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 00051b	8b d8 			mov	bx,ax
	*** 00051d	83 bf 00 00 00 		cmp	WORD PTR _pdeath[bx],OFFSET 0
	*** 000522	7c 03 e9 00 00 		jge	L01101
; ; Line 823
; ; Line 824
	*** 000527	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 00052b	8b d8 			mov	bx,ax
	*** 00052d	c7 87 00 00 00 00 	mov	WORD PTR _pdeath[bx],OFFSET 0
; ; Line 825
; ; ; ; ; Line 829
					L01101:
					L01100:
	*** 000533	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 000537	bb 00 00 		mov	bx,OFFSET _pdeath
	*** 00053a	03 d8 			add	bx,ax
	*** 00053c	81 7f 02 c7 00 		cmp	WORD PTR 2[bx],OFFSET 199
	*** 000541	7f 03 e9 00 00 		jle	L01102
; ; Line 830
; ; Line 831
	*** 000546	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 00054a	bb 00 00 		mov	bx,OFFSET _pdeath
	*** 00054d	03 d8 			add	bx,ax
	*** 00054f	c7 47 02 c7 00 		mov	WORD PTR 2[bx],OFFSET 199
; ; Line 832
	*** 000554	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 000558	bb 00 00 		mov	bx,OFFSET _pdeath
	*** 00055b	03 d8 			add	bx,ax
	*** 00055d	c7 47 04 00 00 		mov	WORD PTR 4[bx],OFFSET 0
; ; Line 833
	*** 000562	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 000566	bb 00 00 		mov	bx,OFFSET _pdeath
	*** 000569	03 d8 			add	bx,ax
	*** 00056b	c6 47 08 00 		mov	BYTE PTR 8[bx],OFFSET 0
; ; Line 834
; ; Line 835
	*** 00056f	e9 00 00 		jmp	L01103
					L01102:
; Line 835
; ; Line 836
	*** 000572	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 000576	bb 00 00 		mov	bx,OFFSET _pdeath
	*** 000579	03 d8 			add	bx,ax
	*** 00057b	83 7f 02 01 		cmp	WORD PTR 2[bx],OFFSET 1
	*** 00057f	7c 03 e9 00 00 		jge	L01104
; ; Line 837
; ; Line 838
	*** 000584	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 000588	bb 00 00 		mov	bx,OFFSET _pdeath
	*** 00058b	03 d8 			add	bx,ax
	*** 00058d	c7 47 02 01 00 		mov	WORD PTR 2[bx],OFFSET 1
; ; Line 839
; ; ; ; ; Line 843
					L01104:
					L01103:
	*** 000592	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 000596	bb 00 00 		mov	bx,OFFSET _pdeath
	*** 000599	03 d8 			add	bx,ax
	*** 00059b	83 47 0e 01 		add	WORD PTR 14[bx],OFFSET 1
	*** 00059f	8b 47 0e 		mov	ax,WORD PTR 14[bx]
	*** 0005a2	89 46 fa 		mov	WORD PTR -6[bp],ax
	*** 0005a5	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 0005a9	bb 00 00 		mov	bx,OFFSET _pdeath
	*** 0005ac	03 d8 			add	bx,ax
	*** 0005ae	8b 46 fa 		mov	ax,WORD PTR -6[bp]
	*** 0005b1	3b 47 10 		cmp	ax,WORD PTR 16[bx]
	*** 0005b4	74 03 e9 00 00 		jne	L01105
; ; Line 844
; ; ; ; Line 847
	*** 0005b9	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 0005bd	bb 00 00 		mov	bx,OFFSET _pdeath
	*** 0005c0	03 d8 			add	bx,ax
	*** 0005c2	83 47 06 01 		add	WORD PTR 6[bx],OFFSET 1
; ; ; ; ; Line 851
	*** 0005c6	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 0005ca	bb 00 00 		mov	bx,OFFSET _pdeath
	*** 0005cd	03 d8 			add	bx,ax
	*** 0005cf	c7 47 0e 00 00 		mov	WORD PTR 14[bx],OFFSET 0
; ; ; Line 853
; ; ; ; ; Line 857
					L01105:
	*** 0005d4	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 0005d8	bb 00 00 		mov	bx,OFFSET _pdeath
	*** 0005db	03 d8 			add	bx,ax
	*** 0005dd	81 7f 02 c7 00 		cmp	WORD PTR 2[bx],OFFSET 199
	*** 0005e2	7c 03 e9 00 00 		jge	L01106
; ; Line 858
	*** 0005e7	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 0005eb	bb 00 00 		mov	bx,OFFSET _pdeath
	*** 0005ee	03 d8 			add	bx,ax
	*** 0005f0	83 47 12 01 		add	WORD PTR 18[bx],OFFSET 1
	*** 0005f4	8b 47 12 		mov	ax,WORD PTR 18[bx]
	*** 0005f7	89 46 fa 		mov	WORD PTR -6[bp],ax
	*** 0005fa	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 0005fe	bb 00 00 		mov	bx,OFFSET _pdeath
	*** 000601	03 d8 			add	bx,ax
	*** 000603	8b 46 fa 		mov	ax,WORD PTR -6[bp]
	*** 000606	3b 47 14 		cmp	ax,WORD PTR 20[bx]
	*** 000609	74 03 e9 00 00 		jne	L01107
; ; Line 859
; ; ; ; Line 862
	*** 00060e	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 000612	bb 00 00 		mov	bx,OFFSET _pdeath
	*** 000615	03 d8 			add	bx,ax
	*** 000617	80 47 08 01 		add	BYTE PTR 8[bx],OFFSET 1
; ; ; ; ; Line 866
	*** 00061b	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 00061f	bb 00 00 		mov	bx,OFFSET _pdeath
	*** 000622	03 d8 			add	bx,ax
	*** 000624	c7 47 12 00 00 		mov	WORD PTR 18[bx],OFFSET 0
; ; ; Line 868
; ; ; ; ; Line 872
					L01107:
					L01106:
					L01096:
; Line 872
	*** 000629	83 46 fc 01 		add	WORD PTR -4[bp],OFFSET 1
					L01098:
	*** 00062d	83 7e fc 1e 		cmp	WORD PTR -4[bp],OFFSET 30
	*** 000631	7d 03 e9 87 fe 		jl	L01095
					L01097:
; ; ; ; ; Line 876
	*** 000636	83 06 0c 00 01 		add	WORD PTR _player+12,OFFSET 1
	*** 00063b	a1 0c 00 		mov	ax,WORD PTR _player+12
	*** 00063e	3d 78 00 		cmp	ax,OFFSET 120
	*** 000641	74 03 e9 00 00 		jne	L01108
; ; Line 877
; ; ; ; ; Line 881
	*** 000646	c7 06 00 00 a0 00 	mov	WORD PTR _player,OFFSET 160
; ; Line 882
	*** 00064c	c7 06 02 00 a8 00 	mov	WORD PTR _player+2,OFFSET 168
; ; Line 883
	*** 000652	c7 06 74 00 00 00 	mov	WORD PTR _player+116,OFFSET 0
; ; Line 884
	*** 000658	c7 06 78 00 01 00 	mov	WORD PTR _player+120,OFFSET 1
; ; ; ; ; Line 888
	*** 00065e	9a 00 00 00 00 		call	FAR PTR _Init_Missiles
; ; ; ; ; Line 892
	*** 000663	9a 00 00 00 00 		call	FAR PTR _Start_Wave
; ; ; Line 894
; ; ; Line 896
					L01108:
; Line 896
					L01092:
	*** 000668	5f 			pop	di
	*** 000669	5e 			pop	si
	*** 00066a	c9 			leave
	*** 00066b	cb 			ret	OFFSET 0
Local Size: 6
; Line 0
ine 901
					_Behind_PDeath:
	*** 00066c	c8 00 00 00 		enter	OFFSET L01667,OFFSET 0
	*** 000670	56 			push	si
	*** 000671	57 			push	di
; index = fffc
; ; ; Line 903
; ; ; ; ; Line 907
	*** 000672	83 3e 78 00 02 		cmp	WORD PTR _player+120,OFFSET 2
	*** 000677	75 03 e9 00 00 		je	L01111
	*** 00067c	e9 00 00 		jmp	L01109
; ; ; ; ; Line 911
					L01111:
	*** 00067f	c7 46 fc 00 00 		mov	WORD PTR -4[bp],OFFSET 0
	*** 000684	e9 00 00 		jmp	L01115
					L01112:
; ; Line 912
; ; ; Line 914
	*** 000687	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 00068b	bb 00 00 		mov	bx,OFFSET _pdeath
	*** 00068e	03 d8 			add	bx,ax
	*** 000690	ff 77 02 		push	WORD PTR 2[bx]
	*** 000693	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 000697	8b d8 			mov	bx,ax
	*** 000699	ff b7 00 00 		push	WORD PTR _pdeath[bx]
	*** 00069d	9a 00 00 00 00 		call	FAR PTR _Get_Pixel_DB
	*** 0006a2	83 c4 04 		add	sp,OFFSET 4
	*** 0006a5	89 46 fa 		mov	WORD PTR -6[bp],ax
	*** 0006a8	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 0006ac	bb 00 00 		mov	bx,OFFSET _pdeath
	*** 0006af	03 d8 			add	bx,ax
	*** 0006b1	8b 46 fa 		mov	ax,WORD PTR -6[bp]
	*** 0006b4	88 47 09 		mov	BYTE PTR 9[bx],al
; ; ; Line 916
					L01113:
; Line 916
	*** 0006b7	83 46 fc 01 		add	WORD PTR -4[bp],OFFSET 1
					L01115:
	*** 0006bb	83 7e fc 1e 		cmp	WORD PTR -4[bp],OFFSET 30
	*** 0006bf	7d 03 e9 c3 ff 		jl	L01112
					L01114:
; ; ; Line 918
; Line 918
					L01109:
	*** 0006c4	5f 			pop	di
	*** 0006c5	5e 			pop	si
	*** 0006c6	c9 			leave
	*** 0006c7	cb 			ret	OFFSET 0
Local Size: 6
; Line 0
ine 923
					_Draw_PDeath:
	*** 0006c8	c8 00 00 00 		enter	OFFSET L01668,OFFSET 0
	*** 0006cc	56 			push	si
	*** 0006cd	57 			push	di
; index = fffc
; ; ; Line 925
; ; ; ; ; Line 929
	*** 0006ce	83 3e 78 00 02 		cmp	WORD PTR _player+120,OFFSET 2
	*** 0006d3	75 03 e9 00 00 		je	L01118
	*** 0006d8	e9 00 00 		jmp	L01116
; ; ; ; ; Line 933
					L01118:
	*** 0006db	c7 46 fc 00 00 		mov	WORD PTR -4[bp],OFFSET 0
	*** 0006e0	e9 00 00 		jmp	L01122
					L01119:
; ; Line 934
; ; ; Line 936
	*** 0006e3	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 0006e7	bb 00 00 		mov	bx,OFFSET _pdeath
	*** 0006ea	03 d8 			add	bx,ax
	*** 0006ec	8a 47 08 		mov	al,BYTE PTR 8[bx]
	*** 0006ef	25 ff 00 		and	ax,OFFSET 255
	*** 0006f2	50 			push	ax
	*** 0006f3	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 0006f7	bb 00 00 		mov	bx,OFFSET _pdeath
	*** 0006fa	03 d8 			add	bx,ax
	*** 0006fc	ff 77 02 		push	WORD PTR 2[bx]
	*** 0006ff	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 000703	8b d8 			mov	bx,ax
	*** 000705	ff b7 00 00 		push	WORD PTR _pdeath[bx]
	*** 000709	9a 00 00 00 00 		call	FAR PTR _Plot_Pixel_Fast_DB
	*** 00070e	83 c4 06 		add	sp,OFFSET 6
; ; ; Line 938
					L01120:
; Line 938
	*** 000711	83 46 fc 01 		add	WORD PTR -4[bp],OFFSET 1
					L01122:
	*** 000715	83 7e fc 1e 		cmp	WORD PTR -4[bp],OFFSET 30
	*** 000719	7d 03 e9 c5 ff 		jl	L01119
					L01121:
; ; ; Line 940
; Line 940
					L01116:
	*** 00071e	5f 			pop	di
	*** 00071f	5e 			pop	si
	*** 000720	c9 			leave
	*** 000721	cb 			ret	OFFSET 0
Local Size: 4
; Line 0
ine 945
; sprite = 0006
					_Draw_Sprite_DBM:
	*** 000722	c8 00 00 00 		enter	OFFSET L01669,OFFSET 0
	*** 000726	56 			push	si
	*** 000727	57 			push	di
; data = fffc
; work_sprite = fff8
; y = fff6
; x = fff4
; offset = fff2
; work_offset = fff0
; ; ; ; ; ; ; ; ; Line 953
; ; Line 954
	*** 000728	c7 46 f0 00 00 		mov	WORD PTR -16[bp],OFFSET 0
; ; Line 955
; ; ; ; ; Line 959
	*** 00072d	b8 14 00 		mov	ax,OFFSET 20
	*** 000730	8b 5e 06 		mov	bx,WORD PTR 6[bp]
	*** 000733	03 d8 			add	bx,ax
	*** 000735	89 5e ee 		mov	WORD PTR -18[bp],bx
	*** 000738	8b 5e 06 		mov	bx,WORD PTR 6[bp]
	*** 00073b	8b 47 74 		mov	ax,WORD PTR 116[bx]
	*** 00073e	d1 e0 			shl	ax,OFFSET 1
	*** 000740	d1 e0 			shl	ax,OFFSET 1
	*** 000742	8b 5e ee 		mov	bx,WORD PTR -18[bp]
	*** 000745	03 d8 			add	bx,ax
	*** 000747	8b 07 			mov	ax,WORD PTR [bx]
	*** 000749	8b 57 02 		mov	dx,WORD PTR 2[bx]
	*** 00074c	89 46 f8 		mov	WORD PTR -8[bp],ax
	*** 00074f	89 56 fa 		mov	WORD PTR -6[bp],dx
; ; ; ; ; Line 963
	*** 000752	8b 5e 06 		mov	bx,WORD PTR 6[bp]
	*** 000755	8b 47 02 		mov	ax,WORD PTR 2[bx]
	*** 000758	c1 e0 06 		shl	ax,OFFSET 6
	*** 00075b	8b 5e 06 		mov	bx,WORD PTR 6[bp]
	*** 00075e	8b 57 02 		mov	dx,WORD PTR 2[bx]
	*** 000761	c1 e2 08 		shl	dx,OFFSET 8
	*** 000764	03 d0 			add	dx,ax
	*** 000766	8b 5e 06 		mov	bx,WORD PTR 6[bp]
	*** 000769	03 17 			add	dx,WORD PTR [bx]
	*** 00076b	89 56 f2 		mov	WORD PTR -14[bp],dx
; ; ; Line 965
	*** 00076e	c7 46 f6 00 00 		mov	WORD PTR -10[bp],OFFSET 0
	*** 000773	e9 00 00 		jmp	L01135
					L01132:
; ; Line 966
; ; ; ; Line 969
	*** 000776	c7 46 f4 00 00 		mov	WORD PTR -12[bp],OFFSET 0
	*** 00077b	e9 00 00 		jmp	L01139
					L01136:
; ; Line 970
; ; ; ; ; Line 974
	*** 00077e	8b 46 f0 		mov	ax,WORD PTR -16[bp]
	*** 000781	03 46 f4 		add	ax,WORD PTR -12[bp]
	*** 000784	8b 5e f8 		mov	bx,WORD PTR -8[bp]
	*** 000787	8b 4e fa 		mov	cx,WORD PTR -6[bp]
	*** 00078a	03 d8 			add	bx,ax
	*** 00078c	8e c1 			mov	es,cx
	*** 00078e	26 80 3f 00 		cmp	BYTE PTR es:[bx],OFFSET 0
	*** 000792	75 03 e9 00 00 		je	L01140
; ; Line 975
	*** 000797	9a 00 00 00 00 		call	FAR PTR _rand
	*** 00079c	b9 20 00 		mov	cx,OFFSET 32
	*** 00079f	99 			cwd
	*** 0007a0	f7 f9 			idiv	cx
	*** 0007a2	83 c2 20 		add	dx,OFFSET 32
	*** 0007a5	8b 46 f2 		mov	ax,WORD PTR -14[bp]
	*** 0007a8	03 46 f4 		add	ax,WORD PTR -12[bp]
	*** 0007ab	8b 1e 00 00 		mov	bx,WORD PTR _double_buffer
	*** 0007af	8b 0e 02 00 		mov	cx,WORD PTR _double_buffer+2
	*** 0007b3	03 d8 			add	bx,ax
	*** 0007b5	8e c1 			mov	es,cx
	*** 0007b7	26 88 17 		mov	BYTE PTR es:[bx],dl
; ; ; Line 977
					L01140:
					L01137:
; Line 977
	*** 0007ba	83 46 f4 01 		add	WORD PTR -12[bp],OFFSET 1
					L01139:
	*** 0007be	8b 46 f4 		mov	ax,WORD PTR -12[bp]
	*** 0007c1	3b 06 00 00 		cmp	ax,WORD PTR _sprite_width
	*** 0007c5	73 03 e9 b4 ff 		jb	L01136
					L01138:
; ; ; ; ; Line 981
	*** 0007ca	81 46 f2 40 01 		add	WORD PTR -14[bp],OFFSET 320
; ; Line 982
	*** 0007cf	a1 00 00 		mov	ax,WORD PTR _sprite_width
	*** 0007d2	01 46 f0 		add	WORD PTR -16[bp],ax
; ; ; Line 984
					L01133:
; Line 984
	*** 0007d5	83 46 f6 01 		add	WORD PTR -10[bp],OFFSET 1
					L01135:
	*** 0007d9	8b 46 f6 		mov	ax,WORD PTR -10[bp]
	*** 0007dc	3b 06 00 00 		cmp	ax,WORD PTR _sprite_height
	*** 0007e0	73 03 e9 91 ff 		jb	L01132
					L01134:
; ; ; Line 986
; Line 986
					L01125:
	*** 0007e5	5f 			pop	di
	*** 0007e6	5e 			pop	si
	*** 0007e7	c9 			leave
	*** 0007e8	cb 			ret	OFFSET 0
Local Size: 18
; Line 0
ine 991
; x = 0006
; y = 0008
					_Get_Pixel_DB:
	*** 0007ea	c8 00 00 00 		enter	OFFSET L01670,OFFSET 0
	*** 0007ee	56 			push	si
	*** 0007ef	57 			push	di
; ; ; ; ; Line 995
	*** 0007f0	8b 46 08 		mov	ax,WORD PTR 8[bp]
	*** 0007f3	c1 e0 06 		shl	ax,OFFSET 6
	*** 0007f6	8b 56 08 		mov	dx,WORD PTR 8[bp]
	*** 0007f9	c1 e2 08 		shl	dx,OFFSET 8
	*** 0007fc	03 d0 			add	dx,ax
	*** 0007fe	03 56 06 		add	dx,WORD PTR 6[bp]
	*** 000801	8b 1e 00 00 		mov	bx,WORD PTR _double_buffer
	*** 000805	8b 0e 02 00 		mov	cx,WORD PTR _double_buffer+2
	*** 000809	03 da 			add	bx,dx
	*** 00080b	8e c1 			mov	es,cx
	*** 00080d	26 8a 07 		mov	al,BYTE PTR es:[bx]
	*** 000810	e9 00 00 		jmp	L01145
; ; ; Line 997
; Line 997
					L01145:
	*** 000813	5f 			pop	di
	*** 000814	5e 			pop	si
	*** 000815	c9 			leave
	*** 000816	cb 			ret	OFFSET 0
Local Size: 2
; Line 0
ine 1002
; xc = 0006
; yc = 0008
; c = 000a
; color = 000c
; trans_flag = 000e
					_Blit_Char_G:
	*** 000818	c8 00 00 00 		enter	OFFSET L01671,OFFSET 0
	*** 00081c	56 			push	si
	*** 00081d	57 			push	di
; data = fffc
; work_char = fff8
; y = fff6
; x = fff4
; offset = fff2
; bit_mask = fff0
; ; ; ; ; Line 1006
; ; Line 1007
; ; Line 1008
; ; Line 1009
	*** 00081e	c6 46 f0 80 		mov	BYTE PTR -16[bp],OFFSET 128
; ; ; ; ; Line 1013
	*** 000822	8a 46 0a 		mov	al,BYTE PTR 10[bp]
	*** 000825	98 			cbw
	*** 000826	d1 e0 			shl	ax,OFFSET 1
	*** 000828	d1 e0 			shl	ax,OFFSET 1
	*** 00082a	d1 e0 			shl	ax,OFFSET 1
	*** 00082c	8b 0e 00 00 		mov	cx,WORD PTR _rom_char_set
	*** 000830	8b 16 02 00 		mov	dx,WORD PTR _rom_char_set+2
	*** 000834	03 c8 			add	cx,ax
	*** 000836	89 4e f8 		mov	WORD PTR -8[bp],cx
	*** 000839	89 56 fa 		mov	WORD PTR -6[bp],dx
; ; ; ; ; Line 1017
	*** 00083c	8b 46 08 		mov	ax,WORD PTR 8[bp]
	*** 00083f	c1 e0 06 		shl	ax,OFFSET 6
	*** 000842	8b 56 08 		mov	dx,WORD PTR 8[bp]
	*** 000845	c1 e2 08 		shl	dx,OFFSET 8
	*** 000848	03 d0 			add	dx,ax
	*** 00084a	03 56 06 		add	dx,WORD PTR 6[bp]
	*** 00084d	89 56 f2 		mov	WORD PTR -14[bp],dx
; ; ; Line 1019
	*** 000850	c7 46 f6 00 00 		mov	WORD PTR -10[bp],OFFSET 0
	*** 000855	e9 00 00 		jmp	L01166
					L01163:
; ; Line 1020
; ; ; ; Line 1023
	*** 000858	c6 46 f0 80 		mov	BYTE PTR -16[bp],OFFSET 128
; ; ; ; ; Line 1027
	*** 00085c	83 7e f6 04 		cmp	WORD PTR -10[bp],OFFSET 4
	*** 000860	74 03 e9 00 00 		jne	L01167
; ; Line 1028
	*** 000865	83 6e 0c 08 		sub	WORD PTR 12[bp],OFFSET 8
; ; ; Line 1030
					L01167:
	*** 000869	c7 46 f4 00 00 		mov	WORD PTR -12[bp],OFFSET 0
	*** 00086e	e9 00 00 		jmp	L01171
					L01168:
; ; Line 1031
; ; ; ; Line 1034
	*** 000871	8a 46 f0 		mov	al,BYTE PTR -16[bp]
	*** 000874	25 ff 00 		and	ax,OFFSET 255
	*** 000877	c4 5e f8 		les	bx,WORD PTR -8[bp]
	*** 00087a	26 8a 0f 		mov	cl,BYTE PTR es:[bx]
	*** 00087d	89 46 ee 		mov	WORD PTR -18[bp],ax
	*** 000880	8b c1 			mov	ax,cx
	*** 000882	98 			cbw
	*** 000883	8b 4e ee 		mov	cx,WORD PTR -18[bp]
	*** 000886	23 c1 			and	ax,cx
	*** 000888	3d 00 00 		cmp	ax,OFFSET 0
	*** 00088b	75 03 e9 00 00 		je	L01172
; ; Line 1035
	*** 000890	8b 46 0c 		mov	ax,WORD PTR 12[bp]
	*** 000893	8b 4e f2 		mov	cx,WORD PTR -14[bp]
	*** 000896	03 4e f4 		add	cx,WORD PTR -12[bp]
	*** 000899	8b 1e 00 00 		mov	bx,WORD PTR _video_buffer
	*** 00089d	8b 36 02 00 		mov	si,WORD PTR _video_buffer+2
	*** 0008a1	03 d9 			add	bx,cx
	*** 0008a3	8e c6 			mov	es,si
	*** 0008a5	26 88 07 		mov	BYTE PTR es:[bx],al
; ; Line 1036
	*** 0008a8	e9 00 00 		jmp	L01173
					L01172:
; Line 1036
; ; Line 1037
	*** 0008ab	83 7e 0e 00 		cmp	WORD PTR 14[bp],OFFSET 0
	*** 0008af	74 03 e9 00 00 		jne	L01174
; ; Line 1038
	*** 0008b4	8b 46 f2 		mov	ax,WORD PTR -14[bp]
	*** 0008b7	03 46 f4 		add	ax,WORD PTR -12[bp]
	*** 0008ba	8b 1e 00 00 		mov	bx,WORD PTR _video_buffer
	*** 0008be	8b 0e 02 00 		mov	cx,WORD PTR _video_buffer+2
	*** 0008c2	03 d8 			add	bx,ax
	*** 0008c4	8e c1 			mov	es,cx
	*** 0008c6	26 c6 07 00 		mov	BYTE PTR es:[bx],OFFSET 0
; ; ; ; ; ; Line 1043
					L01174:
					L01173:
	*** 0008ca	8a 46 f0 		mov	al,BYTE PTR -16[bp]
	*** 0008cd	25 ff 00 		and	ax,OFFSET 255
	*** 0008d0	d1 f8 			sar	ax,OFFSET 1
	*** 0008d2	88 46 f0 		mov	BYTE PTR -16[bp],al
; ; ; Line 1045
					L01169:
; Line 1045
	*** 0008d5	83 46 f4 01 		add	WORD PTR -12[bp],OFFSET 1
					L01171:
	*** 0008d9	83 7e f4 08 		cmp	WORD PTR -12[bp],OFFSET 8
	*** 0008dd	7d 03 e9 8f ff 		jl	L01168
					L01170:
; ; ; ; ; Line 1049
	*** 0008e2	81 46 f2 40 01 		add	WORD PTR -14[bp],OFFSET 320
; ; Line 1050
	*** 0008e7	83 46 f8 01 		add	WORD PTR -8[bp],OFFSET 1
; ; ; Line 1052
					L01164:
; Line 1052
	*** 0008eb	83 46 f6 01 		add	WORD PTR -10[bp],OFFSET 1
					L01166:
	*** 0008ef	83 7e f6 08 		cmp	WORD PTR -10[bp],OFFSET 8
	*** 0008f3	7d 03 e9 60 ff 		jl	L01163
					L01165:
; ; ; Line 1054
; Line 1054
					L01156:
	*** 0008f8	5f 			pop	di
	*** 0008f9	5e 			pop	si
	*** 0008fa	c9 			leave
	*** 0008fb	cb 			ret	OFFSET 0
Local Size: 18
; Line 0
ine 1059
; x = 0006
; y = 0008
; color = 000a
; string = 000c
; trans_flag = 000e
					_Blit_String_G:
	*** 0008fc	c8 00 00 00 		enter	OFFSET L01672,OFFSET 0
	*** 000900	56 			push	si
	*** 000901	57 			push	di
; index = fffc
; ; ; ; ; Line 1063
; ; ; Line 1065
	*** 000902	c7 46 fc 00 00 		mov	WORD PTR -4[bp],OFFSET 0
	*** 000907	e9 00 00 		jmp	L01187
					L01188:
	*** 00090a	83 46 fc 01 		add	WORD PTR -4[bp],OFFSET 1
					L01187:
	*** 00090e	8b 46 fc 		mov	ax,WORD PTR -4[bp]
	*** 000911	8b 5e 0c 		mov	bx,WORD PTR 12[bp]
	*** 000914	03 d8 			add	bx,ax
	*** 000916	80 3f 00 		cmp	BYTE PTR [bx],OFFSET 0
	*** 000919	75 03 e9 00 00 		je	L01189
; ; Line 1066
; ; ; Line 1068
	*** 00091e	ff 76 0e 		push	WORD PTR 14[bp]
	*** 000921	ff 76 0a 		push	WORD PTR 10[bp]
	*** 000924	8b 46 fc 		mov	ax,WORD PTR -4[bp]
	*** 000927	8b 5e 0c 		mov	bx,WORD PTR 12[bp]
	*** 00092a	03 d8 			add	bx,ax
	*** 00092c	8a 07 			mov	al,BYTE PTR [bx]
	*** 00092e	98 			cbw
	*** 00092f	50 			push	ax
	*** 000930	ff 76 08 		push	WORD PTR 8[bp]
	*** 000933	8b 46 fc 		mov	ax,WORD PTR -4[bp]
	*** 000936	d1 e0 			shl	ax,OFFSET 1
	*** 000938	d1 e0 			shl	ax,OFFSET 1
	*** 00093a	d1 e0 			shl	ax,OFFSET 1
	*** 00093c	03 46 06 		add	ax,WORD PTR 6[bp]
	*** 00093f	50 			push	ax
	*** 000940	9a 00 00 00 00 		call	FAR PTR _Blit_Char_G
	*** 000945	83 c4 0a 		add	sp,OFFSET 10
; ; ; Line 1070
; Line 1070
	*** 000948	e9 bf ff 		jmp	L01188
					L01189:
; ; ; Line 1072
; Line 1072
					L01185:
	*** 00094b	5f 			pop	di
	*** 00094c	5e 			pop	si
	*** 00094d	c9 			leave
	*** 00094e	cb 			ret	OFFSET 0
Local Size: 4
; Line 0
ine 1077
					_Blink_Lights:
	*** 000950	c8 00 00 00 		enter	OFFSET L01673,OFFSET 0
	*** 000954	56 			push	si
	*** 000955	57 			push	di
; ; ; ; Line 1080
; ; Line 1081
; ; ; Line 1083
; ; ; ; ; Line 1087
	*** 000956	83 3e 5e 07 00 		cmp	WORD PTR ?entered_yet@?1??Blink_Lights@@9@9,OFFSET 0
	*** 00095b	74 03 e9 00 00 		jne	L01198
; ; Line 1088
; ; ; ; ; ; Line 1093
	*** 000960	c6 06 00 00 00 		mov	BYTE PTR ?color@?1??Blink_Lights@@9@9,OFFSET 0
; ; Line 1094
	*** 000965	c6 06 01 00 0a 		mov	BYTE PTR ?color@?1??Blink_Lights@@9@9+1,OFFSET 10
; ; Line 1095
	*** 00096a	c6 06 02 00 00 		mov	BYTE PTR ?color@?1??Blink_Lights@@9@9+2,OFFSET 0
; ; ; Line 1097
	*** 00096f	68 00 00 		push	OFFSET ?color@?1??Blink_Lights@@9@9
	*** 000972	68 f3 00 		push	OFFSET 243
	*** 000975	9a 00 00 00 00 		call	FAR PTR _Set_Palette_Register
	*** 00097a	83 c4 04 		add	sp,OFFSET 4
; ; ; ; ; Line 1101
	*** 00097d	c7 06 5e 07 01 00 	mov	WORD PTR ?entered_yet@?1??Blink_Lights@@9@9,OFFSET 1
; ; ; Line 1103
; ; ; ; ; Line 1107
					L01198:
	*** 000983	83 06 5c 07 01 		add	WORD PTR ?clock@?1??Blink_Lights@@9@9,OFFSET 1
; ; ; Line 1109
	*** 000988	83 3e 5c 07 04 		cmp	WORD PTR ?clock@?1??Blink_Lights@@9@9,OFFSET 4
	*** 00098d	74 03 e9 00 00 		jne	L01199
; ; Line 1110
; ; ; ; Line 1113
	*** 000992	c6 06 01 00 ff 		mov	BYTE PTR ?color@?1??Blink_Lights@@9@9+1,OFFSET 255
; ; ; Line 1115
	*** 000997	68 00 00 		push	OFFSET ?color@?1??Blink_Lights@@9@9
	*** 00099a	68 f3 00 		push	OFFSET 243
	*** 00099d	9a 00 00 00 00 		call	FAR PTR _Set_Palette_Register
	*** 0009a2	83 c4 04 		add	sp,OFFSET 4
; ; ; Line 1117
; ; Line 1118
	*** 0009a5	e9 00 00 		jmp	L01200
					L01199:
; Line 1118
; ; Line 1119
	*** 0009a8	83 3e 5c 07 08 		cmp	WORD PTR ?clock@?1??Blink_Lights@@9@9,OFFSET 8
	*** 0009ad	74 03 e9 00 00 		jne	L01201
; ; Line 1120
; ; ; ; ; Line 1124
	*** 0009b2	c6 06 01 00 00 		mov	BYTE PTR ?color@?1??Blink_Lights@@9@9+1,OFFSET 0
; ; ; Line 1126
	*** 0009b7	68 00 00 		push	OFFSET ?color@?1??Blink_Lights@@9@9
	*** 0009ba	68 f3 00 		push	OFFSET 243
	*** 0009bd	9a 00 00 00 00 		call	FAR PTR _Set_Palette_Register
	*** 0009c2	83 c4 04 		add	sp,OFFSET 4
; ; ; Line 1128
	*** 0009c5	c7 06 5c 07 00 00 	mov	WORD PTR ?clock@?1??Blink_Lights@@9@9,OFFSET 0
; ; ; Line 1130
; ; ; Line 1132
					L01201:
					L01200:
; Line 1132
					L01191:
	*** 0009cb	5f 			pop	di
	*** 0009cc	5e 			pop	si
	*** 0009cd	c9 			leave
	*** 0009ce	cb 			ret	OFFSET 0
Local Size: 2
; Line 0
ine 1137
					_Energize:
	*** 0009d0	c8 00 00 00 		enter	OFFSET L01674,OFFSET 0
	*** 0009d4	56 			push	si
	*** 0009d5	57 			push	di
; ; ; ; ; ; ; Line 1143
; ; Line 1144
; ; Line 1145
; ; ; ; ; ; Line 1150
	*** 0009d6	83 3e 26 00 00 		cmp	WORD PTR _energize_state,OFFSET 0
	*** 0009db	74 03 e9 00 00 		jne	L01209
; ; Line 1151
; ; ; ; ; Line 1155
	*** 0009e0	c6 06 04 00 00 		mov	BYTE PTR ?color_grey@?1??Energize@@9@9,OFFSET 0
; ; Line 1156
	*** 0009e5	c6 06 05 00 00 		mov	BYTE PTR ?color_grey@?1??Energize@@9@9+1,OFFSET 0
; ; Line 1157
	*** 0009ea	c6 06 06 00 00 		mov	BYTE PTR ?color_grey@?1??Energize@@9@9+2,OFFSET 0
; ; ; ; ; Line 1161
	*** 0009ef	c6 06 08 00 00 		mov	BYTE PTR ?color_red@?1??Energize@@9@9,OFFSET 0
; ; Line 1162
	*** 0009f4	c6 06 09 00 00 		mov	BYTE PTR ?color_red@?1??Energize@@9@9+1,OFFSET 0
; ; Line 1163
	*** 0009f9	c6 06 0a 00 00 		mov	BYTE PTR ?color_red@?1??Energize@@9@9+2,OFFSET 0
; ; ; ; ; ; Line 1168
	*** 0009fe	c6 06 0c 00 00 		mov	BYTE PTR ?color_green@?1??Energize@@9@9,OFFSET 0
; ; Line 1169
	*** 000a03	c6 06 0d 00 00 		mov	BYTE PTR ?color_green@?1??Energize@@9@9+1,OFFSET 0
; ; Line 1170
	*** 000a08	c6 06 0e 00 00 		mov	BYTE PTR ?color_green@?1??Energize@@9@9+2,OFFSET 0
; ; ; ; ; ; Line 1175
	*** 000a0d	c7 06 26 00 01 00 	mov	WORD PTR _energize_state,OFFSET 1
; ; ; Line 1177
	*** 000a13	68 04 00 		push	OFFSET ?color_grey@?1??Energize@@9@9
	*** 000a16	68 f0 00 		push	OFFSET 240
	*** 000a19	9a 00 00 00 00 		call	FAR PTR _Set_Palette_Register
	*** 000a1e	83 c4 04 		add	sp,OFFSET 4
; ; Line 1178
	*** 000a21	68 08 00 		push	OFFSET ?color_red@?1??Energize@@9@9
	*** 000a24	68 f1 00 		push	OFFSET 241
	*** 000a27	9a 00 00 00 00 		call	FAR PTR _Set_Palette_Register
	*** 000a2c	83 c4 04 		add	sp,OFFSET 4
; ; Line 1179
	*** 000a2f	68 0c 00 		push	OFFSET ?color_green@?1??Energize@@9@9
	*** 000a32	68 f2 00 		push	OFFSET 242
	*** 000a35	9a 00 00 00 00 		call	FAR PTR _Set_Palette_Register
	*** 000a3a	83 c4 04 		add	sp,OFFSET 4
; ; ; Line 1181
; ; Line 1182
	*** 000a3d	e9 00 00 		jmp	L01210
					L01209:
; Line 1182
; ; Line 1183
	*** 000a40	9a 00 00 00 00 		call	FAR PTR _rand
	*** 000a45	b9 02 00 		mov	cx,OFFSET 2
	*** 000a48	99 			cwd
	*** 000a49	f7 f9 			idiv	cx
	*** 000a4b	83 fa 01 		cmp	dx,OFFSET 1
	*** 000a4e	74 03 e9 00 00 		jne	L01211
; ; Line 1184
; ; ; ; Line 1187
	*** 000a53	80 06 04 00 01 		add	BYTE PTR ?color_grey@?1??Energize@@9@9,OFFSET 1
; ; Line 1188
	*** 000a58	80 06 05 00 01 		add	BYTE PTR ?color_grey@?1??Energize@@9@9+1,OFFSET 1
; ; Line 1189
	*** 000a5d	80 06 06 00 01 		add	BYTE PTR ?color_grey@?1??Energize@@9@9+2,OFFSET 1
; ; ; ; ; Line 1193
	*** 000a62	80 06 08 00 01 		add	BYTE PTR ?color_red@?1??Energize@@9@9,OFFSET 1
; ; ; ; ; Line 1197
	*** 000a67	80 06 0d 00 01 		add	BYTE PTR ?color_green@?1??Energize@@9@9+1,OFFSET 1
; ; ; ; ; Line 1201
	*** 000a6c	68 04 00 		push	OFFSET ?color_grey@?1??Energize@@9@9
	*** 000a6f	68 f0 00 		push	OFFSET 240
	*** 000a72	9a 00 00 00 00 		call	FAR PTR _Set_Palette_Register
	*** 000a77	83 c4 04 		add	sp,OFFSET 4
; ; ; Line 1203
	*** 000a7a	68 08 00 		push	OFFSET ?color_red@?1??Energize@@9@9
	*** 000a7d	68 f1 00 		push	OFFSET 241
	*** 000a80	9a 00 00 00 00 		call	FAR PTR _Set_Palette_Register
	*** 000a85	83 c4 04 		add	sp,OFFSET 4
; ; ; Line 1205
	*** 000a88	68 0c 00 		push	OFFSET ?color_green@?1??Energize@@9@9
	*** 000a8b	68 f2 00 		push	OFFSET 242
	*** 000a8e	9a 00 00 00 00 		call	FAR PTR _Set_Palette_Register
	*** 000a93	83 c4 04 		add	sp,OFFSET 4
; ; ; Line 1207
; ; ; Line 1209
					L01211:
					L01210:
; Line 1209
					L01202:
	*** 000a96	5f 			pop	di
	*** 000a97	5e 			pop	si
	*** 000a98	c9 			leave
	*** 000a99	cb 			ret	OFFSET 0
Local Size: 2
; Line 0
ine 1214
					_Start_Wave:
	*** 000a9a	c8 00 00 00 		enter	OFFSET L01675,OFFSET 0
	*** 000a9e	56 			push	si
	*** 000a9f	57 			push	di
; element = fffc
; y = fffa
; mech_index = fff8
; x = fff6
; local_wave = fff4
; ; ; ; ; Line 1218
	*** 000aa0	c7 46 f8 00 00 		mov	WORD PTR -8[bp],OFFSET 0
; ; ; ; ; Line 1222
	*** 000aa5	c7 06 28 00 00 00 	mov	WORD PTR _num_mechs,OFFSET 0
; ; ; ; ; Line 1226
	*** 000aab	c7 06 2c 00 00 00 	mov	WORD PTR _mechs_killed,OFFSET 0
; ; ; ; ; Line 1230
	*** 000ab1	a1 2a 00 		mov	ax,WORD PTR _wave_number
	*** 000ab4	89 46 f4 		mov	WORD PTR -12[bp],ax
; ; ; ; ; Line 1234
	*** 000ab7	83 7e f4 0e 		cmp	WORD PTR -12[bp],OFFSET 14
	*** 000abb	7f 03 e9 00 00 		jle	L01218
; ; Line 1235
; ; ; ; Line 1238
	*** 000ac0	9a 00 00 00 00 		call	FAR PTR _rand
	*** 000ac5	b9 0a 00 		mov	cx,OFFSET 10
	*** 000ac8	99 			cwd
	*** 000ac9	f7 f9 			idiv	cx
	*** 000acb	83 c2 05 		add	dx,OFFSET 5
	*** 000ace	89 56 f4 		mov	WORD PTR -12[bp],dx
; ; ; ; ; Line 1242
	*** 000ad1	c7 06 0c 00 f6 ff 	mov	WORD PTR _attack_time,OFFSET -10
	*** 000ad7	c7 06 0e 00 ff ff 	mov	WORD PTR _attack_time+2,OFFSET -1
; ; ; ; ; Line 1246
	*** 000add	83 3e 0e 00 00 		cmp	WORD PTR _attack_time+2,OFFSET 0
	*** 000ae2	7e 03 e9 00 00 		jg	L01219
	*** 000ae7	7d 03 e9 00 00 		jl	L01676
	*** 000aec	83 3e 0c 00 64 		cmp	WORD PTR _attack_time,OFFSET 100
	*** 000af1	72 03 e9 00 00 		jae	L01219
					L01676:
; ; Line 1247
	*** 000af6	c7 06 0c 00 64 00 	mov	WORD PTR _attack_time,OFFSET 100
	*** 000afc	c7 06 0e 00 00 00 	mov	WORD PTR _attack_time+2,OFFSET 0
; ; ; Line 1249
					L01219:
; ; ; ; ; Line 1253
					L01218:
	*** 000b02	8b 5e f4 		mov	bx,WORD PTR -12[bp]
	*** 000b05	d1 e3 			shl	bx,OFFSET 1
	*** 000b07	8b 87 00 00 		mov	ax,WORD PTR _waves[bx]
	*** 000b0b	a3 00 00 		mov	WORD PTR _current_wave,ax
; ; ; ; ; Line 1257
	*** 000b0e	c7 46 f6 00 00 		mov	WORD PTR -10[bp],OFFSET 0
	*** 000b13	e9 00 00 		jmp	L01223
					L01220:
; ; Line 1258
; ; ; Line 1260
	*** 000b16	c7 46 fa 00 00 		mov	WORD PTR -6[bp],OFFSET 0
	*** 000b1b	e9 00 00 		jmp	L01227
					L01224:
; ; Line 1261
; ; ; ; ; Line 1265
	*** 000b1e	6b 46 fa 07 		_imul3 	ax,WORD PTR -6[bp],OFFSET 7
	*** 000b22	03 46 f6 		add	ax,WORD PTR -10[bp]
	*** 000b25	d1 e0 			shl	ax,OFFSET 1
	*** 000b27	8b 1e 00 00 		mov	bx,WORD PTR _current_wave
	*** 000b2b	03 d8 			add	bx,ax
	*** 000b2d	8b 07 			mov	ax,WORD PTR [bx]
	*** 000b2f	89 46 fc 		mov	WORD PTR -4[bp],ax
; ; ; ; ; Line 1269
	*** 000b32	83 7e fc 00 		cmp	WORD PTR -4[bp],OFFSET 0
	*** 000b36	75 03 e9 00 00 		je	L01228
; ; Line 1270
; ; ; ; ; Line 1274
	*** 000b3b	8b 46 f6 		mov	ax,WORD PTR -10[bp]
	*** 000b3e	c1 e0 05 		shl	ax,OFFSET 5
	*** 000b41	05 30 00 		add	ax,OFFSET 48
	*** 000b44	89 46 f2 		mov	WORD PTR -14[bp],ax
	*** 000b47	6b 06 28 00 24 		_imul3 	ax,WORD PTR _num_mechs,OFFSET 36
	*** 000b4c	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 000b4f	03 d8 			add	bx,ax
	*** 000b51	8b 46 f2 		mov	ax,WORD PTR -14[bp]
	*** 000b54	89 47 02 		mov	WORD PTR 2[bx],ax
; ; Line 1275
	*** 000b57	6b 46 fa 16 		_imul3 	ax,WORD PTR -6[bp],OFFSET 22
	*** 000b5b	05 10 00 		add	ax,OFFSET 16
	*** 000b5e	89 46 f2 		mov	WORD PTR -14[bp],ax
	*** 000b61	6b 06 28 00 24 		_imul3 	ax,WORD PTR _num_mechs,OFFSET 36
	*** 000b66	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 000b69	03 d8 			add	bx,ax
	*** 000b6b	8b 46 f2 		mov	ax,WORD PTR -14[bp]
	*** 000b6e	89 47 04 		mov	WORD PTR 4[bx],ax
; ; ; Line 1277
	*** 000b71	6b 06 28 00 24 		_imul3 	ax,WORD PTR _num_mechs,OFFSET 36
	*** 000b76	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 000b79	03 d8 			add	bx,ax
	*** 000b7b	c7 47 06 00 00 		mov	WORD PTR 6[bx],OFFSET 0
; ; Line 1278
	*** 000b80	6b 06 28 00 24 		_imul3 	ax,WORD PTR _num_mechs,OFFSET 36
	*** 000b85	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 000b88	03 d8 			add	bx,ax
	*** 000b8a	c7 47 08 00 00 		mov	WORD PTR 8[bx],OFFSET 0
; ; Line 1279
	*** 000b8f	6b 06 28 00 24 		_imul3 	ax,WORD PTR _num_mechs,OFFSET 36
	*** 000b94	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 000b97	03 d8 			add	bx,ax
	*** 000b99	c7 47 0a 01 00 		mov	WORD PTR 10[bx],OFFSET 1
; ; Line 1280
	*** 000b9e	6b 06 28 00 24 		_imul3 	ax,WORD PTR _num_mechs,OFFSET 36
	*** 000ba3	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 000ba6	03 d8 			add	bx,ax
	*** 000ba8	c7 47 0c 07 00 		mov	WORD PTR 12[bx],OFFSET 7
; ; Line 1281
	*** 000bad	6b 06 28 00 24 		_imul3 	ax,WORD PTR _num_mechs,OFFSET 36
	*** 000bb2	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 000bb5	03 d8 			add	bx,ax
	*** 000bb7	c7 47 0e 00 00 		mov	WORD PTR 14[bx],OFFSET 0
; ; Line 1282
	*** 000bbc	6b 06 28 00 24 		_imul3 	ax,WORD PTR _num_mechs,OFFSET 36
	*** 000bc1	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 000bc4	03 d8 			add	bx,ax
	*** 000bc6	c7 47 10 00 00 		mov	WORD PTR 16[bx],OFFSET 0
; ; Line 1283
	*** 000bcb	6b 06 28 00 24 		_imul3 	ax,WORD PTR _num_mechs,OFFSET 36
	*** 000bd0	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 000bd3	03 d8 			add	bx,ax
	*** 000bd5	c7 47 16 00 00 		mov	WORD PTR 22[bx],OFFSET 0
; ; Line 1284
	*** 000bda	6b 06 28 00 24 		_imul3 	ax,WORD PTR _num_mechs,OFFSET 36
	*** 000bdf	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 000be2	03 d8 			add	bx,ax
	*** 000be4	c7 47 18 00 00 		mov	WORD PTR 24[bx],OFFSET 0
; ; Line 1285
	*** 000be9	6b 06 28 00 24 		_imul3 	ax,WORD PTR _num_mechs,OFFSET 36
	*** 000bee	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 000bf1	03 d8 			add	bx,ax
	*** 000bf3	c7 47 12 00 00 		mov	WORD PTR 18[bx],OFFSET 0
; ; Line 1286
	*** 000bf8	6b 06 28 00 24 		_imul3 	ax,WORD PTR _num_mechs,OFFSET 36
	*** 000bfd	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 000c00	03 d8 			add	bx,ax
	*** 000c02	c7 47 14 40 00 		mov	WORD PTR 20[bx],OFFSET 64
; ; Line 1287
	*** 000c07	6b 06 28 00 24 		_imul3 	ax,WORD PTR _num_mechs,OFFSET 36
	*** 000c0c	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 000c0f	03 d8 			add	bx,ax
	*** 000c11	c7 47 1c 00 00 		mov	WORD PTR 28[bx],OFFSET 0
; ; Line 1288
	*** 000c16	6b 06 28 00 24 		_imul3 	ax,WORD PTR _num_mechs,OFFSET 36
	*** 000c1b	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 000c1e	03 d8 			add	bx,ax
	*** 000c20	c7 47 1e 09 00 		mov	WORD PTR 30[bx],OFFSET 9
; ; ; ; ; Line 1292
	*** 000c25	6b 06 28 00 24 		_imul3 	ax,WORD PTR _num_mechs,OFFSET 36
	*** 000c2a	8b 4e fc 		mov	cx,WORD PTR -4[bp]
	*** 000c2d	8b d8 			mov	bx,ax
	*** 000c2f	89 8f 00 00 		mov	WORD PTR _mech_array[bx],cx
; ; ; ; ; Line 1296
	*** 000c33	83 06 28 00 01 		add	WORD PTR _num_mechs,OFFSET 1
; ; ; Line 1298
; ; ; Line 1300
					L01228:
					L01225:
; Line 1300
	*** 000c38	83 46 fa 01 		add	WORD PTR -6[bp],OFFSET 1
					L01227:
	*** 000c3c	83 7e fa 05 		cmp	WORD PTR -6[bp],OFFSET 5
	*** 000c40	7d 03 e9 d9 fe 		jl	L01224
					L01226:
; ; ; Line 1302
					L01221:
; Line 1302
	*** 000c45	83 46 f6 01 		add	WORD PTR -10[bp],OFFSET 1
					L01223:
	*** 000c49	83 7e f6 07 		cmp	WORD PTR -10[bp],OFFSET 7
	*** 000c4d	7d 03 e9 c4 fe 		jl	L01220
					L01222:
; ; ; ; ; Line 1306
	*** 000c52	c7 06 26 00 00 00 	mov	WORD PTR _energize_state,OFFSET 0
; ; ; ; ; Line 1310
	*** 000c58	c7 06 08 00 00 00 	mov	WORD PTR _game_clock,OFFSET 0
	*** 000c5e	c7 06 0a 00 00 00 	mov	WORD PTR _game_clock+2,OFFSET 0
; ; ; ; ; Line 1314
	*** 000c64	9a 00 00 00 00 		call	FAR PTR _Energize
; ; ; ; ; Line 1318
	*** 000c69	83 3e 18 00 00 		cmp	WORD PTR _player_ships+2,OFFSET 0
	*** 000c6e	7d 03 e9 00 00 		jl	L01229
	*** 000c73	7e 03 e9 00 00 		jg	L01677
	*** 000c78	83 3e 16 00 00 		cmp	WORD PTR _player_ships,OFFSET 0
	*** 000c7d	77 03 e9 00 00 		jbe	L01229
					L01677:
; ; Line 1319
	*** 000c82	6a 06 			push	OFFSET 6
	*** 000c84	9a 00 00 00 00 		call	FAR PTR _Play_Sound
	*** 000c89	83 c4 02 		add	sp,OFFSET 2
; ; ; ; Line 1322
					L01229:
; Line 1322
					L01212:
	*** 000c8c	5f 			pop	di
	*** 000c8d	5e 			pop	si
	*** 000c8e	c9 			leave
	*** 000c8f	cb 			ret	OFFSET 0
Local Size: 14
; Line 0
ine 1327
					_Init_Mechs:
	*** 000c90	c8 00 00 00 		enter	OFFSET L01678,OFFSET 0
	*** 000c94	56 			push	si
	*** 000c95	57 			push	di
; index = fffc
; ; ; ; ; Line 1331
; ; ; Line 1333
	*** 000c96	c7 46 fc 00 00 		mov	WORD PTR -4[bp],OFFSET 0
	*** 000c9b	e9 00 00 		jmp	L01235
					L01232:
; ; Line 1334
; ; ; ; Line 1337
	*** 000c9e	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 000ca2	8b d8 			mov	bx,ax
	*** 000ca4	c7 87 00 00 00 00 	mov	WORD PTR _mech_array[bx],OFFSET 0
; ; Line 1338
	*** 000caa	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 000cae	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 000cb1	03 d8 			add	bx,ax
	*** 000cb3	c7 47 02 00 00 		mov	WORD PTR 2[bx],OFFSET 0
; ; Line 1339
	*** 000cb8	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 000cbc	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 000cbf	03 d8 			add	bx,ax
	*** 000cc1	c7 47 04 00 00 		mov	WORD PTR 4[bx],OFFSET 0
; ; Line 1340
	*** 000cc6	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 000cca	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 000ccd	03 d8 			add	bx,ax
	*** 000ccf	c7 47 06 00 00 		mov	WORD PTR 6[bx],OFFSET 0
; ; Line 1341
	*** 000cd4	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 000cd8	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 000cdb	03 d8 			add	bx,ax
	*** 000cdd	c7 47 08 00 00 		mov	WORD PTR 8[bx],OFFSET 0
; ; Line 1342
	*** 000ce2	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 000ce6	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 000ce9	03 d8 			add	bx,ax
	*** 000ceb	c7 47 0a 00 00 		mov	WORD PTR 10[bx],OFFSET 0
; ; Line 1343
	*** 000cf0	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 000cf4	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 000cf7	03 d8 			add	bx,ax
	*** 000cf9	c7 47 0c 00 00 		mov	WORD PTR 12[bx],OFFSET 0
; ; Line 1344
	*** 000cfe	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 000d02	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 000d05	03 d8 			add	bx,ax
	*** 000d07	c7 47 16 00 00 		mov	WORD PTR 22[bx],OFFSET 0
; ; Line 1345
	*** 000d0c	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 000d10	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 000d13	03 d8 			add	bx,ax
	*** 000d15	c7 47 18 00 00 		mov	WORD PTR 24[bx],OFFSET 0
; ; Line 1346
	*** 000d1a	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 000d1e	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 000d21	03 d8 			add	bx,ax
	*** 000d23	c7 47 1a 00 00 		mov	WORD PTR 26[bx],OFFSET 0
; ; Line 1347
	*** 000d28	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 000d2c	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 000d2f	03 d8 			add	bx,ax
	*** 000d31	c7 47 0e 00 00 		mov	WORD PTR 14[bx],OFFSET 0
; ; Line 1348
	*** 000d36	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 000d3a	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 000d3d	03 d8 			add	bx,ax
	*** 000d3f	c7 47 10 00 00 		mov	WORD PTR 16[bx],OFFSET 0
; ; Line 1349
	*** 000d44	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 000d48	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 000d4b	03 d8 			add	bx,ax
	*** 000d4d	c7 47 12 00 00 		mov	WORD PTR 18[bx],OFFSET 0
; ; Line 1350
	*** 000d52	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 000d56	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 000d59	03 d8 			add	bx,ax
	*** 000d5b	c7 47 14 00 00 		mov	WORD PTR 20[bx],OFFSET 0
; ; Line 1351
	*** 000d60	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 000d64	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 000d67	03 d8 			add	bx,ax
	*** 000d69	c7 47 1c 00 00 		mov	WORD PTR 28[bx],OFFSET 0
; ; Line 1352
	*** 000d6e	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 000d72	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 000d75	03 d8 			add	bx,ax
	*** 000d77	c7 47 1e 00 00 		mov	WORD PTR 30[bx],OFFSET 0
; ; Line 1353
; ; Line 1354
	*** 000d7c	a1 00 00 		mov	ax,WORD PTR _sprite_width
	*** 000d7f	f7 2e 00 00 		imul	WORD PTR _sprite_height
	*** 000d83	05 01 00 		add	ax,OFFSET 1
	*** 000d86	50 			push	ax
	*** 000d87	9a 00 00 00 00 		call	FAR PTR __fmalloc
	*** 000d8c	83 c4 02 		add	sp,OFFSET 2
	*** 000d8f	89 46 f8 		mov	WORD PTR -8[bp],ax
	*** 000d92	89 56 fa 		mov	WORD PTR -6[bp],dx
	*** 000d95	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 000d99	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 000d9c	03 d8 			add	bx,ax
	*** 000d9e	8b 46 f8 		mov	ax,WORD PTR -8[bp]
	*** 000da1	8b 56 fa 		mov	dx,WORD PTR -6[bp]
	*** 000da4	89 47 20 		mov	WORD PTR 32[bx],ax
	*** 000da7	89 57 22 		mov	WORD PTR 34[bx],dx
; ; ; Line 1356
					L01233:
; Line 1356
	*** 000daa	83 46 fc 01 		add	WORD PTR -4[bp],OFFSET 1
					L01235:
	*** 000dae	83 7e fc 14 		cmp	WORD PTR -4[bp],OFFSET 20
	*** 000db2	7d 03 e9 e7 fe 		jl	L01232
					L01234:
; ; ; Line 1358
; Line 1358
					L01230:
	*** 000db7	5f 			pop	di
	*** 000db8	5e 			pop	si
	*** 000db9	c9 			leave
	*** 000dba	cb 			ret	OFFSET 0
Local Size: 8
; Line 0
ine 1363
					_Delete_Mechs:
	*** 000dbc	c8 00 00 00 		enter	OFFSET L01679,OFFSET 0
	*** 000dc0	56 			push	si
	*** 000dc1	57 			push	di
; index = fffc
; ; ; Line 1365
; ; ; Line 1367
	*** 000dc2	c7 46 fc 00 00 		mov	WORD PTR -4[bp],OFFSET 0
	*** 000dc7	e9 00 00 		jmp	L01241
					L01238:
; ; Line 1368
; ; Line 1369
	*** 000dca	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 000dce	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 000dd1	03 d8 			add	bx,ax
	*** 000dd3	ff 77 22 		push	WORD PTR 34[bx]
	*** 000dd6	ff 77 20 		push	WORD PTR 32[bx]
	*** 000dd9	9a 00 00 00 00 		call	FAR PTR __ffree
	*** 000dde	83 c4 04 		add	sp,OFFSET 4
; ; Line 1370
					L01239:
; Line 1370
	*** 000de1	83 46 fc 01 		add	WORD PTR -4[bp],OFFSET 1
					L01241:
	*** 000de5	83 7e fc 14 		cmp	WORD PTR -4[bp],OFFSET 20
	*** 000de9	7d 03 e9 dc ff 		jl	L01238
					L01240:
; ; ; Line 1372
; Line 1372
					L01236:
	*** 000dee	5f 			pop	di
	*** 000def	5e 			pop	si
	*** 000df0	c9 			leave
	*** 000df1	cb 			ret	OFFSET 0
Local Size: 4
; Line 0
; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; Line 1377
					_Move_Mechs:
	*** 000df2	c8 00 00 00 		enter	OFFSET L01680,OFFSET 0
	*** 000df6	56 			push	si
	*** 000df7	57 			push	di
; mech_killed_switch = fffc
; mdx = fffa
; flock_switch = fff8
; worker = fff6
; curr_direction = fff4
; index = fff2
; ; ; ; ; ; ; Line 1383
; ; Line 1384
	*** 000df8	c7 46 f8 00 00 		mov	WORD PTR -8[bp],OFFSET 0
; ; Line 1385
	*** 000dfd	c7 46 fc 00 00 		mov	WORD PTR -4[bp],OFFSET 0
; ; Line 1386
	*** 000e02	c7 46 fa 00 00 		mov	WORD PTR -6[bp],OFFSET 0
; ; Line 1387
; ; ; Line 1389
; ; ; Line 1391
; ; ; ; ; Line 1395
	*** 000e07	c7 46 f2 00 00 		mov	WORD PTR -14[bp],OFFSET 0
	*** 000e0c	e9 00 00 		jmp	L01254
					L01251:
; ; Line 1396
; ; ; ; ; Line 1400
	*** 000e0f	6b 46 f2 24 		_imul3 	ax,WORD PTR -14[bp],OFFSET 36
	*** 000e13	b9 00 00 		mov	cx,OFFSET _mech_array
	*** 000e16	03 c8 			add	cx,ax
	*** 000e18	89 4e f6 		mov	WORD PTR -10[bp],cx
; ; ; ; ; Line 1404
	*** 000e1b	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 000e1e	83 7f 0a 01 		cmp	WORD PTR 10[bx],OFFSET 1
	*** 000e22	74 03 e9 00 00 		jne	L01255
; ; Line 1405
; ; ; ; ; Line 1409
	*** 000e27	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 000e2a	8b 47 0c 		mov	ax,WORD PTR 12[bx]
	*** 000e2d	e9 00 00 		jmp	L01256
; ; Line 1410
; ; ; Line 1412
					L01260:
; ; Line 1413
; ; ; ; ; Line 1417
	*** 000e30	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 000e33	83 7f 1a 00 		cmp	WORD PTR 26[bx],OFFSET 0
	*** 000e37	75 03 e9 00 00 		je	L01261
; ; Line 1418
; ; ; ; Line 1421
	*** 000e3c	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 000e3f	c7 47 1a 00 00 		mov	WORD PTR 26[bx],OFFSET 0
; ; ; ; ; Line 1425
	*** 000e44	9a 00 00 00 00 		call	FAR PTR _rand
	*** 000e49	b9 04 00 		mov	cx,OFFSET 4
	*** 000e4c	99 			cwd
	*** 000e4d	f7 f9 			idiv	cx
	*** 000e4f	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 000e52	89 57 16 		mov	WORD PTR 22[bx],dx
; ; ; ; ; Line 1429
	*** 000e55	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 000e58	c7 47 0e 00 00 		mov	WORD PTR 14[bx],OFFSET 0
; ; Line 1430
	*** 000e5d	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 000e60	c7 47 10 00 00 		mov	WORD PTR 16[bx],OFFSET 0
; ; Line 1431
	*** 000e65	9a 00 00 00 00 		call	FAR PTR _rand
	*** 000e6a	b9 03 00 		mov	cx,OFFSET 3
	*** 000e6d	99 			cwd
	*** 000e6e	f7 f9 			idiv	cx
	*** 000e70	83 c2 02 		add	dx,OFFSET 2
	*** 000e73	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 000e76	89 57 14 		mov	WORD PTR 20[bx],dx
; ; ; Line 1433
; ; ; ; ; ; ; Line 1439
					L01261:
	*** 000e79	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 000e7c	6b 47 16 78 		_imul3 	ax,WORD PTR 22[bx],OFFSET 120
	*** 000e80	bb 48 04 		mov	bx,OFFSET _patterns
	*** 000e83	03 d8 			add	bx,ax
	*** 000e85	89 5e f0 		mov	WORD PTR -16[bp],bx
	*** 000e88	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 000e8b	8b 47 0e 		mov	ax,WORD PTR 14[bx]
	*** 000e8e	d1 e0 			shl	ax,OFFSET 1
	*** 000e90	8b 5e f0 		mov	bx,WORD PTR -16[bp]
	*** 000e93	03 d8 			add	bx,ax
	*** 000e95	8b 07 			mov	ax,WORD PTR [bx]
	*** 000e97	89 46 f4 		mov	WORD PTR -12[bp],ax
; ; ; ; ; Line 1443
	*** 000e9a	83 7e f4 ff 		cmp	WORD PTR -12[bp],OFFSET -1
	*** 000e9e	74 03 e9 00 00 		jne	L01262
; ; Line 1444
; ; Line 1445
	*** 000ea3	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 000ea6	c7 47 0c 05 00 		mov	WORD PTR 12[bx],OFFSET 5
; ; Line 1446
	*** 000eab	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 000eae	c7 47 1a 01 00 		mov	WORD PTR 26[bx],OFFSET 1
; ; Line 1447
	*** 000eb3	e9 00 00 		jmp	L01257
; ; ; Line 1449
; ; ; ; ; Line 1453
					L01262:
	*** 000eb6	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 000eb9	8b 46 f4 		mov	ax,WORD PTR -12[bp]
	*** 000ebc	89 47 1e 		mov	WORD PTR 30[bx],ax
; ; ; ; ; Line 1457
	*** 000ebf	8b 5e f4 		mov	bx,WORD PTR -12[bp]
	*** 000ec2	d1 e3 			shl	bx,OFFSET 1
	*** 000ec4	8b 87 28 06 		mov	ax,WORD PTR _dirs_x[bx]
	*** 000ec8	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 000ecb	01 47 02 		add	WORD PTR 2[bx],ax
; ; Line 1458
	*** 000ece	8b 5e f4 		mov	bx,WORD PTR -12[bp]
	*** 000ed1	d1 e3 			shl	bx,OFFSET 1
	*** 000ed3	8b 87 3a 06 		mov	ax,WORD PTR _dirs_y[bx]
	*** 000ed7	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 000eda	01 47 04 		add	WORD PTR 4[bx],ax
; ; ; ; ; Line 1462
	*** 000edd	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 000ee0	81 7f 02 2c 01 		cmp	WORD PTR 2[bx],OFFSET 300
	*** 000ee5	7f 03 e9 00 00 		jle	L01263
; ; Line 1463
; ; Line 1464
	*** 000eea	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 000eed	c7 47 02 00 00 		mov	WORD PTR 2[bx],OFFSET 0
; ; Line 1465
; ; Line 1466
	*** 000ef2	e9 00 00 		jmp	L01264
					L01263:
; Line 1466
; ; Line 1467
	*** 000ef5	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 000ef8	83 7f 02 00 		cmp	WORD PTR 2[bx],OFFSET 0
	*** 000efc	7c 03 e9 00 00 		jge	L01265
; ; Line 1468
; ; Line 1469
	*** 000f01	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 000f04	c7 47 02 2c 01 		mov	WORD PTR 2[bx],OFFSET 300
; ; Line 1470
; ; ; Line 1472
					L01265:
					L01264:
	*** 000f09	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 000f0c	83 7f 04 78 		cmp	WORD PTR 4[bx],OFFSET 120
	*** 000f10	7d 03 e9 00 00 		jl	L01266
; ; Line 1473
	*** 000f15	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 000f18	c7 47 04 78 00 		mov	WORD PTR 4[bx],OFFSET 120
; ; Line 1474
	*** 000f1d	e9 00 00 		jmp	L01267
					L01266:
; Line 1474
; ; Line 1475
	*** 000f20	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 000f23	83 7f 04 00 		cmp	WORD PTR 4[bx],OFFSET 0
	*** 000f27	7c 03 e9 00 00 		jge	L01268
; ; Line 1476
	*** 000f2c	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 000f2f	c7 47 04 00 00 		mov	WORD PTR 4[bx],OFFSET 0
; ; ; ; ; Line 1480
					L01268:
					L01267:
	*** 000f34	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 000f37	83 47 10 01 		add	WORD PTR 16[bx],OFFSET 1
	*** 000f3b	8b 47 10 		mov	ax,WORD PTR 16[bx]
	*** 000f3e	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 000f41	3b 47 14 		cmp	ax,WORD PTR 20[bx]
	*** 000f44	74 03 e9 00 00 		jne	L01269
; ; Line 1481
; ; Line 1482
	*** 000f49	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 000f4c	c7 47 10 00 00 		mov	WORD PTR 16[bx],OFFSET 0
; ; Line 1483
	*** 000f51	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 000f54	83 47 0e 01 		add	WORD PTR 14[bx],OFFSET 1
; ; ; Line 1485
; ; ; ; ; ; Line 1490
					L01269:
; ; Line 1491
; ; Line 1492
; ; Line 1493
; ; Line 1494
	*** 000f58	a1 00 00 		mov	ax,WORD PTR _player
	*** 000f5b	05 c4 ff 		add	ax,OFFSET -60
	*** 000f5e	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 000f61	39 47 02 		cmp	WORD PTR 2[bx],ax
	*** 000f64	7f 03 e9 00 00 		jle	L01270
	*** 000f69	a1 00 00 		mov	ax,WORD PTR _player
	*** 000f6c	05 50 00 		add	ax,OFFSET 80
	*** 000f6f	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 000f72	39 47 02 		cmp	WORD PTR 2[bx],ax
	*** 000f75	7c 03 e9 00 00 		jge	L01270
	*** 000f7a	83 7e f4 04 		cmp	WORD PTR -12[bp],OFFSET 4
	*** 000f7e	7d 03 e9 00 00 		jl	L01270
	*** 000f83	83 7e f4 06 		cmp	WORD PTR -12[bp],OFFSET 6
	*** 000f87	7e 03 e9 00 00 		jg	L01270
	*** 000f8c	9a 00 00 00 00 		call	FAR PTR _rand
	*** 000f91	b9 0a 00 		mov	cx,OFFSET 10
	*** 000f94	99 			cwd
	*** 000f95	f7 f9 			idiv	cx
	*** 000f97	83 fa 01 		cmp	dx,OFFSET 1
	*** 000f9a	74 03 e9 00 00 		jne	L01270
; ; Line 1495
; ; ; ; ; ; ; Line 1501
; ; Line 1502
; ; Line 1503
; ; Line 1504
; ; Line 1505
; ; Line 1506
; ; Line 1507
	*** 000f9f	6a 00 			push	OFFSET 0
	*** 000fa1	6a 27 			push	OFFSET 39
	*** 000fa3	8b 5e f4 		mov	bx,WORD PTR -12[bp]
	*** 000fa6	d1 e3 			shl	bx,OFFSET 1
	*** 000fa8	8b 87 3a 06 		mov	ax,WORD PTR _dirs_y[bx]
	*** 000fac	d1 e0 			shl	ax,OFFSET 1
	*** 000fae	50 			push	ax
	*** 000faf	8b 5e f4 		mov	bx,WORD PTR -12[bp]
	*** 000fb2	d1 e3 			shl	bx,OFFSET 1
	*** 000fb4	8b 87 28 06 		mov	ax,WORD PTR _dirs_x[bx]
	*** 000fb8	d1 e0 			shl	ax,OFFSET 1
	*** 000fba	50 			push	ax
	*** 000fbb	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 000fbe	8b 47 04 		mov	ax,WORD PTR 4[bx]
	*** 000fc1	03 06 00 00 		add	ax,WORD PTR _sprite_height
	*** 000fc5	50 			push	ax
	*** 000fc6	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 000fc9	8b 47 02 		mov	ax,WORD PTR 2[bx]
	*** 000fcc	05 0a 00 		add	ax,OFFSET 10
	*** 000fcf	50 			push	ax
	*** 000fd0	ff 76 f6 		push	WORD PTR -10[bp]
	*** 000fd3	9a 00 00 00 00 		call	FAR PTR _Start_Missile
	*** 000fd8	83 c4 0e 		add	sp,OFFSET 14
; ; ; Line 1509
; ; ; ; Line 1512
					L01270:
	*** 000fdb	e9 00 00 		jmp	L01257
; ; ; Line 1514
					L01271:
; ; Line 1515
; ; ; ; ; Line 1519
	*** 000fde	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 000fe1	83 7f 1a 00 		cmp	WORD PTR 26[bx],OFFSET 0
	*** 000fe5	75 03 e9 00 00 		je	L01272
; ; Line 1520
; ; ; ; ; ; Line 1525
; ; ; ; ; Line 1529
					L01272:
	*** 000fea	e9 00 00 		jmp	L01257
; ; ; Line 1531
					L01273:
; ; Line 1532
; ; ; ; ; Line 1536
	*** 000fed	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 000ff0	83 7f 1a 00 		cmp	WORD PTR 26[bx],OFFSET 0
	*** 000ff4	75 03 e9 00 00 		je	L01274
; ; Line 1537
; ; ; ; Line 1540
; ; ; ; ; ; Line 1545
					L01274:
	*** 000ff9	e9 00 00 		jmp	L01257
; ; ; ; Line 1548
					L01275:
; ; Line 1549
; ; ; ; ; Line 1553
	*** 000ffc	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 000fff	83 7f 1a 00 		cmp	WORD PTR 26[bx],OFFSET 0
	*** 001003	75 03 e9 00 00 		je	L01276
; ; Line 1554
; ; ; ; Line 1557
	*** 001008	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 00100b	c7 47 1a 00 00 		mov	WORD PTR 26[bx],OFFSET 0
; ; ; ; ; Line 1561
	*** 001010	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 001013	c7 47 10 00 00 		mov	WORD PTR 16[bx],OFFSET 0
; ; Line 1562
	*** 001018	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 00101b	c7 47 14 04 00 		mov	WORD PTR 20[bx],OFFSET 4
; ; Line 1563
	*** 001020	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 001023	a1 60 07 		mov	ax,WORD PTR ?global_flock@?1??Move_Mechs@@9@9
	*** 001026	89 47 1c 		mov	WORD PTR 28[bx],ax
; ; ; Line 1565
; ; ; ; ; ; Line 1570
					L01276:
	*** 001029	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 00102c	83 7f 1c 00 		cmp	WORD PTR 28[bx],OFFSET 0
	*** 001030	74 03 e9 00 00 		jne	L01277
; ; Line 1571
; ; ; ; ; Line 1575
	*** 001035	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 001038	8b 47 06 		mov	ax,WORD PTR 6[bx]
	*** 00103b	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 00103e	01 47 02 		add	WORD PTR 2[bx],ax
; ; ; ; ; Line 1579
	*** 001041	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 001044	8b 47 02 		mov	ax,WORD PTR 2[bx]
	*** 001047	3d 20 01 		cmp	ax,OFFSET 288
	*** 00104a	77 03 e9 00 00 		jbe	L01278
; ; Line 1580
	*** 00104f	c7 46 f8 01 00 		mov	WORD PTR -8[bp],OFFSET 1
; ; ; Line 1582
					L01278:
; ; Line 1583
	*** 001054	e9 00 00 		jmp	L01279
					L01277:
; Line 1583
; ; Line 1584
	*** 001057	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 00105a	83 7f 1c 01 		cmp	WORD PTR 28[bx],OFFSET 1
	*** 00105e	74 03 e9 00 00 		jne	L01280
; ; Line 1585
; ; ; ; Line 1588
	*** 001063	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 001066	8b 47 06 		mov	ax,WORD PTR 6[bx]
	*** 001069	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 00106c	29 47 02 		sub	WORD PTR 2[bx],ax
; ; ; ; ; Line 1592
	*** 00106f	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 001072	83 7f 02 0e 		cmp	WORD PTR 2[bx],OFFSET 14
	*** 001076	7c 03 e9 00 00 		jge	L01281
; ; Line 1593
	*** 00107b	c7 46 f8 01 00 		mov	WORD PTR -8[bp],OFFSET 1
; ; ; Line 1595
					L01281:
; ; ; ; ; ; Line 1600
					L01280:
					L01279:
	*** 001080	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 001083	83 47 10 01 		add	WORD PTR 16[bx],OFFSET 1
	*** 001087	8b 47 10 		mov	ax,WORD PTR 16[bx]
	*** 00108a	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 00108d	3b 47 14 		cmp	ax,WORD PTR 20[bx]
	*** 001090	74 03 e9 00 00 		jne	L01282
; ; Line 1601
; ; ; ; Line 1604
	*** 001095	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 001098	c7 47 10 00 00 		mov	WORD PTR 16[bx],OFFSET 0
; ; ; Line 1606
	*** 00109d	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 0010a0	83 47 1e 01 		add	WORD PTR 30[bx],OFFSET 1
	*** 0010a4	8b 47 1e 		mov	ax,WORD PTR 30[bx]
	*** 0010a7	3d 01 00 		cmp	ax,OFFSET 1
	*** 0010aa	7f 03 e9 00 00 		jle	L01283
; ; Line 1607
	*** 0010af	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 0010b2	c7 47 1e 00 00 		mov	WORD PTR 30[bx],OFFSET 0
; ; ; Line 1609
					L01283:
; ; ; ; ; ; Line 1614
					L01282:
; ; Line 1615
; ; Line 1616
	*** 0010b7	a1 00 00 		mov	ax,WORD PTR _player
	*** 0010ba	05 ce ff 		add	ax,OFFSET -50
	*** 0010bd	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 0010c0	39 47 02 		cmp	WORD PTR 2[bx],ax
	*** 0010c3	7f 03 e9 00 00 		jle	L01284
	*** 0010c8	a1 00 00 		mov	ax,WORD PTR _player
	*** 0010cb	05 46 00 		add	ax,OFFSET 70
	*** 0010ce	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 0010d1	39 47 02 		cmp	WORD PTR 2[bx],ax
	*** 0010d4	7c 03 e9 00 00 		jge	L01284
	*** 0010d9	9a 00 00 00 00 		call	FAR PTR _rand
	*** 0010de	b9 32 00 		mov	cx,OFFSET 50
	*** 0010e1	99 			cwd
	*** 0010e2	f7 f9 			idiv	cx
	*** 0010e4	83 fa 01 		cmp	dx,OFFSET 1
	*** 0010e7	74 03 e9 00 00 		jne	L01284
; ; Line 1617
; ; ; ; ; ; Line 1622
	*** 0010ec	a1 00 00 		mov	ax,WORD PTR _player
	*** 0010ef	05 f6 ff 		add	ax,OFFSET -10
	*** 0010f2	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 0010f5	39 47 02 		cmp	WORD PTR 2[bx],ax
	*** 0010f8	7c 03 e9 00 00 		jge	L01285
; ; Line 1623
	*** 0010fd	c7 46 fa 03 00 		mov	WORD PTR -6[bp],OFFSET 3
; ; Line 1624
	*** 001102	e9 00 00 		jmp	L01286
					L01285:
; Line 1624
; ; Line 1625
	*** 001105	a1 00 00 		mov	ax,WORD PTR _player
	*** 001108	05 1e 00 		add	ax,OFFSET 30
	*** 00110b	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 00110e	39 47 02 		cmp	WORD PTR 2[bx],ax
	*** 001111	7f 03 e9 00 00 		jle	L01287
; ; Line 1626
	*** 001116	c7 46 fa fd ff 		mov	WORD PTR -6[bp],OFFSET -3
; ; Line 1627
	*** 00111b	e9 00 00 		jmp	L01288
					L01287:
; Line 1627
; ; Line 1628
	*** 00111e	c7 46 fa 00 00 		mov	WORD PTR -6[bp],OFFSET 0
					L01288:
					L01286:
; ; ; ; ; Line 1632
; ; Line 1633
; ; Line 1634
; ; Line 1635
; ; Line 1636
; ; Line 1637
; ; Line 1638
	*** 001123	6a 00 			push	OFFSET 0
	*** 001125	6a 27 			push	OFFSET 39
	*** 001127	6a 06 			push	OFFSET 6
	*** 001129	ff 76 fa 		push	WORD PTR -6[bp]
	*** 00112c	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 00112f	8b 47 04 		mov	ax,WORD PTR 4[bx]
	*** 001132	03 06 00 00 		add	ax,WORD PTR _sprite_height
	*** 001136	50 			push	ax
	*** 001137	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 00113a	8b 47 02 		mov	ax,WORD PTR 2[bx]
	*** 00113d	05 0a 00 		add	ax,OFFSET 10
	*** 001140	50 			push	ax
	*** 001141	ff 76 f6 		push	WORD PTR -10[bp]
	*** 001144	9a 00 00 00 00 		call	FAR PTR _Start_Missile
	*** 001149	83 c4 0e 		add	sp,OFFSET 14
; ; ; Line 1640
; ; ; ; ; Line 1644
					L01284:
	*** 00114c	a1 0c 00 		mov	ax,WORD PTR _attack_time
	*** 00114f	8b 16 0e 00 		mov	dx,WORD PTR _attack_time+2
	*** 001153	39 16 0a 00 		cmp	WORD PTR _game_clock+2,dx
	*** 001157	7d 03 e9 00 00 		jl	L01289
	*** 00115c	7e 03 e9 00 00 		jg	L01681
	*** 001161	39 06 08 00 		cmp	WORD PTR _game_clock,ax
	*** 001165	77 03 e9 00 00 		jbe	L01289
					L01681:
	*** 00116a	9a 00 00 00 00 		call	FAR PTR _rand
	*** 00116f	b9 64 00 		mov	cx,OFFSET 100
	*** 001172	99 			cwd
	*** 001173	f7 f9 			idiv	cx
	*** 001175	83 fa 01 		cmp	dx,OFFSET 1
	*** 001178	74 03 e9 00 00 		jne	L01289
; ; Line 1645
; ; ; ; ; Line 1649
	*** 00117d	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 001180	c7 47 0c 03 00 		mov	WORD PTR 12[bx],OFFSET 3
; ; Line 1650
	*** 001185	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 001188	c7 47 1a 01 00 		mov	WORD PTR 26[bx],OFFSET 1
; ; ; Line 1652
	*** 00118d	9a 00 00 00 00 		call	FAR PTR _rand
	*** 001192	b9 05 00 		mov	cx,OFFSET 5
	*** 001195	99 			cwd
	*** 001196	f7 f9 			idiv	cx
	*** 001198	83 fa 01 		cmp	dx,OFFSET 1
	*** 00119b	74 03 e9 00 00 		jne	L01290
; ; Line 1653
	*** 0011a0	6a 04 			push	OFFSET 4
	*** 0011a2	9a 00 00 00 00 		call	FAR PTR _Play_Sound
	*** 0011a7	83 c4 02 		add	sp,OFFSET 2
; ; ; Line 1655
					L01290:
; ; ; Line 1657
					L01289:
	*** 0011aa	e9 00 00 		jmp	L01257
; ; ; ; Line 1660
					L01291:
; ; Line 1661
; ; ; Line 1663
	*** 0011ad	e9 00 00 		jmp	L01257
; ; ; ; Line 1666
					L01292:
; ; Line 1667
; ; ; ; ; Line 1671
	*** 0011b0	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 0011b3	83 47 10 01 		add	WORD PTR 16[bx],OFFSET 1
; ; ; ; ; Line 1675
	*** 0011b7	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 0011ba	8b 47 14 		mov	ax,WORD PTR 20[bx]
	*** 0011bd	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 0011c0	39 47 10 		cmp	WORD PTR 16[bx],ax
	*** 0011c3	7c 03 e9 00 00 		jge	L01293
; ; Line 1676
; ; ; ; ; Line 1680
; ; Line 1681
	*** 0011c8	e9 00 00 		jmp	L01294
					L01293:
; Line 1681
; ; Line 1682
; ; ; ; Line 1685
	*** 0011cb	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 0011ce	c7 47 0c 05 00 		mov	WORD PTR 12[bx],OFFSET 5
; ; Line 1686
	*** 0011d3	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 0011d6	c7 47 06 02 00 		mov	WORD PTR 6[bx],OFFSET 2
; ; Line 1687
	*** 0011db	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 0011de	c7 47 10 00 00 		mov	WORD PTR 16[bx],OFFSET 0
; ; Line 1688
	*** 0011e3	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 0011e6	c7 47 14 04 00 		mov	WORD PTR 20[bx],OFFSET 4
; ; Line 1689
	*** 0011eb	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 0011ee	c7 47 1c 00 00 		mov	WORD PTR 28[bx],OFFSET 0
; ; Line 1690
	*** 0011f3	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 0011f6	c7 47 1e 00 00 		mov	WORD PTR 30[bx],OFFSET 0
; ; ; ; ; Line 1694
	*** 0011fb	83 06 26 00 01 		add	WORD PTR _energize_state,OFFSET 1
; ; ; Line 1696
					L01294:
; ; ; Line 1698
	*** 001200	e9 00 00 		jmp	L01257
; ; ; Line 1700
					L01295:
	*** 001203	e9 00 00 		jmp	L01257
; ; ; Line 1702
; Line 1702
	*** 001206	e9 00 00 		jmp	L01257
					L01256:
	*** 001209	2d 02 00 		sub	ax,OFFSET 2
	*** 00120c	3d 05 00 		cmp	ax,OFFSET 5
	*** 00120f	76 03 e9 ef ff 		ja	L01295
	*** 001214	d1 e0 			shl	ax,OFFSET 1
	*** 001216	8b d8 			mov	bx,ax
	*** 001218	2e ff a7 00 00 		jmp	WORD PTR cs:L01682[bx]
					L01682:
	dw	
	dw	
	dw	
	dw	
	dw	
	dw	
					L01257:
; ; ; Line 1704
; ; Line 1705
	*** 001229	e9 00 00 		jmp	L01296
					L01255:
; Line 1705
; ; Line 1706
	*** 00122c	6b 46 f2 24 		_imul3 	ax,WORD PTR -14[bp],OFFSET 36
	*** 001230	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 001233	03 d8 			add	bx,ax
	*** 001235	83 7f 0a 02 		cmp	WORD PTR 10[bx],OFFSET 2
	*** 001239	74 03 e9 00 00 		jne	L01297
; ; Line 1707
; ; ; ; Line 1710
	*** 00123e	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 001241	83 47 0e 01 		add	WORD PTR 14[bx],OFFSET 1
	*** 001245	8b 47 0e 		mov	ax,WORD PTR 14[bx]
	*** 001248	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 00124b	3b 47 12 		cmp	ax,WORD PTR 18[bx]
	*** 00124e	7f 03 e9 00 00 		jle	L01298
; ; Line 1711
; ; ; Line 1713
	*** 001253	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 001256	c7 47 0a 00 00 		mov	WORD PTR 10[bx],OFFSET 0
; ; Line 1714
	*** 00125b	83 06 2c 00 01 		add	WORD PTR _mechs_killed,OFFSET 1
; ; Line 1715
	*** 001260	c7 46 fc 01 00 		mov	WORD PTR -4[bp],OFFSET 1
; ; ; ; ; Line 1719
	*** 001265	83 06 08 00 19 		add	WORD PTR _game_clock,OFFSET 25
	*** 00126a	83 16 0a 00 00 		adc	WORD PTR _game_clock+2,OFFSET 0
; ; ; Line 1721
; ; ; Line 1723
					L01298:
; ; ; Line 1725
					L01297:
					L01296:
					L01252:
; Line 1725
	*** 00126f	83 46 f2 01 		add	WORD PTR -14[bp],OFFSET 1
					L01254:
	*** 001273	a1 28 00 		mov	ax,WORD PTR _num_mechs
	*** 001276	39 46 f2 		cmp	WORD PTR -14[bp],ax
	*** 001279	7d 03 e9 91 fb 		jl	L01251
					L01253:
; ; ; ; ; ; ; Line 1731
	*** 00127e	83 7e f8 01 		cmp	WORD PTR -8[bp],OFFSET 1
	*** 001282	74 03 e9 00 00 		jne	L01299
; ; Line 1732
; ; ; ; ; Line 1736
	*** 001287	c7 46 f2 00 00 		mov	WORD PTR -14[bp],OFFSET 0
	*** 00128c	e9 00 00 		jmp	L01303
					L01300:
; ; Line 1737
; ; ; ; ; Line 1741
	*** 00128f	6b 46 f2 24 		_imul3 	ax,WORD PTR -14[bp],OFFSET 36
	*** 001293	b9 00 00 		mov	cx,OFFSET _mech_array
	*** 001296	03 c8 			add	cx,ax
	*** 001298	89 4e f6 		mov	WORD PTR -10[bp],cx
; ; ; ; ; Line 1745
; ; Line 1746
	*** 00129b	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 00129e	83 7f 0a 01 		cmp	WORD PTR 10[bx],OFFSET 1
	*** 0012a2	74 03 e9 00 00 		jne	L01304
	*** 0012a7	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 0012aa	83 7f 0c 05 		cmp	WORD PTR 12[bx],OFFSET 5
	*** 0012ae	74 03 e9 00 00 		jne	L01304
; ; Line 1747
; ; ; ; Line 1750
	*** 0012b3	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 0012b6	83 7f 1c 00 		cmp	WORD PTR 28[bx],OFFSET 0
	*** 0012ba	74 03 e9 00 00 		jne	L01305
; ; Line 1751
; ; Line 1752
	*** 0012bf	c7 06 60 07 01 00 	mov	WORD PTR ?global_flock@?1??Move_Mechs@@9@9,OFFSET 1
; ; Line 1753
	*** 0012c5	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 0012c8	c7 47 1c 01 00 		mov	WORD PTR 28[bx],OFFSET 1
; ; Line 1754
; ; Line 1755
	*** 0012cd	e9 00 00 		jmp	L01306
					L01305:
; Line 1755
; ; Line 1756
; ; Line 1757
	*** 0012d0	c7 06 60 07 00 00 	mov	WORD PTR ?global_flock@?1??Move_Mechs@@9@9,OFFSET 0
; ; Line 1758
	*** 0012d6	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 0012d9	c7 47 1c 00 00 		mov	WORD PTR 28[bx],OFFSET 0
; ; Line 1759
					L01306:
; ; ; Line 1761
; ; ; Line 1763
					L01304:
					L01301:
; Line 1763
	*** 0012de	83 46 f2 01 		add	WORD PTR -14[bp],OFFSET 1
					L01303:
	*** 0012e2	a1 28 00 		mov	ax,WORD PTR _num_mechs
	*** 0012e5	39 46 f2 		cmp	WORD PTR -14[bp],ax
	*** 0012e8	7d 03 e9 a2 ff 		jl	L01300
					L01302:
; ; ; Line 1765
; ; ; ; ; Line 1769
					L01299:
	*** 0012ed	83 7e fc 01 		cmp	WORD PTR -4[bp],OFFSET 1
	*** 0012f1	74 03 e9 00 00 		jne	L01307
; ; Line 1770
; ; ; ; ; Line 1774
	*** 0012f6	c7 46 f2 00 00 		mov	WORD PTR -14[bp],OFFSET 0
	*** 0012fb	e9 00 00 		jmp	L01311
					L01308:
; ; Line 1775
; ; ; ; ; Line 1779
	*** 0012fe	6b 46 f2 24 		_imul3 	ax,WORD PTR -14[bp],OFFSET 36
	*** 001302	b9 00 00 		mov	cx,OFFSET _mech_array
	*** 001305	03 c8 			add	cx,ax
	*** 001307	89 4e f6 		mov	WORD PTR -10[bp],cx
; ; ; ; ; Line 1783
; ; Line 1784
	*** 00130a	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 00130d	83 7f 0a 01 		cmp	WORD PTR 10[bx],OFFSET 1
	*** 001311	74 03 e9 00 00 		jne	L01312
	*** 001316	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 001319	83 7f 0c 05 		cmp	WORD PTR 12[bx],OFFSET 5
	*** 00131d	74 03 e9 00 00 		jne	L01312
; ; Line 1785
; ; ; ; ; Line 1789
	*** 001322	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 001325	83 47 06 01 		add	WORD PTR 6[bx],OFFSET 1
	*** 001329	8b 47 06 		mov	ax,WORD PTR 6[bx]
	*** 00132c	3d 06 00 		cmp	ax,OFFSET 6
	*** 00132f	7f 03 e9 00 00 		jle	L01313
; ; Line 1790
	*** 001334	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 001337	c7 47 06 06 00 		mov	WORD PTR 6[bx],OFFSET 6
; ; ; ; ; Line 1794
					L01313:
	*** 00133c	8b 5e f6 		mov	bx,WORD PTR -10[bp]
	*** 00133f	83 47 04 02 		add	WORD PTR 4[bx],OFFSET 2
; ; ; Line 1796
; ; ; Line 1798
					L01312:
					L01309:
; Line 1798
	*** 001343	83 46 f2 01 		add	WORD PTR -14[bp],OFFSET 1
					L01311:
	*** 001347	a1 28 00 		mov	ax,WORD PTR _num_mechs
	*** 00134a	39 46 f2 		cmp	WORD PTR -14[bp],ax
	*** 00134d	7d 03 e9 ac ff 		jl	L01308
					L01310:
; ; ; Line 1800
; ; ; ; ; ; ; Line 1806
					L01307:
	*** 001352	83 3e 26 00 01 		cmp	WORD PTR _energize_state,OFFSET 1
	*** 001357	74 03 e9 00 00 		jne	L01314
; ; Line 1807
	*** 00135c	9a 00 00 00 00 		call	FAR PTR _Energize
; ; ; Line 1809
					L01314:
; Line 1809
					L01242:
	*** 001361	5f 			pop	di
	*** 001362	5e 			pop	si
	*** 001363	c9 			leave
	*** 001364	cb 			ret	OFFSET 0
Local Size: 16
; Line 0
; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; Line 1814
					_Erase_Mechs:
	*** 001366	c8 00 00 00 		enter	OFFSET L01683,OFFSET 0
	*** 00136a	56 			push	si
	*** 00136b	57 			push	di
; index = fffc
; ; ; ; ; Line 1818
; ; ; ; ; Line 1822
	*** 00136c	c7 46 fc 00 00 		mov	WORD PTR -4[bp],OFFSET 0
	*** 001371	e9 00 00 		jmp	L01320
					L01317:
; ; Line 1823
; ; ; ; ; ; ; Line 1829
	*** 001374	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 001378	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 00137b	03 d8 			add	bx,ax
	*** 00137d	83 7f 0a 00 		cmp	WORD PTR 10[bx],OFFSET 0
	*** 001381	75 03 e9 00 00 		je	L01321
; ; Line 1830
; ; ; ; ; Line 1834
	*** 001386	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 00138a	8b d8 			mov	bx,ax
	*** 00138c	8b 87 00 00 		mov	ax,WORD PTR _mech_array[bx]
	*** 001390	e9 00 00 		jmp	L01322
; ; Line 1835
; ; ; Line 1837
					L01326:
; ; Line 1838
; ; Line 1839
	*** 001393	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 001397	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 00139a	03 d8 			add	bx,ax
	*** 00139c	8b 47 02 		mov	ax,WORD PTR 2[bx]
	*** 00139f	a3 00 00 		mov	WORD PTR _robot_1,ax
; ; Line 1840
	*** 0013a2	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 0013a6	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 0013a9	03 d8 			add	bx,ax
	*** 0013ab	8b 47 04 		mov	ax,WORD PTR 4[bx]
	*** 0013ae	a3 02 00 		mov	WORD PTR _robot_1+2,ax
; ; Line 1841
	*** 0013b1	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 0013b5	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 0013b8	03 d8 			add	bx,ax
	*** 0013ba	8b 47 20 		mov	ax,WORD PTR 32[bx]
	*** 0013bd	8b 57 22 		mov	dx,WORD PTR 34[bx]
	*** 0013c0	a3 7a 00 		mov	WORD PTR _robot_1+122,ax
	*** 0013c3	89 16 7c 00 		mov	WORD PTR _robot_1+124,dx
; ; ; Line 1843
	*** 0013c7	68 00 00 		push	OFFSET _robot_1
	*** 0013ca	9a 00 00 00 00 		call	FAR PTR _Erase_Sprite_DB
	*** 0013cf	83 c4 02 		add	sp,OFFSET 2
; ; ; Line 1845
	*** 0013d2	e9 00 00 		jmp	L01323
; ; ; Line 1847
					L01327:
; ; Line 1848
; ; Line 1849
	*** 0013d5	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 0013d9	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 0013dc	03 d8 			add	bx,ax
	*** 0013de	8b 47 02 		mov	ax,WORD PTR 2[bx]
	*** 0013e1	a3 00 00 		mov	WORD PTR _robot_2,ax
; ; Line 1850
	*** 0013e4	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 0013e8	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 0013eb	03 d8 			add	bx,ax
	*** 0013ed	8b 47 04 		mov	ax,WORD PTR 4[bx]
	*** 0013f0	a3 02 00 		mov	WORD PTR _robot_2+2,ax
; ; Line 1851
	*** 0013f3	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 0013f7	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 0013fa	03 d8 			add	bx,ax
	*** 0013fc	8b 47 20 		mov	ax,WORD PTR 32[bx]
	*** 0013ff	8b 57 22 		mov	dx,WORD PTR 34[bx]
	*** 001402	a3 7a 00 		mov	WORD PTR _robot_2+122,ax
	*** 001405	89 16 7c 00 		mov	WORD PTR _robot_2+124,dx
; ; ; Line 1853
	*** 001409	68 00 00 		push	OFFSET _robot_2
	*** 00140c	9a 00 00 00 00 		call	FAR PTR _Erase_Sprite_DB
	*** 001411	83 c4 02 		add	sp,OFFSET 2
; ; ; Line 1855
	*** 001414	e9 00 00 		jmp	L01323
; ; ; Line 1857
					L01328:
; ; Line 1858
; ; Line 1859
	*** 001417	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 00141b	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 00141e	03 d8 			add	bx,ax
	*** 001420	8b 47 02 		mov	ax,WORD PTR 2[bx]
	*** 001423	a3 00 00 		mov	WORD PTR _robot_3,ax
; ; Line 1860
	*** 001426	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 00142a	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 00142d	03 d8 			add	bx,ax
	*** 00142f	8b 47 04 		mov	ax,WORD PTR 4[bx]
	*** 001432	a3 02 00 		mov	WORD PTR _robot_3+2,ax
; ; Line 1861
	*** 001435	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 001439	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 00143c	03 d8 			add	bx,ax
	*** 00143e	8b 47 20 		mov	ax,WORD PTR 32[bx]
	*** 001441	8b 57 22 		mov	dx,WORD PTR 34[bx]
	*** 001444	a3 7a 00 		mov	WORD PTR _robot_3+122,ax
	*** 001447	89 16 7c 00 		mov	WORD PTR _robot_3+124,dx
; ; ; Line 1863
	*** 00144b	68 00 00 		push	OFFSET _robot_3
	*** 00144e	9a 00 00 00 00 		call	FAR PTR _Erase_Sprite_DB
	*** 001453	83 c4 02 		add	sp,OFFSET 2
; ; ; Line 1865
	*** 001456	e9 00 00 		jmp	L01323
; ; ; Line 1867
					L01329:
	*** 001459	e9 00 00 		jmp	L01323
; ; ; Line 1869
; Line 1869
	*** 00145c	e9 00 00 		jmp	L01323
					L01322:
	*** 00145f	3d 01 00 		cmp	ax,OFFSET 1
	*** 001462	75 03 e9 2c ff 		je	L01326
	*** 001467	3d 02 00 		cmp	ax,OFFSET 2
	*** 00146a	75 03 e9 66 ff 		je	L01327
	*** 00146f	3d 03 00 		cmp	ax,OFFSET 3
	*** 001472	75 03 e9 a0 ff 		je	L01328
	*** 001477	e9 df ff 		jmp	L01329
					L01323:
; ; ; Line 1871
; ; ; Line 1873
					L01321:
					L01318:
; Line 1873
	*** 00147a	83 46 fc 01 		add	WORD PTR -4[bp],OFFSET 1
					L01320:
	*** 00147e	a1 28 00 		mov	ax,WORD PTR _num_mechs
	*** 001481	39 46 fc 		cmp	WORD PTR -4[bp],ax
	*** 001484	7d 03 e9 eb fe 		jl	L01317
					L01319:
; ; ; Line 1875
; Line 1875
					L01315:
	*** 001489	5f 			pop	di
	*** 00148a	5e 			pop	si
	*** 00148b	c9 			leave
	*** 00148c	cb 			ret	OFFSET 0
Local Size: 4
; Line 0
ine 1880
					_Draw_Mechs:
	*** 00148e	c8 00 00 00 		enter	OFFSET L01684,OFFSET 0
	*** 001492	56 			push	si
	*** 001493	57 			push	di
; index = fffc
; ; ; ; ; Line 1884
; ; ; ; ; Line 1888
	*** 001494	c7 46 fc 00 00 		mov	WORD PTR -4[bp],OFFSET 0
	*** 001499	e9 00 00 		jmp	L01335
					L01332:
; ; Line 1889
; ; ; ; ; Line 1893
	*** 00149c	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 0014a0	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 0014a3	03 d8 			add	bx,ax
	*** 0014a5	83 7f 0a 00 		cmp	WORD PTR 10[bx],OFFSET 0
	*** 0014a9	75 03 e9 00 00 		je	L01336
; ; Line 1894
; ; ; Line 1896
	*** 0014ae	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 0014b2	8b d8 			mov	bx,ax
	*** 0014b4	8b 87 00 00 		mov	ax,WORD PTR _mech_array[bx]
	*** 0014b8	e9 00 00 		jmp	L01337
; ; Line 1897
; ; ; Line 1899
					L01341:
; ; Line 1900
; ; Line 1901
	*** 0014bb	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 0014bf	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 0014c2	03 d8 			add	bx,ax
	*** 0014c4	8b 47 02 		mov	ax,WORD PTR 2[bx]
	*** 0014c7	a3 00 00 		mov	WORD PTR _robot_1,ax
; ; Line 1902
	*** 0014ca	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 0014ce	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 0014d1	03 d8 			add	bx,ax
	*** 0014d3	8b 47 04 		mov	ax,WORD PTR 4[bx]
	*** 0014d6	a3 02 00 		mov	WORD PTR _robot_1+2,ax
; ; Line 1903
	*** 0014d9	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 0014dd	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 0014e0	03 d8 			add	bx,ax
	*** 0014e2	8b 47 1e 		mov	ax,WORD PTR 30[bx]
	*** 0014e5	a3 74 00 		mov	WORD PTR _robot_1+116,ax
; ; ; ; ; Line 1907
	*** 0014e8	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 0014ec	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 0014ef	03 d8 			add	bx,ax
	*** 0014f1	83 7f 0a 01 		cmp	WORD PTR 10[bx],OFFSET 1
	*** 0014f5	74 03 e9 00 00 		jne	L01342
; ; Line 1908
	*** 0014fa	68 00 00 		push	OFFSET _robot_1
	*** 0014fd	9a 00 00 00 00 		call	FAR PTR _Draw_Sprite_DB
	*** 001502	83 c4 02 		add	sp,OFFSET 2
; ; Line 1909
	*** 001505	e9 00 00 		jmp	L01343
					L01342:
; Line 1909
; ; Line 1910
	*** 001508	68 00 00 		push	OFFSET _robot_1
	*** 00150b	9a 00 00 00 00 		call	FAR PTR _Draw_Sprite_DBM
	*** 001510	83 c4 02 		add	sp,OFFSET 2
					L01343:
; ; ; Line 1912
	*** 001513	e9 00 00 		jmp	L01338
; ; ; Line 1914
					L01344:
; ; Line 1915
; ; Line 1916
	*** 001516	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 00151a	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 00151d	03 d8 			add	bx,ax
	*** 00151f	8b 47 02 		mov	ax,WORD PTR 2[bx]
	*** 001522	a3 00 00 		mov	WORD PTR _robot_2,ax
; ; Line 1917
	*** 001525	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 001529	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 00152c	03 d8 			add	bx,ax
	*** 00152e	8b 47 04 		mov	ax,WORD PTR 4[bx]
	*** 001531	a3 02 00 		mov	WORD PTR _robot_2+2,ax
; ; Line 1918
	*** 001534	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 001538	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 00153b	03 d8 			add	bx,ax
	*** 00153d	8b 47 1e 		mov	ax,WORD PTR 30[bx]
	*** 001540	a3 74 00 		mov	WORD PTR _robot_2+116,ax
; ; ; ; ; Line 1922
	*** 001543	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 001547	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 00154a	03 d8 			add	bx,ax
	*** 00154c	83 7f 0a 01 		cmp	WORD PTR 10[bx],OFFSET 1
	*** 001550	74 03 e9 00 00 		jne	L01345
; ; Line 1923
	*** 001555	68 00 00 		push	OFFSET _robot_2
	*** 001558	9a 00 00 00 00 		call	FAR PTR _Draw_Sprite_DB
	*** 00155d	83 c4 02 		add	sp,OFFSET 2
; ; Line 1924
	*** 001560	e9 00 00 		jmp	L01346
					L01345:
; Line 1924
; ; Line 1925
	*** 001563	68 00 00 		push	OFFSET _robot_2
	*** 001566	9a 00 00 00 00 		call	FAR PTR _Draw_Sprite_DBM
	*** 00156b	83 c4 02 		add	sp,OFFSET 2
					L01346:
; ; ; Line 1927
	*** 00156e	e9 00 00 		jmp	L01338
; ; ; Line 1929
					L01347:
; ; Line 1930
; ; Line 1931
	*** 001571	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 001575	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 001578	03 d8 			add	bx,ax
	*** 00157a	8b 47 02 		mov	ax,WORD PTR 2[bx]
	*** 00157d	a3 00 00 		mov	WORD PTR _robot_3,ax
; ; Line 1932
	*** 001580	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 001584	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 001587	03 d8 			add	bx,ax
	*** 001589	8b 47 04 		mov	ax,WORD PTR 4[bx]
	*** 00158c	a3 02 00 		mov	WORD PTR _robot_3+2,ax
; ; Line 1933
	*** 00158f	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 001593	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 001596	03 d8 			add	bx,ax
	*** 001598	8b 47 1e 		mov	ax,WORD PTR 30[bx]
	*** 00159b	a3 74 00 		mov	WORD PTR _robot_3+116,ax
; ; ; ; ; Line 1937
	*** 00159e	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 0015a2	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 0015a5	03 d8 			add	bx,ax
	*** 0015a7	83 7f 0a 01 		cmp	WORD PTR 10[bx],OFFSET 1
	*** 0015ab	74 03 e9 00 00 		jne	L01348
; ; Line 1938
	*** 0015b0	68 00 00 		push	OFFSET _robot_3
	*** 0015b3	9a 00 00 00 00 		call	FAR PTR _Draw_Sprite_DB
	*** 0015b8	83 c4 02 		add	sp,OFFSET 2
; ; Line 1939
	*** 0015bb	e9 00 00 		jmp	L01349
					L01348:
; Line 1939
; ; Line 1940
	*** 0015be	68 00 00 		push	OFFSET _robot_3
	*** 0015c1	9a 00 00 00 00 		call	FAR PTR _Draw_Sprite_DBM
	*** 0015c6	83 c4 02 		add	sp,OFFSET 2
					L01349:
; ; ; Line 1942
	*** 0015c9	e9 00 00 		jmp	L01338
; ; ; Line 1944
					L01350:
	*** 0015cc	e9 00 00 		jmp	L01338
; ; ; Line 1946
; Line 1946
	*** 0015cf	e9 00 00 		jmp	L01338
					L01337:
	*** 0015d2	3d 01 00 		cmp	ax,OFFSET 1
	*** 0015d5	75 03 e9 e1 fe 		je	L01341
	*** 0015da	3d 02 00 		cmp	ax,OFFSET 2
	*** 0015dd	75 03 e9 34 ff 		je	L01344
	*** 0015e2	3d 03 00 		cmp	ax,OFFSET 3
	*** 0015e5	75 03 e9 87 ff 		je	L01347
	*** 0015ea	e9 df ff 		jmp	L01350
					L01338:
; ; ; Line 1948
; ; ; Line 1950
					L01336:
					L01333:
; Line 1950
	*** 0015ed	83 46 fc 01 		add	WORD PTR -4[bp],OFFSET 1
					L01335:
	*** 0015f1	a1 28 00 		mov	ax,WORD PTR _num_mechs
	*** 0015f4	39 46 fc 		cmp	WORD PTR -4[bp],ax
	*** 0015f7	7d 03 e9 a0 fe 		jl	L01332
					L01334:
; ; ; Line 1952
; Line 1952
					L01330:
	*** 0015fc	5f 			pop	di
	*** 0015fd	5e 			pop	si
	*** 0015fe	c9 			leave
	*** 0015ff	cb 			ret	OFFSET 0
Local Size: 4
; Line 0
ine 1957
					_Behind_Mechs:
	*** 001600	c8 00 00 00 		enter	OFFSET L01685,OFFSET 0
	*** 001604	56 			push	si
	*** 001605	57 			push	di
; index = fffc
; ; ; ; Line 1960
; ; ; ; ; Line 1964
	*** 001606	c7 46 fc 00 00 		mov	WORD PTR -4[bp],OFFSET 0
	*** 00160b	e9 00 00 		jmp	L01356
					L01353:
; ; Line 1965
; ; ; ; ; Line 1969
	*** 00160e	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 001612	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 001615	03 d8 			add	bx,ax
	*** 001617	83 7f 0a 00 		cmp	WORD PTR 10[bx],OFFSET 0
	*** 00161b	75 03 e9 00 00 		je	L01357
; ; Line 1970
; ; ; Line 1972
	*** 001620	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 001624	8b d8 			mov	bx,ax
	*** 001626	8b 87 00 00 		mov	ax,WORD PTR _mech_array[bx]
	*** 00162a	e9 00 00 		jmp	L01358
; ; Line 1973
; ; ; Line 1975
					L01362:
; ; Line 1976
; ; Line 1977
	*** 00162d	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 001631	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 001634	03 d8 			add	bx,ax
	*** 001636	8b 47 02 		mov	ax,WORD PTR 2[bx]
	*** 001639	a3 00 00 		mov	WORD PTR _robot_1,ax
; ; Line 1978
	*** 00163c	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 001640	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 001643	03 d8 			add	bx,ax
	*** 001645	8b 47 04 		mov	ax,WORD PTR 4[bx]
	*** 001648	a3 02 00 		mov	WORD PTR _robot_1+2,ax
; ; Line 1979
	*** 00164b	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 00164f	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 001652	03 d8 			add	bx,ax
	*** 001654	8b 47 20 		mov	ax,WORD PTR 32[bx]
	*** 001657	8b 57 22 		mov	dx,WORD PTR 34[bx]
	*** 00165a	a3 7a 00 		mov	WORD PTR _robot_1+122,ax
	*** 00165d	89 16 7c 00 		mov	WORD PTR _robot_1+124,dx
; ; ; Line 1981
	*** 001661	68 00 00 		push	OFFSET _robot_1
	*** 001664	9a 00 00 00 00 		call	FAR PTR _Behind_Sprite_DB
	*** 001669	83 c4 02 		add	sp,OFFSET 2
; ; ; Line 1983
	*** 00166c	e9 00 00 		jmp	L01359
; ; ; Line 1985
					L01363:
; ; Line 1986
; ; Line 1987
	*** 00166f	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 001673	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 001676	03 d8 			add	bx,ax
	*** 001678	8b 47 02 		mov	ax,WORD PTR 2[bx]
	*** 00167b	a3 00 00 		mov	WORD PTR _robot_2,ax
; ; Line 1988
	*** 00167e	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 001682	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 001685	03 d8 			add	bx,ax
	*** 001687	8b 47 04 		mov	ax,WORD PTR 4[bx]
	*** 00168a	a3 02 00 		mov	WORD PTR _robot_2+2,ax
; ; Line 1989
	*** 00168d	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 001691	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 001694	03 d8 			add	bx,ax
	*** 001696	8b 47 20 		mov	ax,WORD PTR 32[bx]
	*** 001699	8b 57 22 		mov	dx,WORD PTR 34[bx]
	*** 00169c	a3 7a 00 		mov	WORD PTR _robot_2+122,ax
	*** 00169f	89 16 7c 00 		mov	WORD PTR _robot_2+124,dx
; ; ; Line 1991
	*** 0016a3	68 00 00 		push	OFFSET _robot_2
	*** 0016a6	9a 00 00 00 00 		call	FAR PTR _Behind_Sprite_DB
	*** 0016ab	83 c4 02 		add	sp,OFFSET 2
; ; ; Line 1993
	*** 0016ae	e9 00 00 		jmp	L01359
; ; ; Line 1995
					L01364:
; ; Line 1996
; ; Line 1997
	*** 0016b1	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 0016b5	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 0016b8	03 d8 			add	bx,ax
	*** 0016ba	8b 47 02 		mov	ax,WORD PTR 2[bx]
	*** 0016bd	a3 00 00 		mov	WORD PTR _robot_3,ax
; ; Line 1998
	*** 0016c0	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 0016c4	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 0016c7	03 d8 			add	bx,ax
	*** 0016c9	8b 47 04 		mov	ax,WORD PTR 4[bx]
	*** 0016cc	a3 02 00 		mov	WORD PTR _robot_3+2,ax
; ; Line 1999
	*** 0016cf	6b 46 fc 24 		_imul3 	ax,WORD PTR -4[bp],OFFSET 36
	*** 0016d3	bb 00 00 		mov	bx,OFFSET _mech_array
	*** 0016d6	03 d8 			add	bx,ax
	*** 0016d8	8b 47 20 		mov	ax,WORD PTR 32[bx]
	*** 0016db	8b 57 22 		mov	dx,WORD PTR 34[bx]
	*** 0016de	a3 7a 00 		mov	WORD PTR _robot_3+122,ax
	*** 0016e1	89 16 7c 00 		mov	WORD PTR _robot_3+124,dx
; ; ; Line 2001
	*** 0016e5	68 00 00 		push	OFFSET _robot_3
	*** 0016e8	9a 00 00 00 00 		call	FAR PTR _Behind_Sprite_DB
	*** 0016ed	83 c4 02 		add	sp,OFFSET 2
; ; ; Line 2003
	*** 0016f0	e9 00 00 		jmp	L01359
; ; ; Line 2005
					L01365:
	*** 0016f3	e9 00 00 		jmp	L01359
; ; ; Line 2007
; Line 2007
	*** 0016f6	e9 00 00 		jmp	L01359
					L01358:
	*** 0016f9	3d 01 00 		cmp	ax,OFFSET 1
	*** 0016fc	75 03 e9 2c ff 		je	L01362
	*** 001701	3d 02 00 		cmp	ax,OFFSET 2
	*** 001704	75 03 e9 66 ff 		je	L01363
	*** 001709	3d 03 00 		cmp	ax,OFFSET 3
	*** 00170c	75 03 e9 a0 ff 		je	L01364
	*** 001711	e9 df ff 		jmp	L01365
					L01359:
; ; ; Line 2009
; ; ; Line 2011
					L01357:
					L01354:
; Line 2011
	*** 001714	83 46 fc 01 		add	WORD PTR -4[bp],OFFSET 1
					L01356:
	*** 001718	a1 28 00 		mov	ax,WORD PTR _num_mechs
	*** 00171b	39 46 fc 		cmp	WORD PTR -4[bp],ax
	*** 00171e	7d 03 e9 eb fe 		jl	L01353
					L01355:
; ; ; Line 2013
; Line 2013
					L01351:
	*** 001723	5f 			pop	di
	*** 001724	5e 			pop	si
	*** 001725	c9 			leave
	*** 001726	cb 			ret	OFFSET 0
Local Size: 4
; Line 0
ine 2018
					_Control_Mother:
	*** 001728	c8 00 00 00 		enter	OFFSET L01686,OFFSET 0
	*** 00172c	56 			push	si
	*** 00172d	57 			push	di
; ; ; ; ; Line 2022
	*** 00172e	83 3e 78 00 00 		cmp	WORD PTR _mother+120,OFFSET 0
	*** 001733	74 03 e9 00 00 		jne	L01367
	*** 001738	9a 00 00 00 00 		call	FAR PTR _rand
	*** 00173d	b9 f4 01 		mov	cx,OFFSET 500
	*** 001740	99 			cwd
	*** 001741	f7 f9 			idiv	cx
	*** 001743	83 fa 01 		cmp	dx,OFFSET 1
	*** 001746	74 03 e9 00 00 		jne	L01367
; ; Line 2023
; ; ; ; ; Line 2027
	*** 00174b	c7 06 78 00 01 00 	mov	WORD PTR _mother+120,OFFSET 1
; ; ; ; ; Line 2031
	*** 001751	9a 00 00 00 00 		call	FAR PTR _rand
	*** 001756	b9 02 00 		mov	cx,OFFSET 2
	*** 001759	99 			cwd
	*** 00175a	f7 f9 			idiv	cx
	*** 00175c	8b c2 			mov	ax,dx
	*** 00175e	e9 00 00 		jmp	L01368
; ; Line 2032
; ; ; Line 2034
					L01372:
; ; Line 2035
; ; ; Line 2037
	*** 001761	c7 06 74 00 01 00 	mov	WORD PTR _mother+116,OFFSET 1
; ; Line 2038
	*** 001767	9a 00 00 00 00 		call	FAR PTR _rand
	*** 00176c	b9 02 00 		mov	cx,OFFSET 2
	*** 00176f	99 			cwd
	*** 001770	f7 f9 			idiv	cx
	*** 001772	83 c2 04 		add	dx,OFFSET 4
	*** 001775	89 16 10 00 		mov	WORD PTR _mother+16,dx
; ; Line 2039
	*** 001779	c7 06 00 00 00 00 	mov	WORD PTR _mother,OFFSET 0
; ; Line 2040
	*** 00177f	9a 00 00 00 00 		call	FAR PTR _rand
	*** 001784	b9 10 00 		mov	cx,OFFSET 16
	*** 001787	99 			cwd
	*** 001788	f7 f9 			idiv	cx
	*** 00178a	83 c2 0c 		add	dx,OFFSET 12
	*** 00178d	89 16 02 00 		mov	WORD PTR _mother+2,dx
; ; ; Line 2042
	*** 001791	e9 00 00 		jmp	L01369
; ; ; Line 2044
					L01373:
; ; Line 2045
; ; ; Line 2047
	*** 001794	c7 06 74 00 00 00 	mov	WORD PTR _mother+116,OFFSET 0
; ; Line 2048
	*** 00179a	9a 00 00 00 00 		call	FAR PTR _rand
	*** 00179f	b9 02 00 		mov	cx,OFFSET 2
	*** 0017a2	99 			cwd
	*** 0017a3	f7 f9 			idiv	cx
	*** 0017a5	83 c2 04 		add	dx,OFFSET 4
	*** 0017a8	f7 da 			neg	dx
	*** 0017aa	89 16 10 00 		mov	WORD PTR _mother+16,dx
; ; Line 2049
	*** 0017ae	c7 06 00 00 2c 01 	mov	WORD PTR _mother,OFFSET 300
; ; Line 2050
	*** 0017b4	9a 00 00 00 00 		call	FAR PTR _rand
	*** 0017b9	b9 10 00 		mov	cx,OFFSET 16
	*** 0017bc	99 			cwd
	*** 0017bd	f7 f9 			idiv	cx
	*** 0017bf	83 c2 0c 		add	dx,OFFSET 12
	*** 0017c2	89 16 02 00 		mov	WORD PTR _mother+2,dx
; ; ; ; Line 2053
	*** 0017c6	e9 00 00 		jmp	L01369
; ; ; ; Line 2056
					L01374:
	*** 0017c9	e9 00 00 		jmp	L01369
; ; ; Line 2058
; Line 2058
	*** 0017cc	e9 00 00 		jmp	L01369
					L01368:
	*** 0017cf	3d 00 00 		cmp	ax,OFFSET 0
	*** 0017d2	75 03 e9 8a ff 		je	L01372
	*** 0017d7	3d 01 00 		cmp	ax,OFFSET 1
	*** 0017da	75 03 e9 b5 ff 		je	L01373
	*** 0017df	e9 e7 ff 		jmp	L01374
					L01369:
; ; ; Line 2060
	*** 0017e2	68 00 00 		push	OFFSET _mother
	*** 0017e5	9a 00 00 00 00 		call	FAR PTR _Behind_Sprite_DB
	*** 0017ea	83 c4 02 		add	sp,OFFSET 2
; ; ; Line 2062
; ; ; Line 2064
					L01367:
; Line 2064
					L01366:
	*** 0017ed	5f 			pop	di
	*** 0017ee	5e 			pop	si
	*** 0017ef	c9 			leave
	*** 0017f0	cb 			ret	OFFSET 0
Local Size: 2
; Line 0
ine 2069
					_Move_Mother:
	*** 0017f2	c8 00 00 00 		enter	OFFSET L01687,OFFSET 0
	*** 0017f6	56 			push	si
	*** 0017f7	57 			push	di
; ; ; ; ; Line 2073
	*** 0017f8	83 3e 78 00 01 		cmp	WORD PTR _mother+120,OFFSET 1
	*** 0017fd	74 03 e9 00 00 		jne	L01376
; ; Line 2074
; ; ; ; ; Line 2078
	*** 001802	a1 10 00 		mov	ax,WORD PTR _mother+16
	*** 001805	01 06 00 00 		add	WORD PTR _mother,ax
; ; ; ; ; Line 2082
	*** 001809	8b 1e 00 00 		mov	bx,WORD PTR _mother
	*** 00180d	d1 e3 			shl	bx,OFFSET 1
	*** 00180f	8b 87 00 00 		mov	ax,WORD PTR _cos_look[bx]
	*** 001813	01 06 02 00 		add	WORD PTR _mother+2,ax
; ; ; ; ; Line 2086
	*** 001817	83 3e 02 00 00 		cmp	WORD PTR _mother+2,OFFSET 0
	*** 00181c	7c 03 e9 00 00 		jge	L01377
	*** 001821	c7 06 02 00 00 00 	mov	WORD PTR _mother+2,OFFSET 0
; ; ; Line 2088
					L01377:
	*** 001827	a1 00 00 		mov	ax,WORD PTR _mother
	*** 00182a	3d 2c 01 		cmp	ax,OFFSET 300
	*** 00182d	76 03 e9 00 00 		ja	L01379
	*** 001832	83 3e 00 00 00 		cmp	WORD PTR _mother,OFFSET 0
	*** 001837	7c 03 e9 00 00 		jge	L01378
					L01379:
; ; Line 2089
	*** 00183c	c7 06 78 00 00 00 	mov	WORD PTR _mother+120,OFFSET 0
; ; ; Line 2091
					L01378:
; ; ; Line 2093
					L01376:
; Line 2093
					L01375:
	*** 001842	5f 			pop	di
	*** 001843	5e 			pop	si
	*** 001844	c9 			leave
	*** 001845	cb 			ret	OFFSET 0
Local Size: 2
; Line 0
ine 2098
					_Erase_Mother:
	*** 001846	c8 00 00 00 		enter	OFFSET L01688,OFFSET 0
	*** 00184a	56 			push	si
	*** 00184b	57 			push	di
; ; ; ; ; Line 2102
	*** 00184c	83 3e 78 00 01 		cmp	WORD PTR _mother+120,OFFSET 1
	*** 001851	74 03 e9 00 00 		jne	L01381
; ; Line 2103
; ; ; Line 2105
	*** 001856	68 00 00 		push	OFFSET _mother
	*** 001859	9a 00 00 00 00 		call	FAR PTR _Erase_Sprite_DB
	*** 00185e	83 c4 02 		add	sp,OFFSET 2
; ; ; Line 2107
; ; ; Line 2109
					L01381:
; Line 2109
					L01380:
	*** 001861	5f 			pop	di
	*** 001862	5e 			pop	si
	*** 001863	c9 			leave
	*** 001864	cb 			ret	OFFSET 0
Local Size: 2
; Line 0
ine 2114
					_Behind_Mother:
	*** 001866	c8 00 00 00 		enter	OFFSET L01689,OFFSET 0
	*** 00186a	56 			push	si
	*** 00186b	57 			push	di
; ; ; ; ; Line 2118
	*** 00186c	83 3e 78 00 01 		cmp	WORD PTR _mother+120,OFFSET 1
	*** 001871	74 03 e9 00 00 		jne	L01383
; ; Line 2119
; ; ; Line 2121
	*** 001876	68 00 00 		push	OFFSET _mother
	*** 001879	9a 00 00 00 00 		call	FAR PTR _Behind_Sprite_DB
	*** 00187e	83 c4 02 		add	sp,OFFSET 2
; ; ; Line 2123
; ; ; Line 2125
					L01383:
; Line 2125
					L01382:
	*** 001881	5f 			pop	di
	*** 001882	5e 			pop	si
	*** 001883	c9 			leave
	*** 001884	cb 			ret	OFFSET 0
Local Size: 2
; Line 0
; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; ; Line 2130
					_Draw_Mother:
	*** 001886	c8 00 00 00 		enter	OFFSET L01690,OFFSET 0
	*** 00188a	56 			push	si
	*** 00188b	57 			push	di
; ; ; ; ; Line 2134
	*** 00188c	83 3e 78 00 01 		cmp	WORD PTR _mother+120,OFFSET 1
	*** 001891	74 03 e9 00 00 		jne	L01385
; ; Line 2135
; ; ; Line 2137
	*** 001896	68 00 00 		push	OFFSET _mother
	*** 001899	9a 00 00 00 00 		call	FAR PTR _Draw_Sprite_DB
	*** 00189e	83 c4 02 		add	sp,OFFSET 2
; ; ; Line 2139
; ; ; Line 2141
					L01385:
; Line 2141
					L01384:
	*** 0018a1	5f 			pop	di
	*** 0018a2	5e 			pop	si
	*** 0018a3	c9 			leave
	*** 0018a4	cb 			ret	OFFSET 0
Local Size: 2
; Line 0
ine 2146
					_Init_Stars:
	*** 0018a6	c8 00 00 00 		enter	OFFSET L01691,OFFSET 0
	*** 0018aa	56 			push	si
	*** 0018ab	57 			push	di
; index = fffc
; ; ; ; ; Line 2150
; ; ; ; ; Line 2154
	*** 0018ac	c7 46 fc 00 00 		mov	WORD PTR -4[bp],OFFSET 0
	*** 0018b1	e9 00 00 		jmp	L01391
					L01388:
; ; Line 2155
; ; ; ; Line 2158
	*** 0018b4	9a 00 00 00 00 		call	FAR PTR _rand
	*** 0018b9	b9 40 01 		mov	cx,OFFSET 320
	*** 0018bc	99 			cwd
	*** 0018bd	f7 f9 			idiv	cx
	*** 0018bf	8b 5e fc 		mov	bx,WORD PTR -4[bp]
	*** 0018c2	d1 e3 			shl	bx,OFFSET 1
	*** 0018c4	d1 e3 			shl	bx,OFFSET 1
	*** 0018c6	d1 e3 			shl	bx,OFFSET 1
	*** 0018c8	89 97 00 00 		mov	WORD PTR _stars[bx],dx
; ; Line 2159
	*** 0018cc	9a 00 00 00 00 		call	FAR PTR _rand
	*** 0018d1	b9 b4 00 		mov	cx,OFFSET 180
	*** 0018d4	99 			cwd
	*** 0018d5	f7 f9 			idiv	cx
	*** 0018d7	8b 46 fc 		mov	ax,WORD PTR -4[bp]
	*** 0018da	d1 e0 			shl	ax,OFFSET 1
	*** 0018dc	d1 e0 			shl	ax,OFFSET 1
	*** 0018de	d1 e0 			shl	ax,OFFSET 1
	*** 0018e0	bb 00 00 		mov	bx,OFFSET _stars
	*** 0018e3	03 d8 			add	bx,ax
	*** 0018e5	89 57 02 		mov	WORD PTR 2[bx],dx
; ; ; ; ; Line 2163
	*** 0018e8	9a 00 00 00 00 		call	FAR PTR _rand
	*** 0018ed	b9 03 00 		mov	cx,OFFSET 3
	*** 0018f0	99 			cwd
	*** 0018f1	f7 f9 			idiv	cx
	*** 0018f3	8b c2 			mov	ax,dx
	*** 0018f5	e9 00 00 		jmp	L01392
; ; Line 2164
; ; Line 2165
					L01396:
; ; Line 2166
; ; ; ; Line 2169
	*** 0018f8	8b 46 fc 		mov	ax,WORD PTR -4[bp]
	*** 0018fb	d1 e0 			shl	ax,OFFSET 1
	*** 0018fd	d1 e0 			shl	ax,OFFSET 1
	*** 0018ff	d1 e0 			shl	ax,OFFSET 1
	*** 001901	bb 00 00 		mov	bx,OFFSET _stars
	*** 001904	03 d8 			add	bx,ax
	*** 001906	c7 47 04 01 00 		mov	WORD PTR 4[bx],OFFSET 1
; ; Line 2170
	*** 00190b	8b 46 fc 		mov	ax,WORD PTR -4[bp]
	*** 00190e	d1 e0 			shl	ax,OFFSET 1
	*** 001910	d1 e0 			shl	ax,OFFSET 1
	*** 001912	d1 e0 			shl	ax,OFFSET 1
	*** 001914	bb 00 00 		mov	bx,OFFSET _stars
	*** 001917	03 d8 			add	bx,ax
	*** 001919	c6 47 06 08 		mov	BYTE PTR 6[bx],OFFSET 8
; ; ; Line 2172
	*** 00191d	e9 00 00 		jmp	L01393
; ; ; Line 2174
					L01397:
; ; Line 2175
; ; ; Line 2177
	*** 001920	8b 46 fc 		mov	ax,WORD PTR -4[bp]
	*** 001923	d1 e0 			shl	ax,OFFSET 1
	*** 001925	d1 e0 			shl	ax,OFFSET 1
	*** 001927	d1 e0 			shl	ax,OFFSET 1
	*** 001929	bb 00 00 		mov	bx,OFFSET _stars
	*** 00192c	03 d8 			add	bx,ax
	*** 00192e	c7 47 04 02 00 		mov	WORD PTR 4[bx],OFFSET 2
; ; Line 2178
	*** 001933	8b 46 fc 		mov	ax,WORD PTR -4[bp]
	*** 001936	d1 e0 			shl	ax,OFFSET 1
	*** 001938	d1 e0 			shl	ax,OFFSET 1
	*** 00193a	d1 e0 			shl	ax,OFFSET 1
	*** 00193c	bb 00 00 		mov	bx,OFFSET _stars
	*** 00193f	03 d8 			add	bx,ax
	*** 001941	c6 47 06 07 		mov	BYTE PTR 6[bx],OFFSET 7
; ; ; Line 2180
	*** 001945	e9 00 00 		jmp	L01393
; ; ; Line 2182
					L01398:
; ; Line 2183
; ; ; Line 2185
	*** 001948	8b 46 fc 		mov	ax,WORD PTR -4[bp]
	*** 00194b	d1 e0 			shl	ax,OFFSET 1
	*** 00194d	d1 e0 			shl	ax,OFFSET 1
	*** 00194f	d1 e0 			shl	ax,OFFSET 1
	*** 001951	bb 00 00 		mov	bx,OFFSET _stars
	*** 001954	03 d8 			add	bx,ax
	*** 001956	c7 47 04 03 00 		mov	WORD PTR 4[bx],OFFSET 3
; ; Line 2186
	*** 00195b	8b 46 fc 		mov	ax,WORD PTR -4[bp]
	*** 00195e	d1 e0 			shl	ax,OFFSET 1
	*** 001960	d1 e0 			shl	ax,OFFSET 1
	*** 001962	d1 e0 			shl	ax,OFFSET 1
	*** 001964	bb 00 00 		mov	bx,OFFSET _stars
	*** 001967	03 d8 			add	bx,ax
	*** 001969	c6 47 06 0f 		mov	BYTE PTR 6[bx],OFFSET 15
; ; ; Line 2188
	*** 00196d	e9 00 00 		jmp	L01393
; ; ; Line 2190
; Line 2190
	*** 001970	e9 00 00 		jmp	L01393
					L01392:
	*** 001973	3d 00 00 		cmp	ax,OFFSET 0
	*** 001976	75 03 e9 7d ff 		je	L01396
	*** 00197b	3d 01 00 		cmp	ax,OFFSET 1
	*** 00197e	75 03 e9 9d ff 		je	L01397
	*** 001983	3d 02 00 		cmp	ax,OFFSET 2
	*** 001986	75 03 e9 bd ff 		je	L01398
	*** 00198b	e9 00 00 		jmp	L01393
					L01393:
; ; ; Line 2192
					L01389:
; Line 2192
	*** 00198e	83 46 fc 01 		add	WORD PTR -4[bp],OFFSET 1
					L01391:
	*** 001992	83 7e fc 32 		cmp	WORD PTR -4[bp],OFFSET 50
	*** 001996	7d 03 e9 19 ff 		jl	L01388
					L01390:
; ; ; Line 2194
; Line 2194
					L01386:
	*** 00199b	5f 			pop	di
	*** 00199c	5e 			pop	si
	*** 00199d	c9 			leave
	*** 00199e	cb 			ret	OFFSET 0
Local Size: 4
; Line 0
ine 2199
					_Move_Stars:
	*** 0019a0	c8 00 00 00 		enter	OFFSET L01692,OFFSET 0
	*** 0019a4	56 			push	si
	*** 0019a5	57 			push	di
; index = fffc
; ; ; Line 2201
; ; ; ; ; ; Line 2206
	*** 0019a6	c7 46 fc 00 00 		mov	WORD PTR -4[bp],OFFSET 0
	*** 0019ab	e9 00 00 		jmp	L01404
					L01401:
; ; Line 2207
; ; ; ; ; ; ; ; Line 2214
	*** 0019ae	8b 46 fc 		mov	ax,WORD PTR -4[bp]
	*** 0019b1	d1 e0 			shl	ax,OFFSET 1
	*** 0019b3	d1 e0 			shl	ax,OFFSET 1
	*** 0019b5	d1 e0 			shl	ax,OFFSET 1
	*** 0019b7	bb 00 00 		mov	bx,OFFSET _stars
	*** 0019ba	03 d8 			add	bx,ax
	*** 0019bc	8b 47 04 		mov	ax,WORD PTR 4[bx]
	*** 0019bf	e9 00 00 		jmp	L01405
; ; Line 2215
; ; Line 2216
					L01409:
; ; Line 2217
; ; Line 2218
	*** 0019c2	8b 46 fc 		mov	ax,WORD PTR -4[bp]
	*** 0019c5	d1 e0 			shl	ax,OFFSET 1
	*** 0019c7	d1 e0 			shl	ax,OFFSET 1
	*** 0019c9	d1 e0 			shl	ax,OFFSET 1
	*** 0019cb	bb 00 00 		mov	bx,OFFSET _stars
	*** 0019ce	03 d8 			add	bx,ax
	*** 0019d0	a1 10 00 		mov	ax,WORD PTR _velocity_1
	*** 0019d3	01 47 02 		add	WORD PTR 2[bx],ax
; ; Line 2219
	*** 0019d6	e9 00 00 		jmp	L01406
; ; ; Line 2221
					L01410:
; ; Line 2222
; ; Line 2223
	*** 0019d9	8b 46 fc 		mov	ax,WORD PTR -4[bp]
	*** 0019dc	d1 e0 			shl	ax,OFFSET 1
	*** 0019de	d1 e0 			shl	ax,OFFSET 1
	*** 0019e0	d1 e0 			shl	ax,OFFSET 1
	*** 0019e2	bb 00 00 		mov	bx,OFFSET _stars
	*** 0019e5	03 d8 			add	bx,ax
	*** 0019e7	a1 12 00 		mov	ax,WORD PTR _velocity_2
	*** 0019ea	01 47 02 		add	WORD PTR 2[bx],ax
; ; Line 2224
	*** 0019ed	e9 00 00 		jmp	L01406
; ; ; Line 2226
					L01411:
; ; Line 2227
; ; Line 2228
	*** 0019f0	8b 46 fc 		mov	ax,WORD PTR -4[bp]
	*** 0019f3	d1 e0 			shl	ax,OFFSET 1
	*** 0019f5	d1 e0 			shl	ax,OFFSET 1
	*** 0019f7	d1 e0 			shl	ax,OFFSET 1
	*** 0019f9	bb 00 00 		mov	bx,OFFSET _stars
	*** 0019fc	03 d8 			add	bx,ax
	*** 0019fe	a1 14 00 		mov	ax,WORD PTR _velocity_3
	*** 001a01	01 47 02 		add	WORD PTR 2[bx],ax
; ; Line 2229
	*** 001a04	e9 00 00 		jmp	L01406
; ; ; Line 2231
; Line 2231
	*** 001a07	e9 00 00 		jmp	L01406
					L01405:
	*** 001a0a	3d 01 00 		cmp	ax,OFFSET 1
	*** 001a0d	75 03 e9 b0 ff 		je	L01409
	*** 001a12	3d 02 00 		cmp	ax,OFFSET 2
	*** 001a15	75 03 e9 bf ff 		je	L01410
	*** 001a1a	3d 03 00 		cmp	ax,OFFSET 3
	*** 001a1d	75 03 e9 ce ff 		je	L01411
	*** 001a22	e9 00 00 		jmp	L01406
					L01406:
; ; ; ; ; Line 2235
	*** 001a25	8b 46 fc 		mov	ax,WORD PTR -4[bp]
	*** 001a28	d1 e0 			shl	ax,OFFSET 1
	*** 001a2a	d1 e0 			shl	ax,OFFSET 1
	*** 001a2c	d1 e0 			shl	ax,OFFSET 1
	*** 001a2e	bb 00 00 		mov	bx,OFFSET _stars
	*** 001a31	03 d8 			add	bx,ax
	*** 001a33	81 7f 02 b3 00 		cmp	WORD PTR 2[bx],OFFSET 179
	*** 001a38	7f 03 e9 00 00 		jle	L01412
; ; Line 2236
	*** 001a3d	8b 46 fc 		mov	ax,WORD PTR -4[bp]
	*** 001a40	d1 e0 			shl	ax,OFFSET 1
	*** 001a42	d1 e0 			shl	ax,OFFSET 1
	*** 001a44	d1 e0 			shl	ax,OFFSET 1
	*** 001a46	bb 00 00 		mov	bx,OFFSET _stars
	*** 001a49	03 d8 			add	bx,ax
	*** 001a4b	8b 47 02 		mov	ax,WORD PTR 2[bx]
	*** 001a4e	05 4c ff 		add	ax,OFFSET -180
	*** 001a51	8b 56 fc 		mov	dx,WORD PTR -4[bp]
	*** 001a54	d1 e2 			shl	dx,OFFSET 1
	*** 001a56	d1 e2 			shl	dx,OFFSET 1
	*** 001a58	d1 e2 			shl	dx,OFFSET 1
	*** 001a5a	bb 00 00 		mov	bx,OFFSET _stars
	*** 001a5d	03 da 			add	bx,dx
	*** 001a5f	89 47 02 		mov	WORD PTR 2[bx],ax
; ; Line 2237
	*** 001a62	e9 00 00 		jmp	L01413
					L01412:
; Line 2237
; ; Line 2238
	*** 001a65	8b 46 fc 		mov	ax,WORD PTR -4[bp]
	*** 001a68	d1 e0 			shl	ax,OFFSET 1
	*** 001a6a	d1 e0 			shl	ax,OFFSET 1
	*** 001a6c	d1 e0 			shl	ax,OFFSET 1
	*** 001a6e	bb 00 00 		mov	bx,OFFSET _stars
	*** 001a71	03 d8 			add	bx,ax
	*** 001a73	83 7f 02 00 		cmp	WORD PTR 2[bx],OFFSET 0
	*** 001a77	7c 03 e9 00 00 		jge	L01414
; ; Line 2239
	*** 001a7c	8b 46 fc 		mov	ax,WORD PTR -4[bp]
	*** 001a7f	d1 e0 			shl	ax,OFFSET 1
	*** 001a81	d1 e0 			shl	ax,OFFSET 1
	*** 001a83	d1 e0 			shl	ax,OFFSET 1
	*** 001a85	bb 00 00 		mov	bx,OFFSET _stars
	*** 001a88	03 d8 			add	bx,ax
	*** 001a8a	8b 47 02 		mov	ax,WORD PTR 2[bx]
	*** 001a8d	05 b4 00 		add	ax,OFFSET 180
	*** 001a90	8b 56 fc 		mov	dx,WORD PTR -4[bp]
	*** 001a93	d1 e2 			shl	dx,OFFSET 1
	*** 001a95	d1 e2 			shl	dx,OFFSET 1
	*** 001a97	d1 e2 			shl	dx,OFFSET 1
	*** 001a99	bb 00 00 		mov	bx,OFFSET _stars
	*** 001a9c	03 da 			add	bx,dx
	*** 001a9e	89 47 02 		mov	WORD PTR 2[bx],ax
; ; ; ; Line 2242
					L01414:
					L01413:
					L01402:
; Line 2242
	*** 001aa1	83 46 fc 01 		add	WORD PTR -4[bp],OFFSET 1
					L01404:
	*** 001aa5	83 7e fc 32 		cmp	WORD PTR -4[bp],OFFSET 50
	*** 001aa9	7d 03 e9 00 ff 		jl	L01401
					L01403:
; ; ; Line 2244
; Line 2244
					L01399:
	*** 001aae	5f 			pop	di
	*** 001aaf	5e 			pop	si
	*** 001ab0	c9 			leave
	*** 001ab1	cb 			ret	OFFSET 0
Local Size: 4
; Line 0
ine 2249
					_Behind_Stars:
	*** 001ab2	c8 00 00 00 		enter	OFFSET L01693,OFFSET 0
	*** 001ab6	56 			push	si
	*** 001ab7	57 			push	di
; index = fffc
; ; ; ; Line 2252
; ; ; Line 2254
	*** 001ab8	c7 46 fc 00 00 		mov	WORD PTR -4[bp],OFFSET 0
	*** 001abd	e9 00 00 		jmp	L01420
					L01417:
; ; Line 2255
; ; ; Line 2257
	*** 001ac0	8b 46 fc 		mov	ax,WORD PTR -4[bp]
	*** 001ac3	d1 e0 			shl	ax,OFFSET 1
	*** 001ac5	d1 e0 			shl	ax,OFFSET 1
	*** 001ac7	d1 e0 			shl	ax,OFFSET 1
	*** 001ac9	bb 00 00 		mov	bx,OFFSET _stars
	*** 001acc	03 d8 			add	bx,ax
	*** 001ace	ff 77 02 		push	WORD PTR 2[bx]
	*** 001ad1	8b 5e fc 		mov	bx,WORD PTR -4[bp]
	*** 001ad4	d1 e3 			shl	bx,OFFSET 1
	*** 001ad6	d1 e3 			shl	bx,OFFSET 1
	*** 001ad8	d1 e3 			shl	bx,OFFSET 1
	*** 001ada	ff b7 00 00 		push	WORD PTR _stars[bx]
	*** 001ade	9a 00 00 00 00 		call	FAR PTR _Get_Pixel_DB
	*** 001ae3	83 c4 04 		add	sp,OFFSET 4
	*** 001ae6	8b 56 fc 		mov	dx,WORD PTR -4[bp]
	*** 001ae9	d1 e2 			shl	dx,OFFSET 1
	*** 001aeb	d1 e2 			shl	dx,OFFSET 1
	*** 001aed	d1 e2 			shl	dx,OFFSET 1
	*** 001aef	bb 00 00 		mov	bx,OFFSET _stars
	*** 001af2	03 da 			add	bx,dx
	*** 001af4	88 47 07 		mov	BYTE PTR 7[bx],al
; ; ; Line 2259
					L01418:
; Line 2259
	*** 001af7	83 46 fc 01 		add	WORD PTR -4[bp],OFFSET 1
					L01420:
	*** 001afb	83 7e fc 32 		cmp	WORD PTR -4[bp],OFFSET 50
	*** 001aff	7d 03 e9 bc ff 		jl	L01417
					L01419:
; ; ; Line 2261
; Line 2261
					L01415:
	*** 001b04	5f 			pop	di
	*** 001b05	5e 			pop	si
	*** 001b06	c9 			leave
	*** 001b07	cb 			ret	OFFSET 0
Local Size: 4
; Line 0
ine 2266
					_Draw_Stars:
	*** 001b08	c8 00 00 00 		enter	OFFSET L01694,OFFSET 0
	*** 001b0c	56 			push	si
	*** 001b0d	57 			push	di
; index = fffc
; ; ; ; ; Line 2270
; ; ; Line 2272
	*** 001b0e	c7 46 fc 00 00 		mov	WORD PTR -4[bp],OFFSET 0
	*** 001b13	e9 00 00 		jmp	L01426
					L01423:
; ; Line 2273
; ; ; Line 2275
	*** 001b16	8b 46 fc 		mov	ax,WORD PTR -4[bp]
	*** 001b19	d1 e0 			shl	ax,OFFSET 1
	*** 001b1b	d1 e0 			shl	ax,OFFSET 1
	*** 001b1d	d1 e0 			shl	ax,OFFSET 1
	*** 001b1f	bb 00 00 		mov	bx,OFFSET _stars
	*** 001b22	03 d8 			add	bx,ax
	*** 001b24	8a 47 06 		mov	al,BYTE PTR 6[bx]
	*** 001b27	25 ff 00 		and	ax,OFFSET 255
	*** 001b2a	50 			push	ax
	*** 001b2b	8b 46 fc 		mov	ax,WORD PTR -4[bp]
	*** 001b2e	d1 e0 			shl	ax,OFFSET 1
	*** 001b30	d1 e0 			shl	ax,OFFSET 1
	*** 001b32	d1 e0 			shl	ax,OFFSET 1
	*** 001b34	bb 00 00 		mov	bx,OFFSET _stars
	*** 001b37	03 d8 			add	bx,ax
	*** 001b39	ff 77 02 		push	WORD PTR 2[bx]
	*** 001b3c	8b 5e fc 		mov	bx,WORD PTR -4[bp]
	*** 001b3f	d1 e3 			shl	bx,OFFSET 1
	*** 001b41	d1 e3 			shl	bx,OFFSET 1
	*** 001b43	d1 e3 			shl	bx,OFFSET 1
	*** 001b45	ff b7 00 00 		push	WORD PTR _stars[bx]
	*** 001b49	9a 00 00 00 00 		call	FAR PTR _Plot_Pixel_Fast_DB
	*** 001b4e	83 c4 06 		add	sp,OFFSET 6
; ; ; Line 2277
					L01424:
; Line 2277
	*** 001b51	83 46 fc 01 		add	WORD PTR -4[bp],OFFSET 1
					L01426:
	*** 001b55	83 7e fc 32 		cmp	WORD PTR -4[bp],OFFSET 50
	*** 001b59	7d 03 e9 b8 ff 		jl	L01423
					L01425:
; ; ; Line 2279
; Line 2279
					L01421:
	*** 001b5e	5f 			pop	di
	*** 001b5f	5e 			pop	si
	*** 001b60	c9 			leave
	*** 001b61	cb 			ret	OFFSET 0
Local Size: 4
; Line 0
ine 2284
					_Erase_Stars:
	*** 001b62	c8 00 00 00 		enter	OFFSET L01695,OFFSET 0
	*** 001b66	56 			push	si
	*** 001b67	57 			push	di
; index = fffc
; ; ; ; Line 2287
; ; ; Line 2289
	*** 001b68	c7 46 fc 00 00 		mov	WORD PTR -4[bp],OFFSET 0
	*** 001b6d	e9 00 00 		jmp	L01432
					L01429:
; ; Line 2290
; ; ; Line 2292
	*** 001b70	8b 46 fc 		mov	ax,WORD PTR -4[bp]
	*** 001b73	d1 e0 			shl	ax,OFFSET 1
	*** 001b75	d1 e0 			shl	ax,OFFSET 1
	*** 001b77	d1 e0 			shl	ax,OFFSET 1
	*** 001b79	bb 00 00 		mov	bx,OFFSET _stars
	*** 001b7c	03 d8 			add	bx,ax
	*** 001b7e	8a 47 07 		mov	al,BYTE PTR 7[bx]
	*** 001b81	25 ff 00 		and	ax,OFFSET 255
	*** 001b84	50 			push	ax
	*** 001b85	8b 46 fc 		mov	ax,WORD PTR -4[bp]
	*** 001b88	d1 e0 			shl	ax,OFFSET 1
	*** 001b8a	d1 e0 			shl	ax,OFFSET 1
	*** 001b8c	d1 e0 			shl	ax,OFFSET 1
	*** 001b8e	bb 00 00 		mov	bx,OFFSET _stars
	*** 001b91	03 d8 			add	bx,ax
	*** 001b93	ff 77 02 		push	WORD PTR 2[bx]
	*** 001b96	8b 5e fc 		mov	bx,WORD PTR -4[bp]
	*** 001b99	d1 e3 			shl	bx,OFFSET 1
	*** 001b9b	d1 e3 			shl	bx,OFFSET 1
	*** 001b9d	d1 e3 			shl	bx,OFFSET 1
	*** 001b9f	ff b7 00 00 		push	WORD PTR _stars[bx]
	*** 001ba3	9a 00 00 00 00 		call	FAR PTR _Plot_Pixel_Fast_DB
	*** 001ba8	83 c4 06 		add	sp,OFFSET 6
; ; ; Line 2294
					L01430:
; Line 2294
	*** 001bab	83 46 fc 01 		add	WORD PTR -4[bp],OFFSET 1
					L01432:
	*** 001baf	83 7e fc 32 		cmp	WORD PTR -4[bp],OFFSET 50
	*** 001bb3	7d 03 e9 b8 ff 		jl	L01429
					L01431:
; ; ; Line 2296
; Line 2296
					L01427:
	*** 001bb8	5f 			pop	di
	*** 001bb9	5e 			pop	si
	*** 001bba	c9 			leave
	*** 001bbb	cb 			ret	OFFSET 0
Local Size: 4
; Line 0
ine 2301
					_Erase_Missiles:
	*** 001bbc	c8 00 00 00 		enter	OFFSET L01696,OFFSET 0
	*** 001bc0	56 			push	si
	*** 001bc1	57 			push	di
; index = fffc
; ; ; ; ; ; Line 2306
; ; ; Line 2308
	*** 001bc2	c7 46 fc 00 00 		mov	WORD PTR -4[bp],OFFSET 0
	*** 001bc7	e9 00 00 		jmp	L01438
					L01435:
; ; Line 2309
; ; ; ; ; Line 2313
	*** 001bca	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 001bce	bb 00 00 		mov	bx,OFFSET _missiles
	*** 001bd1	03 d8 			add	bx,ax
	*** 001bd3	83 7f 0a 01 		cmp	WORD PTR 10[bx],OFFSET 1
	*** 001bd7	74 03 e9 00 00 		jne	L01439
; ; Line 2314
; ; ; Line 2316
	*** 001bdc	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 001be0	bb 00 00 		mov	bx,OFFSET _missiles
	*** 001be3	03 d8 			add	bx,ax
	*** 001be5	8a 47 09 		mov	al,BYTE PTR 9[bx]
	*** 001be8	25 ff 00 		and	ax,OFFSET 255
	*** 001beb	50 			push	ax
	*** 001bec	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 001bf0	bb 00 00 		mov	bx,OFFSET _missiles
	*** 001bf3	03 d8 			add	bx,ax
	*** 001bf5	ff 77 02 		push	WORD PTR 2[bx]
	*** 001bf8	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 001bfc	8b d8 			mov	bx,ax
	*** 001bfe	ff b7 00 00 		push	WORD PTR _missiles[bx]
	*** 001c02	9a 00 00 00 00 		call	FAR PTR _Plot_Pixel_Fast_DB
	*** 001c07	83 c4 06 		add	sp,OFFSET 6
; ; Line 2317
	*** 001c0a	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 001c0e	bb 00 00 		mov	bx,OFFSET _missiles
	*** 001c11	03 d8 			add	bx,ax
	*** 001c13	8a 47 09 		mov	al,BYTE PTR 9[bx]
	*** 001c16	25 ff 00 		and	ax,OFFSET 255
	*** 001c19	50 			push	ax
	*** 001c1a	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 001c1e	bb 00 00 		mov	bx,OFFSET _missiles
	*** 001c21	03 d8 			add	bx,ax
	*** 001c23	8b 47 02 		mov	ax,WORD PTR 2[bx]
	*** 001c26	05 01 00 		add	ax,OFFSET 1
	*** 001c29	50 			push	ax
	*** 001c2a	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 001c2e	8b d8 			mov	bx,ax
	*** 001c30	ff b7 00 00 		push	WORD PTR _missiles[bx]
	*** 001c34	9a 00 00 00 00 		call	FAR PTR _Plot_Pixel_Fast_DB
	*** 001c39	83 c4 06 		add	sp,OFFSET 6
; ; Line 2318
	*** 001c3c	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 001c40	bb 00 00 		mov	bx,OFFSET _missiles
	*** 001c43	03 d8 			add	bx,ax
	*** 001c45	8a 47 09 		mov	al,BYTE PTR 9[bx]
	*** 001c48	25 ff 00 		and	ax,OFFSET 255
	*** 001c4b	50 			push	ax
	*** 001c4c	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 001c50	bb 00 00 		mov	bx,OFFSET _missiles
	*** 001c53	03 d8 			add	bx,ax
	*** 001c55	ff 77 02 		push	WORD PTR 2[bx]
	*** 001c58	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 001c5c	8b d8 			mov	bx,ax
	*** 001c5e	8b 87 00 00 		mov	ax,WORD PTR _missiles[bx]
	*** 001c62	05 01 00 		add	ax,OFFSET 1
	*** 001c65	50 			push	ax
	*** 001c66	9a 00 00 00 00 		call	FAR PTR _Plot_Pixel_Fast_DB
	*** 001c6b	83 c4 06 		add	sp,OFFSET 6
; ; Line 2319
	*** 001c6e	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 001c72	bb 00 00 		mov	bx,OFFSET _missiles
	*** 001c75	03 d8 			add	bx,ax
	*** 001c77	8a 47 09 		mov	al,BYTE PTR 9[bx]
	*** 001c7a	25 ff 00 		and	ax,OFFSET 255
	*** 001c7d	50 			push	ax
	*** 001c7e	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 001c82	bb 00 00 		mov	bx,OFFSET _missiles
	*** 001c85	03 d8 			add	bx,ax
	*** 001c87	8b 47 02 		mov	ax,WORD PTR 2[bx]
	*** 001c8a	05 01 00 		add	ax,OFFSET 1
	*** 001c8d	50 			push	ax
	*** 001c8e	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 001c92	8b d8 			mov	bx,ax
	*** 001c94	8b 87 00 00 		mov	ax,WORD PTR _missiles[bx]
	*** 001c98	05 01 00 		add	ax,OFFSET 1
	*** 001c9b	50 			push	ax
	*** 001c9c	9a 00 00 00 00 		call	FAR PTR _Plot_Pixel_Fast_DB
	*** 001ca1	83 c4 06 		add	sp,OFFSET 6
; ; ; Line 2321
; ; ; Line 2323
					L01439:
					L01436:
; Line 2323
	*** 001ca4	83 46 fc 01 		add	WORD PTR -4[bp],OFFSET 1
					L01438:
	*** 001ca8	83 7e fc 1e 		cmp	WORD PTR -4[bp],OFFSET 30
	*** 001cac	7d 03 e9 19 ff 		jl	L01435
					L01437:
; ; ; Line 2325
; Line 2325
					L01433:
	*** 001cb1	5f 			pop	di
	*** 001cb2	5e 			pop	si
	*** 001cb3	c9 			leave
	*** 001cb4	cb 			ret	OFFSET 0
Local Size: 4
; Line 0
ine 2330
					_Behind_Missiles:
	*** 001cb6	c8 00 00 00 		enter	OFFSET L01697,OFFSET 0
	*** 001cba	56 			push	si
	*** 001cbb	57 			push	di
; index = fffc
; ; ; ; ; ; Line 2335
; ; ; Line 2337
	*** 001cbc	c7 46 fc 00 00 		mov	WORD PTR -4[bp],OFFSET 0
	*** 001cc1	e9 00 00 		jmp	L01445
					L01442:
; ; Line 2338
; ; ; ; ; Line 2342
	*** 001cc4	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 001cc8	bb 00 00 		mov	bx,OFFSET _missiles
	*** 001ccb	03 d8 			add	bx,ax
	*** 001ccd	83 7f 0a 01 		cmp	WORD PTR 10[bx],OFFSET 1
	*** 001cd1	74 03 e9 00 00 		jne	L01446
; ; Line 2343
; ; ; Line 2345
	*** 001cd6	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 001cda	bb 00 00 		mov	bx,OFFSET _missiles
	*** 001cdd	03 d8 			add	bx,ax
	*** 001cdf	ff 77 02 		push	WORD PTR 2[bx]
	*** 001ce2	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 001ce6	8b d8 			mov	bx,ax
	*** 001ce8	ff b7 00 00 		push	WORD PTR _missiles[bx]
	*** 001cec	9a 00 00 00 00 		call	FAR PTR _Get_Pixel_DB
	*** 001cf1	83 c4 04 		add	sp,OFFSET 4
	*** 001cf4	89 46 fa 		mov	WORD PTR -6[bp],ax
	*** 001cf7	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 001cfb	bb 00 00 		mov	bx,OFFSET _missiles
	*** 001cfe	03 d8 			add	bx,ax
	*** 001d00	8b 46 fa 		mov	ax,WORD PTR -6[bp]
	*** 001d03	88 47 09 		mov	BYTE PTR 9[bx],al
; ; ; Line 2347
; ; ; Line 2349
					L01446:
					L01443:
; Line 2349
	*** 001d06	83 46 fc 01 		add	WORD PTR -4[bp],OFFSET 1
					L01445:
	*** 001d0a	83 7e fc 1e 		cmp	WORD PTR -4[bp],OFFSET 30
	*** 001d0e	7d 03 e9 b1 ff 		jl	L01442
					L01444:
; ; ; Line 2351
; Line 2351
					L01440:
	*** 001d13	5f 			pop	di
	*** 001d14	5e 			pop	si
	*** 001d15	c9 			leave
	*** 001d16	cb 			ret	OFFSET 0
Local Size: 6
; Line 0
ine 2356
					_Draw_Missiles:
	*** 001d18	c8 00 00 00 		enter	OFFSET L01698,OFFSET 0
	*** 001d1c	56 			push	si
	*** 001d1d	57 			push	di
; index = fffc
; ; ; ; ; ; Line 2361
; ; ; Line 2363
	*** 001d1e	c7 46 fc 00 00 		mov	WORD PTR -4[bp],OFFSET 0
	*** 001d23	e9 00 00 		jmp	L01452
					L01449:
; ; Line 2364
; ; ; ; ; Line 2368
	*** 001d26	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 001d2a	bb 00 00 		mov	bx,OFFSET _missiles
	*** 001d2d	03 d8 			add	bx,ax
	*** 001d2f	83 7f 0a 01 		cmp	WORD PTR 10[bx],OFFSET 1
	*** 001d33	74 03 e9 00 00 		jne	L01453
; ; Line 2369
; ; ; Line 2371
	*** 001d38	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 001d3c	bb 00 00 		mov	bx,OFFSET _missiles
	*** 001d3f	03 d8 			add	bx,ax
	*** 001d41	8a 47 08 		mov	al,BYTE PTR 8[bx]
	*** 001d44	25 ff 00 		and	ax,OFFSET 255
	*** 001d47	50 			push	ax
	*** 001d48	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 001d4c	bb 00 00 		mov	bx,OFFSET _missiles
	*** 001d4f	03 d8 			add	bx,ax
	*** 001d51	ff 77 02 		push	WORD PTR 2[bx]
	*** 001d54	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 001d58	8b d8 			mov	bx,ax
	*** 001d5a	ff b7 00 00 		push	WORD PTR _missiles[bx]
	*** 001d5e	9a 00 00 00 00 		call	FAR PTR _Plot_Pixel_Fast_DB
	*** 001d63	83 c4 06 		add	sp,OFFSET 6
; ; Line 2372
	*** 001d66	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 001d6a	bb 00 00 		mov	bx,OFFSET _missiles
	*** 001d6d	03 d8 			add	bx,ax
	*** 001d6f	8a 47 08 		mov	al,BYTE PTR 8[bx]
	*** 001d72	25 ff 00 		and	ax,OFFSET 255
	*** 001d75	50 			push	ax
	*** 001d76	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 001d7a	bb 00 00 		mov	bx,OFFSET _missiles
	*** 001d7d	03 d8 			add	bx,ax
	*** 001d7f	ff 77 02 		push	WORD PTR 2[bx]
	*** 001d82	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 001d86	8b d8 			mov	bx,ax
	*** 001d88	ff b7 00 00 		push	WORD PTR _missiles[bx]
	*** 001d8c	9a 00 00 00 00 		call	FAR PTR _Plot_Pixel_Fast_DB
	*** 001d91	83 c4 06 		add	sp,OFFSET 6
; ; Line 2373
	*** 001d94	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 001d98	bb 00 00 		mov	bx,OFFSET _missiles
	*** 001d9b	03 d8 			add	bx,ax
	*** 001d9d	8a 47 08 		mov	al,BYTE PTR 8[bx]
	*** 001da0	25 ff 00 		and	ax,OFFSET 255
	*** 001da3	50 			push	ax
	*** 001da4	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 001da8	bb 00 00 		mov	bx,OFFSET _missiles
	*** 001dab	03 d8 			add	bx,ax
	*** 001dad	8b 47 02 		mov	ax,WORD PTR 2[bx]
	*** 001db0	05 01 00 		add	ax,OFFSET 1
	*** 001db3	50 			push	ax
	*** 001db4	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 001db8	8b d8 			mov	bx,ax
	*** 001dba	8b 87 00 00 		mov	ax,WORD PTR _missiles[bx]
	*** 001dbe	05 01 00 		add	ax,OFFSET 1
	*** 001dc1	50 			push	ax
	*** 001dc2	9a 00 00 00 00 		call	FAR PTR _Plot_Pixel_Fast_DB
	*** 001dc7	83 c4 06 		add	sp,OFFSET 6
; ; Line 2374
	*** 001dca	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 001dce	bb 00 00 		mov	bx,OFFSET _missiles
	*** 001dd1	03 d8 			add	bx,ax
	*** 001dd3	8a 47 08 		mov	al,BYTE PTR 8[bx]
	*** 001dd6	25 ff 00 		and	ax,OFFSET 255
	*** 001dd9	50 			push	ax
	*** 001dda	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 001dde	bb 00 00 		mov	bx,OFFSET _missiles
	*** 001de1	03 d8 			add	bx,ax
	*** 001de3	8b 47 02 		mov	ax,WORD PTR 2[bx]
	*** 001de6	05 01 00 		add	ax,OFFSET 1
	*** 001de9	50 			push	ax
	*** 001dea	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 001dee	8b d8 			mov	bx,ax
	*** 001df0	8b 87 00 00 		mov	ax,WORD PTR _missiles[bx]
	*** 001df4	05 01 00 		add	ax,OFFSET 1
	*** 001df7	50 			push	ax
	*** 001df8	9a 00 00 00 00 		call	FAR PTR _Plot_Pixel_Fast_DB
	*** 001dfd	83 c4 06 		add	sp,OFFSET 6
; ; ; Line 2376
; ; ; Line 2378
					L01453:
					L01450:
; Line 2378
	*** 001e00	83 46 fc 01 		add	WORD PTR -4[bp],OFFSET 1
					L01452:
	*** 001e04	83 7e fc 1e 		cmp	WORD PTR -4[bp],OFFSET 30
	*** 001e08	7d 03 e9 19 ff 		jl	L01449
					L01451:
; ; ; Line 2380
; Line 2380
					L01447:
	*** 001e0d	5f 			pop	di
	*** 001e0e	5e 			pop	si
	*** 001e0f	c9 			leave
	*** 001e10	cb 			ret	OFFSET 0
Local Size: 4
; Line 0
ine 2385
					_Move_Missiles:
	*** 001e12	c8 00 00 00 		enter	OFFSET L01699,OFFSET 0
	*** 001e16	56 			push	si
	*** 001e17	57 			push	di
; index2 = fffc
; pixel = fffa
; creature_hit = fff8
; miss_x = fff6
; delta_x = fff4
; index_3 = fff2
; worker = fff0
; index = ffee
; miss_y = ffec
; delta_y = ffea
; pixel_y = ffe8
; ; ; ; ; Line 2389
; ; Line 2390
; ; Line 2391
; ; Line 2392
; ; Line 2393
; ; Line 2394
; ; Line 2395
; ; Line 2396
; ; Line 2397
	*** 001e18	c7 46 f8 00 00 		mov	WORD PTR -8[bp],OFFSET 0
; ; ; Line 2399
; ; ; Line 2401
; ; ; ; ; ; Line 2406
	*** 001e1d	c7 46 ee 00 00 		mov	WORD PTR -18[bp],OFFSET 0
	*** 001e22	e9 00 00 		jmp	L01469
					L01466:
; ; Line 2407
; ; ; ; ; Line 2411
	*** 001e25	6b 46 ee 16 		_imul3 	ax,WORD PTR -18[bp],OFFSET 22
	*** 001e29	bb 00 00 		mov	bx,OFFSET _missiles
	*** 001e2c	03 d8 			add	bx,ax
	*** 001e2e	83 7f 0a 01 		cmp	WORD PTR 10[bx],OFFSET 1
	*** 001e32	74 03 e9 00 00 		jne	L01470
; ; Line 2412
; ; ; ; ; Line 2416
	*** 001e37	6b 46 ee 16 		_imul3 	ax,WORD PTR -18[bp],OFFSET 22
	*** 001e3b	bb 00 00 		mov	bx,OFFSET _missiles
	*** 001e3e	03 d8 			add	bx,ax
	*** 001e40	8b 47 04 		mov	ax,WORD PTR 4[bx]
	*** 001e43	89 46 e6 		mov	WORD PTR -26[bp],ax
	*** 001e46	6b 46 ee 16 		_imul3 	ax,WORD PTR -18[bp],OFFSET 22
	*** 001e4a	8b 4e e6 		mov	cx,WORD PTR -26[bp]
	*** 001e4d	8b d8 			mov	bx,ax
	*** 001e4f	01 8f 00 00 		add	WORD PTR _missiles[bx],cx
	*** 001e53	8b 87 00 00 		mov	ax,WORD PTR _missiles[bx]
	*** 001e57	89 46 f6 		mov	WORD PTR -10[bp],ax
; ; Line 2417
	*** 001e5a	6b 46 ee 16 		_imul3 	ax,WORD PTR -18[bp],OFFSET 22
	*** 001e5e	bb 00 00 		mov	bx,OFFSET _missiles
	*** 001e61	03 d8 			add	bx,ax
	*** 001e63	8b 47 06 		mov	ax,WORD PTR 6[bx]
	*** 001e66	89 46 e6 		mov	WORD PTR -26[bp],ax
	*** 001e69	6b 46 ee 16 		_imul3 	ax,WORD PTR -18[bp],OFFSET 22
	*** 001e6d	bb 00 00 		mov	bx,OFFSET _missiles
	*** 001e70	03 d8 			add	bx,ax
	*** 001e72	8b 46 e6 		mov	ax,WORD PTR -26[bp]
	*** 001e75	01 47 02 		add	WORD PTR 2[bx],ax
	*** 001e78	8b 47 02 		mov	ax,WORD PTR 2[bx]
	*** 001e7b	89 46 ec 		mov	WORD PTR -20[bp],ax
; ; ; ; ; Line 2421
; ; Line 2422
	*** 001e7e	8b 46 f6 		mov	ax,WORD PTR -10[bp]
	*** 001e81	3d 40 01 		cmp	ax,OFFSET 320
	*** 001e84	72 03 e9 00 00 		jae	L01472
	*** 001e89	83 7e f6 00 		cmp	WORD PTR -10[bp],OFFSET 0
	*** 001e8d	7f 03 e9 00 00 		jle	L01472
	*** 001e92	8b 46 ec 		mov	ax,WORD PTR -20[bp]
	*** 001e95	3d b8 00 		cmp	ax,OFFSET 184
	*** 001e98	76 03 e9 00 00 		ja	L01472
	*** 001e9d	83 7e ec 00 		cmp	WORD PTR -20[bp],OFFSET 0
	*** 001ea1	7e 03 e9 00 00 		jg	L01471
					L01472:
; ; Line 2423
; ; Line 2424
	*** 001ea6	6b 46 ee 16 		_imul3 	ax,WORD PTR -18[bp],OFFSET 22
	*** 001eaa	bb 00 00 		mov	bx,OFFSET _missiles
	*** 001ead	03 d8 			add	bx,ax
	*** 001eaf	c7 47 0a 00 00 		mov	WORD PTR 10[bx],OFFSET 0
; ; Line 2425
	*** 001eb4	e9 00 00 		jmp	L01467
; ; ; Line 2427
; ; ; ; Line 2430
	*** 001eb7	e9 00 00 		jmp	L01473
					L01471:
; Line 2430
; ; Line 2431
	*** 001eba	83 3e 78 00 01 		cmp	WORD PTR _mother+120,OFFSET 1
	*** 001ebf	74 03 e9 00 00 		jne	L01474
	*** 001ec4	6b 46 ee 16 		_imul3 	ax,WORD PTR -18[bp],OFFSET 22
	*** 001ec8	bb 00 00 		mov	bx,OFFSET _missiles
	*** 001ecb	03 d8 			add	bx,ax
	*** 001ecd	83 7f 0c 01 		cmp	WORD PTR 12[bx],OFFSET 1
	*** 001ed1	74 03 e9 00 00 		jne	L01474
; ; Line 2432
; ; ; Line 2434
	*** 001ed6	8b 46 f6 		mov	ax,WORD PTR -10[bp]
	*** 001ed9	2b 06 00 00 		sub	ax,WORD PTR _mother
	*** 001edd	89 46 f4 		mov	WORD PTR -12[bp],ax
; ; Line 2435
	*** 001ee0	8b 46 ec 		mov	ax,WORD PTR -20[bp]
	*** 001ee3	2b 06 02 00 		sub	ax,WORD PTR _mother+2
	*** 001ee7	89 46 ea 		mov	WORD PTR -22[bp],ax
; ; ; ; ; Line 2439
; ; Line 2440
	*** 001eea	83 7e f4 00 		cmp	WORD PTR -12[bp],OFFSET 0
	*** 001eee	7d 03 e9 00 00 		jl	L01475
	*** 001ef3	8b 46 f4 		mov	ax,WORD PTR -12[bp]
	*** 001ef6	3b 06 00 00 		cmp	ax,WORD PTR _sprite_width
	*** 001efa	76 03 e9 00 00 		ja	L01475
	*** 001eff	83 7e ea 00 		cmp	WORD PTR -22[bp],OFFSET 0
	*** 001f03	7d 03 e9 00 00 		jl	L01475
	*** 001f08	8b 46 ea 		mov	ax,WORD PTR -22[bp]
	*** 001f0b	3b 06 00 00 		cmp	ax,WORD PTR _sprite_height
	*** 001f0f	76 03 e9 00 00 		ja	L01475
; ; Line 2441
; ; ; ; ; Line 2445
	*** 001f14	6b 46 ee 16 		_imul3 	ax,WORD PTR -18[bp],OFFSET 22
	*** 001f18	bb 00 00 		mov	bx,OFFSET _missiles
	*** 001f1b	03 d8 			add	bx,ax
	*** 001f1d	c7 47 0a 00 00 		mov	WORD PTR 10[bx],OFFSET 0
; ; ; ; ; Line 2449
	*** 001f22	c7 06 78 00 00 00 	mov	WORD PTR _mother+120,OFFSET 0
; ; ; ; ; Line 2453
	*** 001f28	6a 01 			push	OFFSET 1
	*** 001f2a	a1 02 00 		mov	ax,WORD PTR _mother+2
	*** 001f2d	05 0a 00 		add	ax,OFFSET 10
	*** 001f30	50 			push	ax
	*** 001f31	a1 00 00 		mov	ax,WORD PTR _mother
	*** 001f34	05 0a 00 		add	ax,OFFSET 10
	*** 001f37	50 			push	ax
	*** 001f38	9a 00 00 00 00 		call	FAR PTR _Start_Explosion
	*** 001f3d	83 c4 06 		add	sp,OFFSET 6
; ; ; ; ; Line 2457
	*** 001f40	81 06 1e 00 f4 01 	add	WORD PTR _player_score,OFFSET 500
	*** 001f46	83 16 20 00 00 		adc	WORD PTR _player_score+2,OFFSET 0
; ; ; ; ; Line 2461
	*** 001f4b	e9 00 00 		jmp	L01467
; ; ; Line 2463
; ; ; Line 2465
					L01475:
; ; ; ; ; Line 2469
					L01474:
					L01473:
	*** 001f4e	c7 46 f8 00 00 		mov	WORD PTR -8[bp],OFFSET 0
; ; ; ; ; Line 2473
	*** 001f53	6b 46 ee 16 		_imul3 	ax,WORD PTR -18[bp],OFFSET 22
	*** 001f57	bb 00 00 		mov	bx,OFFSET _missiles
	*** 001f5a	03 d8 			add	bx,ax
	*** 001f5c	83 7f 0c 01 		cmp	WORD PTR 12[bx],OFFSET 1
	*** 001f60	74 03 e9 00 00 		jne	L01476
; ; Line 2474
; ; ; ; ; Line 2478
	*** 001f65	c7 46 f2 00 00 		mov	WORD PTR -14[bp],OFFSET 0
	*** 001f6a	e9 00 00 		jmp	L01477
					L01478:
	*** 001f6d	83 46 f2 01 		add	WORD PTR -14[bp],OFFSET 1
					L01477:
	*** 001f71	a1 28 00 		mov	ax,WORD PTR _num_mechs
	*** 001f74	39 46 f2 		cmp	WORD PTR -14[bp],ax
	*** 001f77	7c 03 e9 00 00 		jge	L01479
	*** 001f7c	83 7e f8 00 		cmp	WORD PTR -8[bp],OFFSET 0
	*** 001f80	74 03 e9 00 00 		jne	L01479
; ; Line 2479
; ; ; ; ; Line 2483
	*** 001f85	6b 46 f2 24 		_imul3 	ax,WORD PTR -14[bp],OFFSET 36
	*** 001f89	b9 00 00 		mov	cx,OFFSET _mech_array
	*** 001f8c	03 c8 			add	cx,ax
	*** 001f8e	89 4e f0 		mov	WORD PTR -16[bp],cx
; ; ; ; ; ; Line 2488
	*** 001f91	8b 5e f0 		mov	bx,WORD PTR -16[bp]
	*** 001f94	83 7f 0a 01 		cmp	WORD PTR 10[bx],OFFSET 1
	*** 001f98	74 03 e9 00 00 		jne	L01481
	*** 001f9d	83 3e 26 00 01 		cmp	WORD PTR _energize_state,OFFSET 1
	*** 001fa2	7f 03 e9 00 00 		jle	L01481
; ; Line 2489
; ; ; ; ; Line 2493
	*** 001fa7	8b 5e f0 		mov	bx,WORD PTR -16[bp]
	*** 001faa	8b 46 f6 		mov	ax,WORD PTR -10[bp]
	*** 001fad	2b 47 02 		sub	ax,WORD PTR 2[bx]
	*** 001fb0	89 46 f4 		mov	WORD PTR -12[bp],ax
; ; Line 2494
	*** 001fb3	8b 5e f0 		mov	bx,WORD PTR -16[bp]
	*** 001fb6	8b 46 ec 		mov	ax,WORD PTR -20[bp]
	*** 001fb9	2b 47 04 		sub	ax,WORD PTR 4[bx]
	*** 001fbc	89 46 ea 		mov	WORD PTR -22[bp],ax
; ; ; ; ; ; Line 2499
; ; Line 2500
	*** 001fbf	83 7e f4 00 		cmp	WORD PTR -12[bp],OFFSET 0
	*** 001fc3	7d 03 e9 00 00 		jl	L01482
	*** 001fc8	8b 46 f4 		mov	ax,WORD PTR -12[bp]
	*** 001fcb	3b 06 00 00 		cmp	ax,WORD PTR _sprite_width
	*** 001fcf	76 03 e9 00 00 		ja	L01482
	*** 001fd4	83 7e ea 00 		cmp	WORD PTR -22[bp],OFFSET 0
	*** 001fd8	7d 03 e9 00 00 		jl	L01482
	*** 001fdd	8b 46 ea 		mov	ax,WORD PTR -22[bp]
	*** 001fe0	3b 06 00 00 		cmp	ax,WORD PTR _sprite_height
	*** 001fe4	76 03 e9 00 00 		ja	L01482
; ; Line 2501
; ; ; ; ; Line 2505
	*** 001fe9	6b 46 ee 16 		_imul3 	ax,WORD PTR -18[bp],OFFSET 22
	*** 001fed	bb 00 00 		mov	bx,OFFSET _missiles
	*** 001ff0	03 d8 			add	bx,ax
	*** 001ff2	c7 47 0a 00 00 		mov	WORD PTR 10[bx],OFFSET 0
; ; ; ; ; Line 2509
	*** 001ff7	8b 5e f0 		mov	bx,WORD PTR -16[bp]
	*** 001ffa	c7 47 0a 02 00 		mov	WORD PTR 10[bx],OFFSET 2
; ; Line 2510
	*** 001fff	8b 5e f0 		mov	bx,WORD PTR -16[bp]
	*** 002002	c7 47 0e 00 00 		mov	WORD PTR 14[bx],OFFSET 0
; ; Line 2511
	*** 002007	8b 5e f0 		mov	bx,WORD PTR -16[bp]
	*** 00200a	c7 47 12 08 00 		mov	WORD PTR 18[bx],OFFSET 8
; ; ; Line 2513
	*** 00200f	c7 46 f8 01 00 		mov	WORD PTR -8[bp],OFFSET 1
; ; ; Line 2515
	*** 002014	6a 03 			push	OFFSET 3
	*** 002016	9a 00 00 00 00 		call	FAR PTR _Play_Sound
	*** 00201b	83 c4 02 		add	sp,OFFSET 2
; ; ; ; ; Line 2519
	*** 00201e	83 06 1e 00 32 		add	WORD PTR _player_score,OFFSET 50
	*** 002023	83 16 20 00 00 		adc	WORD PTR _player_score+2,OFFSET 0
; ; ; Line 2521
; ; ; Line 2523
					L01482:
; ; ; Line 2525
					L01481:
; Line 2525
	*** 002028	e9 42 ff 		jmp	L01478
					L01479:
; ; ; Line 2527
; ; ; ; ; Line 2531
					L01476:
	*** 00202b	83 7e f8 00 		cmp	WORD PTR -8[bp],OFFSET 0
	*** 00202f	75 03 e9 00 00 		je	L01483
; ; Line 2532
	*** 002034	e9 00 00 		jmp	L01467
; ; ; ; ; Line 2536
					L01483:
	*** 002037	83 3e 78 00 01 		cmp	WORD PTR _player+120,OFFSET 1
	*** 00203c	74 03 e9 00 00 		jne	L01484
	*** 002041	6b 46 ee 16 		_imul3 	ax,WORD PTR -18[bp],OFFSET 22
	*** 002045	bb 00 00 		mov	bx,OFFSET _missiles
	*** 002048	03 d8 			add	bx,ax
	*** 00204a	83 7f 0c 00 		cmp	WORD PTR 12[bx],OFFSET 0
	*** 00204e	74 03 e9 00 00 		jne	L01484
; ; Line 2537
; ; ; ; ; Line 2541
	*** 002053	8b 46 f6 		mov	ax,WORD PTR -10[bp]
	*** 002056	2b 06 00 00 		sub	ax,WORD PTR _player
	*** 00205a	89 46 f4 		mov	WORD PTR -12[bp],ax
; ; Line 2542
	*** 00205d	8b 46 ec 		mov	ax,WORD PTR -20[bp]
	*** 002060	2b 06 02 00 		sub	ax,WORD PTR _player+2
	*** 002064	89 46 ea 		mov	WORD PTR -22[bp],ax
; ; ; ; ; Line 2546
; ; Line 2547
	*** 002067	83 7e f4 00 		cmp	WORD PTR -12[bp],OFFSET 0
	*** 00206b	7d 03 e9 00 00 		jl	L01485
	*** 002070	8b 46 f4 		mov	ax,WORD PTR -12[bp]
	*** 002073	3b 06 00 00 		cmp	ax,WORD PTR _sprite_width
	*** 002077	76 03 e9 00 00 		ja	L01485
	*** 00207c	83 7e ea 00 		cmp	WORD PTR -22[bp],OFFSET 0
	*** 002080	7d 03 e9 00 00 		jl	L01485
	*** 002085	8b 46 ea 		mov	ax,WORD PTR -22[bp]
	*** 002088	3b 06 00 00 		cmp	ax,WORD PTR _sprite_height
	*** 00208c	76 03 e9 00 00 		ja	L01485
; ; Line 2548
; ; ; ; ; Line 2552
	*** 002091	c7 06 78 00 02 00 	mov	WORD PTR _player+120,OFFSET 2
; ; ; Line 2554
	*** 002097	c7 06 0c 00 00 00 	mov	WORD PTR _player+12,OFFSET 0
; ; ; ; ; Line 2558
	*** 00209d	83 2e 16 00 01 		sub	WORD PTR _player_ships,OFFSET 1
	*** 0020a2	83 1e 18 00 00 		sbb	WORD PTR _player_ships+2,OFFSET 0
; ; ; ; ; Line 2562
	*** 0020a7	6b 46 ee 16 		_imul3 	ax,WORD PTR -18[bp],OFFSET 22
	*** 0020ab	bb 00 00 		mov	bx,OFFSET _missiles
	*** 0020ae	03 d8 			add	bx,ax
	*** 0020b0	c7 47 0a 00 00 		mov	WORD PTR 10[bx],OFFSET 0
; ; ; ; ; Line 2566
	*** 0020b5	9a 00 00 00 00 		call	FAR PTR _Start_PDeath
; ; ; Line 2568
; ; ; Line 2570
					L01485:
; ; ; ; ; ; Line 2575
					L01484:
	*** 0020ba	8b 46 ec 		mov	ax,WORD PTR -20[bp]
	*** 0020bd	89 46 e8 		mov	WORD PTR -24[bp],ax
	*** 0020c0	e9 00 00 		jmp	L01486
					L01487:
	*** 0020c3	83 46 e8 01 		add	WORD PTR -24[bp],OFFSET 1
					L01486:
	*** 0020c7	8b 46 ec 		mov	ax,WORD PTR -20[bp]
	*** 0020ca	05 08 00 		add	ax,OFFSET 8
	*** 0020cd	39 46 e8 		cmp	WORD PTR -24[bp],ax
	*** 0020d0	7c 03 e9 00 00 		jge	L01488
; ; Line 2576
; ; ; Line 2578
	*** 0020d5	ff 76 e8 		push	WORD PTR -24[bp]
	*** 0020d8	ff 76 f6 		push	WORD PTR -10[bp]
	*** 0020db	9a 00 00 00 00 		call	FAR PTR _Get_Pixel_DB
	*** 0020e0	83 c4 04 		add	sp,OFFSET 4
	*** 0020e3	88 46 fa 		mov	BYTE PTR -6[bp],al
; ; ; Line 2580
	*** 0020e6	8a 46 fa 		mov	al,BYTE PTR -6[bp]
	*** 0020e9	25 ff 00 		and	ax,OFFSET 255
	*** 0020ec	3d b0 00 		cmp	ax,OFFSET 176
	*** 0020ef	7d 03 e9 00 00 		jl	L01490
	*** 0020f4	8a 46 fa 		mov	al,BYTE PTR -6[bp]
	*** 0020f7	25 ff 00 		and	ax,OFFSET 255
	*** 0020fa	3d c0 00 		cmp	ax,OFFSET 192
	*** 0020fd	7e 03 e9 00 00 		jg	L01490
; ; Line 2581
; ; ; ; ; Line 2585
	*** 002102	6b 46 ee 16 		_imul3 	ax,WORD PTR -18[bp],OFFSET 22
	*** 002106	bb 00 00 		mov	bx,OFFSET _missiles
	*** 002109	03 d8 			add	bx,ax
	*** 00210b	c7 47 0a 00 00 		mov	WORD PTR 10[bx],OFFSET 0
; ; ; ; ; Line 2589
	*** 002110	6a 01 			push	OFFSET 1
	*** 002112	ff 76 e8 		push	WORD PTR -24[bp]
	*** 002115	ff 76 f6 		push	WORD PTR -10[bp]
	*** 002118	9a 00 00 00 00 		call	FAR PTR _Start_Explosion
	*** 00211d	83 c4 06 		add	sp,OFFSET 6
; ; ; ; ; Line 2593
	*** 002120	c7 46 fc 00 00 		mov	WORD PTR -4[bp],OFFSET 0
	*** 002125	e9 00 00 		jmp	L01494
					L01491:
; ; Line 2594
; ; ; Line 2596
	*** 002128	6a 00 			push	OFFSET 0
	*** 00212a	9a 00 00 00 00 		call	FAR PTR _rand
	*** 00212f	b9 08 00 		mov	cx,OFFSET 8
	*** 002132	99 			cwd
	*** 002133	f7 f9 			idiv	cx
	*** 002135	8b 46 e8 		mov	ax,WORD PTR -24[bp]
	*** 002138	05 fc ff 		add	ax,OFFSET -4
	*** 00213b	03 c2 			add	ax,dx
	*** 00213d	50 			push	ax
	*** 00213e	9a 00 00 00 00 		call	FAR PTR _rand
	*** 002143	b9 08 00 		mov	cx,OFFSET 8
	*** 002146	99 			cwd
	*** 002147	f7 f9 			idiv	cx
	*** 002149	8b 46 f6 		mov	ax,WORD PTR -10[bp]
	*** 00214c	05 fc ff 		add	ax,OFFSET -4
	*** 00214f	03 c2 			add	ax,dx
	*** 002151	50 			push	ax
	*** 002152	9a 00 00 00 00 		call	FAR PTR _Plot_Pixel_Fast_DB
	*** 002157	83 c4 06 		add	sp,OFFSET 6
; ; ; Line 2598
					L01492:
; Line 2598
	*** 00215a	83 46 fc 01 		add	WORD PTR -4[bp],OFFSET 1
					L01494:
	*** 00215e	83 7e fc 19 		cmp	WORD PTR -4[bp],OFFSET 25
	*** 002162	7d 03 e9 c1 ff 		jl	L01491
					L01493:
; ; ; Line 2600
	*** 002167	e9 00 00 		jmp	L01488
; ; ; Line 2602
; ; ; Line 2604
					L01490:
; Line 2604
	*** 00216a	e9 56 ff 		jmp	L01487
					L01488:
; ; ; Line 2606
; ; ; Line 2608
					L01470:
					L01467:
; Line 2608
	*** 00216d	83 46 ee 01 		add	WORD PTR -18[bp],OFFSET 1
					L01469:
	*** 002171	83 7e ee 1e 		cmp	WORD PTR -18[bp],OFFSET 30
	*** 002175	7d 03 e9 ab fc 		jl	L01466
					L01468:
; ; ; Line 2610
; Line 2610
					L01454:
	*** 00217a	5f 			pop	di
	*** 00217b	5e 			pop	si
	*** 00217c	c9 			leave
	*** 00217d	cb 			ret	OFFSET 0
Local Size: 26
; Line 0
ine 2621
; who = 0006
; x = 0008
; y = 000a
; xv = 000c
; yv = 000e
; color = 0010
; tag = 0012
					_Start_Missile:
	*** 00217e	c8 00 00 00 		enter	OFFSET L01700,OFFSET 0
	*** 002182	56 			push	si
	*** 002183	57 			push	di
; index = fffc
; ; ; ; ; ; Line 2626
; ; ; ; ; Line 2630
	*** 002184	c7 46 fc 00 00 		mov	WORD PTR -4[bp],OFFSET 0
	*** 002189	e9 00 00 		jmp	L01514
					L01511:
; ; Line 2631
; ; ; ; Line 2634
	*** 00218c	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 002190	bb 00 00 		mov	bx,OFFSET _missiles
	*** 002193	03 d8 			add	bx,ax
	*** 002195	83 7f 0a 00 		cmp	WORD PTR 10[bx],OFFSET 0
	*** 002199	74 03 e9 00 00 		jne	L01515
; ; Line 2635
; ; ; ; ; Line 2639
	*** 00219e	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 0021a2	bb 00 00 		mov	bx,OFFSET _missiles
	*** 0021a5	03 d8 			add	bx,ax
	*** 0021a7	c7 47 0a 01 00 		mov	WORD PTR 10[bx],OFFSET 1
; ; Line 2640
	*** 0021ac	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 0021b0	8b 4e 08 		mov	cx,WORD PTR 8[bp]
	*** 0021b3	8b d8 			mov	bx,ax
	*** 0021b5	89 8f 00 00 		mov	WORD PTR _missiles[bx],cx
; ; Line 2641
	*** 0021b9	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 0021bd	bb 00 00 		mov	bx,OFFSET _missiles
	*** 0021c0	03 d8 			add	bx,ax
	*** 0021c2	8b 46 0a 		mov	ax,WORD PTR 10[bp]
	*** 0021c5	89 47 02 		mov	WORD PTR 2[bx],ax
; ; Line 2642
	*** 0021c8	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 0021cc	bb 00 00 		mov	bx,OFFSET _missiles
	*** 0021cf	03 d8 			add	bx,ax
	*** 0021d1	8b 46 0c 		mov	ax,WORD PTR 12[bp]
	*** 0021d4	89 47 04 		mov	WORD PTR 4[bx],ax
; ; Line 2643
	*** 0021d7	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 0021db	bb 00 00 		mov	bx,OFFSET _missiles
	*** 0021de	03 d8 			add	bx,ax
	*** 0021e0	8b 46 0e 		mov	ax,WORD PTR 14[bp]
	*** 0021e3	89 47 06 		mov	WORD PTR 6[bx],ax
; ; Line 2644
	*** 0021e6	8b 46 10 		mov	ax,WORD PTR 16[bp]
	*** 0021e9	89 46 fa 		mov	WORD PTR -6[bp],ax
	*** 0021ec	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 0021f0	bb 00 00 		mov	bx,OFFSET _missiles
	*** 0021f3	03 d8 			add	bx,ax
	*** 0021f5	8b 46 fa 		mov	ax,WORD PTR -6[bp]
	*** 0021f8	88 47 08 		mov	BYTE PTR 8[bx],al
; ; Line 2645
	*** 0021fb	ff 76 0a 		push	WORD PTR 10[bp]
	*** 0021fe	ff 76 08 		push	WORD PTR 8[bp]
	*** 002201	9a 00 00 00 00 		call	FAR PTR _Get_Pixel_DB
	*** 002206	83 c4 04 		add	sp,OFFSET 4
	*** 002209	89 46 fa 		mov	WORD PTR -6[bp],ax
	*** 00220c	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 002210	bb 00 00 		mov	bx,OFFSET _missiles
	*** 002213	03 d8 			add	bx,ax
	*** 002215	8b 46 fa 		mov	ax,WORD PTR -6[bp]
	*** 002218	88 47 09 		mov	BYTE PTR 9[bx],al
; ; Line 2646
	*** 00221b	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 00221f	bb 00 00 		mov	bx,OFFSET _missiles
	*** 002222	03 d8 			add	bx,ax
	*** 002224	8b 46 12 		mov	ax,WORD PTR 18[bp]
	*** 002227	89 47 0c 		mov	WORD PTR 12[bx],ax
; ; ; Line 2648
	*** 00222a	e9 00 00 		jmp	L01513
; ; ; Line 2650
; ; ; Line 2652
					L01515:
					L01512:
; Line 2652
	*** 00222d	83 46 fc 01 		add	WORD PTR -4[bp],OFFSET 1
					L01514:
	*** 002231	83 7e fc 1e 		cmp	WORD PTR -4[bp],OFFSET 30
	*** 002235	7d 03 e9 52 ff 		jl	L01511
					L01513:
; ; ; Line 2654
; Line 2654
					L01509:
	*** 00223a	5f 			pop	di
	*** 00223b	5e 			pop	si
	*** 00223c	c9 			leave
	*** 00223d	cb 			ret	OFFSET 0
Local Size: 6
; Line 0
ine 2659
					_Init_Missiles:
	*** 00223e	c8 00 00 00 		enter	OFFSET L01701,OFFSET 0
	*** 002242	56 			push	si
	*** 002243	57 			push	di
; index = fffc
; ; ; ; ; ; Line 2664
; ; ; Line 2666
	*** 002244	c7 46 fc 00 00 		mov	WORD PTR -4[bp],OFFSET 0
	*** 002249	e9 00 00 		jmp	L01521
					L01518:
; ; Line 2667
	*** 00224c	6b 46 fc 16 		_imul3 	ax,WORD PTR -4[bp],OFFSET 22
	*** 002250	bb 00 00 		mov	bx,OFFSET _missiles
	*** 002253	03 d8 			add	bx,ax
	*** 002255	c7 47 0a 00 00 		mov	WORD PTR 10[bx],OFFSET 0
					L01519:
	*** 00225a	83 46 fc 01 		add	WORD PTR -4[bp],OFFSET 1
					L01521:
	*** 00225e	83 7e fc 1e 		cmp	WORD PTR -4[bp],OFFSET 30
	*** 002262	7d 03 e9 e5 ff 		jl	L01518
					L01520:
; ; ; Line 2669
; Line 2669
					L01516:
	*** 002267	5f 			pop	di
	*** 002268	5e 			pop	si
	*** 002269	c9 			leave
	*** 00226a	cb 			ret	OFFSET 0
Local Size: 4
; Line 0
ine 2674
; x = 0006
; y = 0008
; speed = 000a
					_Start_Explosion:
	*** 00226c	c8 00 00 00 		enter	OFFSET L01702,OFFSET 0
	*** 002270	56 			push	si
	*** 002271	57 			push	di
; index = fffc
; ; ; Line 2676
; ; ; ; ; Line 2680
	*** 002272	c7 46 fc 00 00 		mov	WORD PTR -4[bp],OFFSET 0
	*** 002277	e9 00 00 		jmp	L01533
					L01530:
; ; Line 2681
; ; ; Line 2683
	*** 00227a	69 46 fc 82 00 		_imul3 	ax,WORD PTR -4[bp],OFFSET 130
	*** 00227f	bb 00 00 		mov	bx,OFFSET _explosions
	*** 002282	03 d8 			add	bx,ax
	*** 002284	83 7f 78 00 		cmp	WORD PTR 120[bx],OFFSET 0
	*** 002288	74 03 e9 00 00 		jne	L01534
; ; Line 2684
; ; ; ; ; Line 2688
	*** 00228d	69 46 fc 82 00 		_imul3 	ax,WORD PTR -4[bp],OFFSET 130
	*** 002292	bb 00 00 		mov	bx,OFFSET _explosions
	*** 002295	03 d8 			add	bx,ax
	*** 002297	c7 47 78 01 00 		mov	WORD PTR 120[bx],OFFSET 1
; ; Line 2689
	*** 00229c	8b 46 06 		mov	ax,WORD PTR 6[bp]
	*** 00229f	05 f6 ff 		add	ax,OFFSET -10
	*** 0022a2	89 46 fa 		mov	WORD PTR -6[bp],ax
	*** 0022a5	69 46 fc 82 00 		_imul3 	ax,WORD PTR -4[bp],OFFSET 130
	*** 0022aa	8b 4e fa 		mov	cx,WORD PTR -6[bp]
	*** 0022ad	8b d8 			mov	bx,ax
	*** 0022af	89 8f 00 00 		mov	WORD PTR _explosions[bx],cx
; ; Line 2690
	*** 0022b3	8b 46 08 		mov	ax,WORD PTR 8[bp]
	*** 0022b6	05 f6 ff 		add	ax,OFFSET -10
	*** 0022b9	89 46 fa 		mov	WORD PTR -6[bp],ax
	*** 0022bc	69 46 fc 82 00 		_imul3 	ax,WORD PTR -4[bp],OFFSET 130
	*** 0022c1	bb 00 00 		mov	bx,OFFSET _explosions
	*** 0022c4	03 d8 			add	bx,ax
	*** 0022c6	8b 46 fa 		mov	ax,WORD PTR -6[bp]
	*** 0022c9	89 47 02 		mov	WORD PTR 2[bx],ax
; ; Line 2691
	*** 0022cc	69 46 fc 82 00 		_imul3 	ax,WORD PTR -4[bp],OFFSET 130
	*** 0022d1	bb 00 00 		mov	bx,OFFSET _explosions
	*** 0022d4	03 d8 			add	bx,ax
	*** 0022d6	c7 47 74 00 00 		mov	WORD PTR 116[bx],OFFSET 0
; ; Line 2692
	*** 0022db	69 46 fc 82 00 		_imul3 	ax,WORD PTR -4[bp],OFFSET 130
	*** 0022e0	bb 00 00 		mov	bx,OFFSET _explosions
	*** 0022e3	03 d8 			add	bx,ax
	*** 0022e5	8b 46 0a 		mov	ax,WORD PTR 10[bp]
	*** 0022e8	89 47 0e 		mov	WORD PTR 14[bx],ax
; ; Line 2693
	*** 0022eb	69 46 fc 82 00 		_imul3 	ax,WORD PTR -4[bp],OFFSET 130
	*** 0022f0	bb 00 00 		mov	bx,OFFSET _explosions
	*** 0022f3	03 d8 			add	bx,ax
	*** 0022f5	c7 47 0c 00 00 		mov	WORD PTR 12[bx],OFFSET 0
; ; ; ; ; Line 2697
	*** 0022fa	69 46 fc 82 00 		_imul3 	ax,WORD PTR -4[bp],OFFSET 130
	*** 0022ff	b9 00 00 		mov	cx,OFFSET _explosions
	*** 002302	03 c8 			add	cx,ax
	*** 002304	51 			push	cx
	*** 002305	9a 00 00 00 00 		call	FAR PTR _Behind_Sprite_DB
	*** 00230a	83 c4 02 		add	sp,OFFSET 2
; ; ; ; ; Line 2701
	*** 00230d	6a 02 			push	OFFSET 2
	*** 00230f	9a 00 00 00 00 		call	FAR PTR _Play_Sound
	*** 002314	83 c4 02 		add	sp,OFFSET 2
; ; ; Line 2703
	*** 002317	e9 00 00 		jmp	L01532
; ; ; Line 2705
; ; ; Line 2707
					L01534:
					L01531:
; Line 2707
	*** 00231a	83 46 fc 01 		add	WORD PTR -4[bp],OFFSET 1
					L01533:
	*** 00231e	83 7e fc 05 		cmp	WORD PTR -4[bp],OFFSET 5
	*** 002322	7d 03 e9 53 ff 		jl	L01530
					L01532:
; ; ; Line 2709
; Line 2709
					L01528:
	*** 002327	5f 			pop	di
	*** 002328	5e 			pop	si
	*** 002329	c9 			leave
	*** 00232a	cb 			ret	OFFSET 0
Local Size: 6
; Line 0
ine 2714
					_Behind_Explosions:
	*** 00232c	c8 00 00 00 		enter	OFFSET L01703,OFFSET 0
	*** 002330	56 			push	si
	*** 002331	57 			push	di
; index = fffc
; ; ; ; ; Line 2718
; ; ; ; ; Line 2722
	*** 002332	c7 46 fc 00 00 		mov	WORD PTR -4[bp],OFFSET 0
	*** 002337	e9 00 00 		jmp	L01540
					L01537:
; ; Line 2723
; ; ; Line 2725
	*** 00233a	69 46 fc 82 00 		_imul3 	ax,WORD PTR -4[bp],OFFSET 130
	*** 00233f	bb 00 00 		mov	bx,OFFSET _explosions
	*** 002342	03 d8 			add	bx,ax
	*** 002344	83 7f 78 01 		cmp	WORD PTR 120[bx],OFFSET 1
	*** 002348	74 03 e9 00 00 		jne	L01541
; ; Line 2726
; ; Line 2727
	*** 00234d	69 46 fc 82 00 		_imul3 	ax,WORD PTR -4[bp],OFFSET 130
	*** 002352	b9 00 00 		mov	cx,OFFSET _explosions
	*** 002355	03 c8 			add	cx,ax
	*** 002357	51 			push	cx
	*** 002358	9a 00 00 00 00 		call	FAR PTR _Behind_Sprite_DB
	*** 00235d	83 c4 02 		add	sp,OFFSET 2
; ; ; Line 2729
; ; ; Line 2731
					L01541:
					L01538:
; Line 2731
	*** 002360	83 46 fc 01 		add	WORD PTR -4[bp],OFFSET 1
					L01540:
	*** 002364	83 7e fc 05 		cmp	WORD PTR -4[bp],OFFSET 5
	*** 002368	7d 03 e9 cd ff 		jl	L01537
					L01539:
; ; ; Line 2733
; Line 2733
					L01535:
	*** 00236d	5f 			pop	di
	*** 00236e	5e 			pop	si
	*** 00236f	c9 			leave
	*** 002370	cb 			ret	OFFSET 0
Local Size: 4
; Line 0
ine 2738
					_Erase_Explosions:
	*** 002372	c8 00 00 00 		enter	OFFSET L01704,OFFSET 0
	*** 002376	56 			push	si
	*** 002377	57 			push	di
; index = fffc
; ; ; Line 2740
; ; ; ; ; Line 2744
	*** 002378	c7 46 fc 00 00 		mov	WORD PTR -4[bp],OFFSET 0
	*** 00237d	e9 00 00 		jmp	L01547
					L01544:
; ; Line 2745
; ; ; Line 2747
	*** 002380	69 46 fc 82 00 		_imul3 	ax,WORD PTR -4[bp],OFFSET 130
	*** 002385	bb 00 00 		mov	bx,OFFSET _explosions
	*** 002388	03 d8 			add	bx,ax
	*** 00238a	83 7f 78 01 		cmp	WORD PTR 120[bx],OFFSET 1
	*** 00238e	74 03 e9 00 00 		jne	L01548
; ; Line 2748
; ; Line 2749
	*** 002393	69 46 fc 82 00 		_imul3 	ax,WORD PTR -4[bp],OFFSET 130
	*** 002398	b9 00 00 		mov	cx,OFFSET _explosions
	*** 00239b	03 c8 			add	cx,ax
	*** 00239d	51 			push	cx
	*** 00239e	9a 00 00 00 00 		call	FAR PTR _Erase_Sprite_DB
	*** 0023a3	83 c4 02 		add	sp,OFFSET 2
; ; ; Line 2751
; ; ; Line 2753
					L01548:
					L01545:
; Line 2753
	*** 0023a6	83 46 fc 01 		add	WORD PTR -4[bp],OFFSET 1
					L01547:
	*** 0023aa	83 7e fc 05 		cmp	WORD PTR -4[bp],OFFSET 5
	*** 0023ae	7d 03 e9 cd ff 		jl	L01544
					L01546:
; ; ; Line 2755
; Line 2755
					L01542:
	*** 0023b3	5f 			pop	di
	*** 0023b4	5e 			pop	si
	*** 0023b5	c9 			leave
	*** 0023b6	cb 			ret	OFFSET 0
Local Size: 4
; Line 0
ine 2760
					_Draw_Explosions:
	*** 0023b8	c8 00 00 00 		enter	OFFSET L01705,OFFSET 0
	*** 0023bc	56 			push	si
	*** 0023bd	57 			push	di
; index = fffc
; ; ; ; Line 2763
; ; ; ; ; Line 2767
	*** 0023be	c7 46 fc 00 00 		mov	WORD PTR -4[bp],OFFSET 0
	*** 0023c3	e9 00 00 		jmp	L01554
					L01551:
; ; Line 2768
; ; ; ; ; Line 2772
	*** 0023c6	69 46 fc 82 00 		_imul3 	ax,WORD PTR -4[bp],OFFSET 130
	*** 0023cb	bb 00 00 		mov	bx,OFFSET _explosions
	*** 0023ce	03 d8 			add	bx,ax
	*** 0023d0	83 7f 78 01 		cmp	WORD PTR 120[bx],OFFSET 1
	*** 0023d4	74 03 e9 00 00 		jne	L01555
; ; Line 2773
; ; Line 2774
	*** 0023d9	69 46 fc 82 00 		_imul3 	ax,WORD PTR -4[bp],OFFSET 130
	*** 0023de	b9 00 00 		mov	cx,OFFSET _explosions
	*** 0023e1	03 c8 			add	cx,ax
	*** 0023e3	51 			push	cx
	*** 0023e4	9a 00 00 00 00 		call	FAR PTR _Draw_Sprite_DB
	*** 0023e9	83 c4 02 		add	sp,OFFSET 2
; ; ; Line 2776
; ; ; Line 2778
					L01555:
					L01552:
; Line 2778
	*** 0023ec	83 46 fc 01 		add	WORD PTR -4[bp],OFFSET 1
					L01554:
	*** 0023f0	83 7e fc 05 		cmp	WORD PTR -4[bp],OFFSET 5
	*** 0023f4	7d 03 e9 cd ff 		jl	L01551
					L01553:
; ; ; Line 2780
; Line 2780
					L01549:
	*** 0023f9	5f 			pop	di
	*** 0023fa	5e 			pop	si
	*** 0023fb	c9 			leave
	*** 0023fc	cb 			ret	OFFSET 0
Local Size: 4
; Line 0
ine 2785
					_Animate_Explosions:
	*** 0023fe	c8 00 00 00 		enter	OFFSET L01706,OFFSET 0
	*** 002402	56 			push	si
	*** 002403	57 			push	di
; index = fffc
; ; ; Line 2787
; ; ; ; ; Line 2791
	*** 002404	c7 46 fc 00 00 		mov	WORD PTR -4[bp],OFFSET 0
	*** 002409	e9 00 00 		jmp	L01561
					L01558:
; ; Line 2792
; ; ; Line 2794
	*** 00240c	69 46 fc 82 00 		_imul3 	ax,WORD PTR -4[bp],OFFSET 130
	*** 002411	bb 00 00 		mov	bx,OFFSET _explosions
	*** 002414	03 d8 			add	bx,ax
	*** 002416	83 7f 78 01 		cmp	WORD PTR 120[bx],OFFSET 1
	*** 00241a	74 03 e9 00 00 		jne	L01562
; ; Line 2795
; ; ; ; Line 2798
	*** 00241f	69 46 fc 82 00 		_imul3 	ax,WORD PTR -4[bp],OFFSET 130
	*** 002424	bb 00 00 		mov	bx,OFFSET _explosions
	*** 002427	03 d8 			add	bx,ax
	*** 002429	83 47 0c 01 		add	WORD PTR 12[bx],OFFSET 1
	*** 00242d	8b 47 0c 		mov	ax,WORD PTR 12[bx]
	*** 002430	89 46 fa 		mov	WORD PTR -6[bp],ax
	*** 002433	69 46 fc 82 00 		_imul3 	ax,WORD PTR -4[bp],OFFSET 130
	*** 002438	bb 00 00 		mov	bx,OFFSET _explosions
	*** 00243b	03 d8 			add	bx,ax
	*** 00243d	8b 46 fa 		mov	ax,WORD PTR -6[bp]
	*** 002440	3b 47 0e 		cmp	ax,WORD PTR 14[bx]
	*** 002443	74 03 e9 00 00 		jne	L01563
; ; Line 2799
; ; ; ; Line 2802
	*** 002448	69 46 fc 82 00 		_imul3 	ax,WORD PTR -4[bp],OFFSET 130
	*** 00244d	bb 00 00 		mov	bx,OFFSET _explosions
	*** 002450	03 d8 			add	bx,ax
	*** 002452	83 47 74 01 		add	WORD PTR 116[bx],OFFSET 1
	*** 002456	8b 47 74 		mov	ax,WORD PTR 116[bx]
	*** 002459	3d 06 00 		cmp	ax,OFFSET 6
	*** 00245c	74 03 e9 00 00 		jne	L01564
; ; Line 2803
	*** 002461	69 46 fc 82 00 		_imul3 	ax,WORD PTR -4[bp],OFFSET 130
	*** 002466	bb 00 00 		mov	bx,OFFSET _explosions
	*** 002469	03 d8 			add	bx,ax
	*** 00246b	c7 47 78 00 00 		mov	WORD PTR 120[bx],OFFSET 0
; ; ; ; ; Line 2807
					L01564:
	*** 002470	69 46 fc 82 00 		_imul3 	ax,WORD PTR -4[bp],OFFSET 130
	*** 002475	bb 00 00 		mov	bx,OFFSET _explosions
	*** 002478	03 d8 			add	bx,ax
	*** 00247a	c7 47 0c 00 00 		mov	WORD PTR 12[bx],OFFSET 0
; ; ; Line 2809
; ; ; Line 2811
					L01563:
; ; ; Line 2813
					L01562:
					L01559:
; Line 2813
	*** 00247f	83 46 fc 01 		add	WORD PTR -4[bp],OFFSET 1
					L01561:
	*** 002483	83 7e fc 05 		cmp	WORD PTR -4[bp],OFFSET 5
	*** 002487	7d 03 e9 80 ff 		jl	L01558
					L01560:
; ; ; Line 2815
; Line 2815
					L01556:
	*** 00248c	5f 			pop	di
	*** 00248d	5e 			pop	si
	*** 00248e	c9 			leave
	*** 00248f	cb 			ret	OFFSET 0
Local Size: 6
; Line 0
ine 2820
					_Init_Explosions:
	*** 002490	c8 00 00 00 		enter	OFFSET L01707,OFFSET 0
	*** 002494	56 			push	si
	*** 002495	57 			push	di
; index = fffc
; ; ; ; Line 2823
; ; ; Line 2825
	*** 002496	c7 46 fc 00 00 		mov	WORD PTR -4[bp],OFFSET 0
	*** 00249b	e9 00 00 		jmp	L01571
					L01568:
; ; Line 2826
	*** 00249e	69 46 fc 82 00 		_imul3 	ax,WORD PTR -4[bp],OFFSET 130
	*** 0024a3	bb 00 00 		mov	bx,OFFSET _explosions
	*** 0024a6	03 d8 			add	bx,ax
	*** 0024a8	c7 47 78 00 00 		mov	WORD PTR 120[bx],OFFSET 0
					L01569:
	*** 0024ad	83 46 fc 01 		add	WORD PTR -4[bp],OFFSET 1
					L01571:
	*** 0024b1	83 7e fc 05 		cmp	WORD PTR -4[bp],OFFSET 5
	*** 0024b5	7d 03 e9 e4 ff 		jl	L01568
					L01570:
; ; ; Line 2828
; Line 2828
					L01566:
	*** 0024ba	5f 			pop	di
	*** 0024bb	5e 			pop	si
	*** 0024bc	c9 			leave
	*** 0024bd	cb 			ret	OFFSET 0
Local Size: 4
; Line 0
ine 2833
					_Display_Instruments:
	*** 0024be	c8 00 00 00 		enter	OFFSET L01708,OFFSET 0
	*** 0024c2	56 			push	si
	*** 0024c3	57 			push	di
; buffer = ff7e
; ; ; ; Line 2836
; ; ; ; ; Line 2840
	*** 0024c4	ff 36 18 00 		push	WORD PTR _player_ships+2
	*** 0024c8	ff 36 16 00 		push	WORD PTR _player_ships
	*** 0024cc	68 62 07 		push	OFFSET L01574
	*** 0024cf	8d 86 7e ff 		lea	ax,WORD PTR -130[bp]
	*** 0024d3	50 			push	ax
	*** 0024d4	9a 00 00 00 00 		call	FAR PTR _sprintf
	*** 0024d9	83 c4 08 		add	sp,OFFSET 8
; ; ; Line 2842
	*** 0024dc	6a 00 			push	OFFSET 0
	*** 0024de	8d 86 7e ff 		lea	ax,WORD PTR -130[bp]
	*** 0024e2	50 			push	ax
	*** 0024e3	6a 0a 			push	OFFSET 10
	*** 0024e5	68 bd 00 		push	OFFSET 189
	*** 0024e8	6a 2a 			push	OFFSET 42
	*** 0024ea	9a 00 00 00 00 		call	FAR PTR _Blit_String_DB
	*** 0024ef	83 c4 0a 		add	sp,OFFSET 10
; ; ; ; ; Line 2846
	*** 0024f2	ff 36 20 00 		push	WORD PTR _player_score+2
	*** 0024f6	ff 36 1e 00 		push	WORD PTR _player_score
	*** 0024fa	68 67 07 		push	OFFSET L01575
	*** 0024fd	8d 86 7e ff 		lea	ax,WORD PTR -130[bp]
	*** 002501	50 			push	ax
	*** 002502	9a 00 00 00 00 		call	FAR PTR _sprintf
	*** 002507	83 c4 08 		add	sp,OFFSET 8
; ; ; Line 2848
	*** 00250a	6a 00 			push	OFFSET 0
	*** 00250c	8d 86 7e ff 		lea	ax,WORD PTR -130[bp]
	*** 002510	50 			push	ax
	*** 002511	6a 0a 			push	OFFSET 10
	*** 002513	68 bd 00 		push	OFFSET 189
	*** 002516	68 8e 00 		push	OFFSET 142
	*** 002519	9a 00 00 00 00 		call	FAR PTR _Blit_String_DB
	*** 00251e	83 c4 0a 		add	sp,OFFSET 10
; ; ; ; ; Line 2852
	*** 002521	83 3e 1c 00 00 		cmp	WORD PTR _player_energy+2,OFFSET 0
	*** 002526	7d 03 e9 00 00 		jl	L01576
	*** 00252b	7e 03 e9 00 00 		jg	L01709
	*** 002530	83 3e 1a 00 00 		cmp	WORD PTR _player_energy,OFFSET 0
	*** 002535	73 03 e9 00 00 		jb	L01576
					L01709:
; ; Line 2853
; ; Line 2854
	*** 00253a	ff 36 1c 00 		push	WORD PTR _player_energy+2
	*** 00253e	ff 36 1a 00 		push	WORD PTR _player_energy
	*** 002542	68 6b 07 		push	OFFSET L01577
	*** 002545	8d 86 7e ff 		lea	ax,WORD PTR -130[bp]
	*** 002549	50 			push	ax
	*** 00254a	9a 00 00 00 00 		call	FAR PTR _sprintf
	*** 00254f	83 c4 08 		add	sp,OFFSET 8
; ; Line 2855
	*** 002552	6a 00 			push	OFFSET 0
	*** 002554	8d 86 7e ff 		lea	ax,WORD PTR -130[bp]
	*** 002558	50 			push	ax
	*** 002559	6a 0a 			push	OFFSET 10
	*** 00255b	68 bd 00 		push	OFFSET 189
	*** 00255e	68 14 01 		push	OFFSET 276
	*** 002561	9a 00 00 00 00 		call	FAR PTR _Blit_String_DB
	*** 002566	83 c4 0a 		add	sp,OFFSET 10
; ; Line 2856
; ; Line 2857
	*** 002569	e9 00 00 		jmp	L01578
					L01576:
; Line 2857
; ; Line 2858
	*** 00256c	6a 00 			push	OFFSET 0
	*** 00256e	68 70 07 		push	OFFSET L01579
	*** 002571	6a 0c 			push	OFFSET 12
	*** 002573	68 bd 00 		push	OFFSET 189
	*** 002576	68 14 01 		push	OFFSET 276
	*** 002579	9a 00 00 00 00 		call	FAR PTR _Blit_String_DB
	*** 00257e	83 c4 0a 		add	sp,OFFSET 10
					L01578:
; ; ; Line 2860
; Line 2860
					L01572:
	*** 002581	5f 			pop	di
	*** 002582	5e 			pop	si
	*** 002583	c9 			leave
	*** 002584	cb 			ret	OFFSET 0
Local Size: 130
; Line 0
ine 2865
					_Erase_Instruments:
	*** 002586	c8 00 00 00 		enter	OFFSET L01710,OFFSET 0
	*** 00258a	56 			push	si
	*** 00258b	57 			push	di
; ; ; ; ; Line 2869
	*** 00258c	6a 00 			push	OFFSET 0
	*** 00258e	68 75 07 		push	OFFSET L01581
	*** 002591	6a 00 			push	OFFSET 0
	*** 002593	68 bd 00 		push	OFFSET 189
	*** 002596	6a 2a 			push	OFFSET 42
	*** 002598	9a 00 00 00 00 		call	FAR PTR _Blit_String_DB
	*** 00259d	83 c4 0a 		add	sp,OFFSET 10
; ; ; Line 2871
	*** 0025a0	6a 00 			push	OFFSET 0
	*** 0025a2	68 77 07 		push	OFFSET L01582
	*** 0025a5	6a 00 			push	OFFSET 0
	*** 0025a7	68 bd 00 		push	OFFSET 189
	*** 0025aa	68 8e 00 		push	OFFSET 142
	*** 0025ad	9a 00 00 00 00 		call	FAR PTR _Blit_String_DB
	*** 0025b2	83 c4 0a 		add	sp,OFFSET 10
; ; ; Line 2873
	*** 0025b5	6a 00 			push	OFFSET 0
	*** 0025b7	68 7e 07 		push	OFFSET L01583
	*** 0025ba	6a 00 			push	OFFSET 0
	*** 0025bc	68 bd 00 		push	OFFSET 189
	*** 0025bf	68 14 01 		push	OFFSET 276
	*** 0025c2	9a 00 00 00 00 		call	FAR PTR _Blit_String_DB
	*** 0025c7	83 c4 0a 		add	sp,OFFSET 10
; ; ; Line 2875
; Line 2875
					L01580:
	*** 0025ca	5f 			pop	di
	*** 0025cb	5e 			pop	si
	*** 0025cc	c9 			leave
	*** 0025cd	cb 			ret	OFFSET 0
Local Size: 2
; Line 0
ine 2880
					_Load_Background:
	*** 0025ce	c8 00 00 00 		enter	OFFSET L01711,OFFSET 0
	*** 0025d2	56 			push	si
	*** 0025d3	57 			push	di
; ; ; ; ; ; Line 2885
	*** 0025d4	68 00 00 		push	OFFSET _background_pcx
	*** 0025d7	9a 00 00 00 00 		call	FAR PTR _PCX_Init
	*** 0025dc	83 c4 02 		add	sp,OFFSET 2
; ; ; Line 2887
	*** 0025df	6a 01 			push	OFFSET 1
	*** 0025e1	68 00 00 		push	OFFSET _background_pcx
	*** 0025e4	68 83 07 		push	OFFSET L01586
	*** 0025e7	9a 00 00 00 00 		call	FAR PTR _PCX_Load
	*** 0025ec	83 c4 06 		add	sp,OFFSET 6
; ; ; ; ; Line 2891
; ; Line 2892
; ; Line 2893
	*** 0025ef	68 00 fa 		push	OFFSET -1536
	*** 0025f2	ff 36 82 03 		push	WORD PTR _background_pcx+898
	*** 0025f6	ff 36 80 03 		push	WORD PTR _background_pcx+896
	*** 0025fa	ff 36 02 00 		push	WORD PTR _double_buffer+2
	*** 0025fe	ff 36 00 00 		push	WORD PTR _double_buffer
	*** 002602	9a 00 00 00 00 		call	FAR PTR __fmemcpy
	*** 002607	83 c4 0a 		add	sp,OFFSET 10
; ; ; Line 2895
	*** 00260a	68 00 00 		push	OFFSET _background_pcx
	*** 00260d	9a 00 00 00 00 		call	FAR PTR _PCX_Delete
	*** 002612	83 c4 02 		add	sp,OFFSET 2
; ; ; Line 2897
; Line 2897
					L01585:
	*** 002615	5f 			pop	di
	*** 002616	5e 			pop	si
	*** 002617	c9 			leave
	*** 002618	cb 			ret	OFFSET 0
Local Size: 2
; Line 0
ine 2902
					_Do_Intro:
	*** 00261a	c8 00 00 00 		enter	OFFSET L01712,OFFSET 0
	*** 00261e	56 			push	si
	*** 00261f	57 			push	di
; ; ; ; ; ; ; Line 2908
	*** 002620	68 00 00 		push	OFFSET _intro_pcx
	*** 002623	9a 00 00 00 00 		call	FAR PTR _PCX_Init
	*** 002628	83 c4 02 		add	sp,OFFSET 2
; ; ; Line 2910
	*** 00262b	6a 01 			push	OFFSET 1
	*** 00262d	68 00 00 		push	OFFSET _intro_pcx
	*** 002630	68 90 07 		push	OFFSET L01589
	*** 002633	9a 00 00 00 00 		call	FAR PTR _PCX_Load
	*** 002638	83 c4 06 		add	sp,OFFSET 6
; ; ; Line 2912
	*** 00263b	68 00 00 		push	OFFSET _intro_pcx
	*** 00263e	9a 00 00 00 00 		call	FAR PTR _PCX_Show_Buffer
	*** 002643	83 c4 02 		add	sp,OFFSET 2
; ; ; ; ; Line 2916
	*** 002646	6a 32 			push	OFFSET 50
	*** 002648	9a 00 00 00 00 		call	FAR PTR _Delay
	*** 00264d	83 c4 02 		add	sp,OFFSET 2
; ; ; Line 2918
	*** 002650	9a 00 00 00 00 		call	FAR PTR _Fade_Lights
; ; ; Line 2920
	*** 002655	68 00 00 		push	OFFSET _intro_pcx
	*** 002658	9a 00 00 00 00 		call	FAR PTR _PCX_Delete
	*** 00265d	83 c4 02 		add	sp,OFFSET 2
; ; ; ; ; Line 2924
	*** 002660	68 00 00 		push	OFFSET _intro_pcx
	*** 002663	9a 00 00 00 00 		call	FAR PTR _PCX_Init
	*** 002668	83 c4 02 		add	sp,OFFSET 2
; ; ; Line 2926
	*** 00266b	6a 01 			push	OFFSET 1
	*** 00266d	68 00 00 		push	OFFSET _intro_pcx
	*** 002670	68 9c 07 		push	OFFSET L01590
	*** 002673	9a 00 00 00 00 		call	FAR PTR _PCX_Load
	*** 002678	83 c4 06 		add	sp,OFFSET 6
; ; ; Line 2928
	*** 00267b	68 00 00 		push	OFFSET _intro_pcx
	*** 00267e	9a 00 00 00 00 		call	FAR PTR _PCX_Show_Buffer
	*** 002683	83 c4 02 		add	sp,OFFSET 2
; ; ; ; ; Line 2932
	*** 002686	9a 00 00 00 00 		call	FAR PTR _getch
; ; ; Line 2934
	*** 00268b	9a 00 00 00 00 		call	FAR PTR _Melt
; ; ; Line 2936
	*** 002690	68 00 00 		push	OFFSET _intro_pcx
	*** 002693	9a 00 00 00 00 		call	FAR PTR _PCX_Delete
	*** 002698	83 c4 02 		add	sp,OFFSET 2
; ; ; Line 2938
; Line 2938
					L01588:
	*** 00269b	5f 			pop	di
	*** 00269c	5e 			pop	si
	*** 00269d	c9 			leave
	*** 00269e	cb 			ret	OFFSET 0
Local Size: 2
; Line 0
ine 2943
					_Load_Player:
	*** 0026a0	c8 00 00 00 		enter	OFFSET L01713,OFFSET 0
	*** 0026a4	56 			push	si
	*** 0026a5	57 			push	di
; ; ; ; ; ; ; ; Line 2950
	*** 0026a6	68 00 00 		push	OFFSET _imagery_pcx
	*** 0026a9	9a 00 00 00 00 		call	FAR PTR _PCX_Init
	*** 0026ae	83 c4 02 		add	sp,OFFSET 2
; ; ; Line 2952
	*** 0026b1	6a 01 			push	OFFSET 1
	*** 0026b3	68 00 00 		push	OFFSET _imagery_pcx
	*** 0026b6	68 a8 07 		push	OFFSET L01593
	*** 0026b9	9a 00 00 00 00 		call	FAR PTR _PCX_Load
	*** 0026be	83 c4 06 		add	sp,OFFSET 6
; ; ; ; ; Line 2956
	*** 0026c1	c7 06 00 00 12 00 	mov	WORD PTR _sprite_width,OFFSET 18
; ; Line 2957
	*** 0026c7	c7 06 00 00 12 00 	mov	WORD PTR _sprite_height,OFFSET 18
; ; ; Line 2959
	*** 0026cd	6a 00 			push	OFFSET 0
	*** 0026cf	6a 00 			push	OFFSET 0
	*** 0026d1	6a 00 			push	OFFSET 0
	*** 0026d3	6a 00 			push	OFFSET 0
	*** 0026d5	6a 00 			push	OFFSET 0
	*** 0026d7	6a 00 			push	OFFSET 0
	*** 0026d9	68 00 00 		push	OFFSET _player
	*** 0026dc	9a 00 00 00 00 		call	FAR PTR _Sprite_Init
	*** 0026e1	83 c4 0e 		add	sp,OFFSET 14
; ; ; Line 2961
	*** 0026e4	6a 03 			push	OFFSET 3
	*** 0026e6	6a 00 			push	OFFSET 0
	*** 0026e8	6a 00 			push	OFFSET 0
	*** 0026ea	68 00 00 		push	OFFSET _player
	*** 0026ed	68 00 00 		push	OFFSET _imagery_pcx
	*** 0026f0	9a 00 00 00 00 		call	FAR PTR _PCX_Grab_Bitmap
	*** 0026f5	83 c4 0a 		add	sp,OFFSET 10
; ; Line 2962
	*** 0026f8	6a 03 			push	OFFSET 3
	*** 0026fa	6a 01 			push	OFFSET 1
	*** 0026fc	6a 01 			push	OFFSET 1
	*** 0026fe	68 00 00 		push	OFFSET _player
	*** 002701	68 00 00 		push	OFFSET _imagery_pcx
	*** 002704	9a 00 00 00 00 		call	FAR PTR _PCX_Grab_Bitmap
	*** 002709	83 c4 0a 		add	sp,OFFSET 10
; ; Line 2963
	*** 00270c	6a 03 			push	OFFSET 3
	*** 00270e	6a 02 			push	OFFSET 2
	*** 002710	6a 02 			push	OFFSET 2
	*** 002712	68 00 00 		push	OFFSET _player
	*** 002715	68 00 00 		push	OFFSET _imagery_pcx
	*** 002718	9a 00 00 00 00 		call	FAR PTR _PCX_Grab_Bitmap
	*** 00271d	83 c4 0a 		add	sp,OFFSET 10
; ; Line 2964
	*** 002720	6a 03 			push	OFFSET 3
	*** 002722	6a 03 			push	OFFSET 3
	*** 002724	6a 03 			push	OFFSET 3
	*** 002726	68 00 00 		push	OFFSET _player
	*** 002729	68 00 00 		push	OFFSET _imagery_pcx
	*** 00272c	9a 00 00 00 00 		call	FAR PTR _PCX_Grab_Bitmap
	*** 002731	83 c4 0a 		add	sp,OFFSET 10
; ; Line 2965
	*** 002734	6a 03 			push	OFFSET 3
	*** 002736	6a 04 			push	OFFSET 4
	*** 002738	6a 04 			push	OFFSET 4
	*** 00273a	68 00 00 		push	OFFSET _player
	*** 00273d	68 00 00 		push	OFFSET _imagery_pcx
	*** 002740	9a 00 00 00 00 		call	FAR PTR _PCX_Grab_Bitmap
	*** 002745	83 c4 0a 		add	sp,OFFSET 10
; ; Line 2966
	*** 002748	6a 03 			push	OFFSET 3
	*** 00274a	6a 05 			push	OFFSET 5
	*** 00274c	6a 05 			push	OFFSET 5
	*** 00274e	68 00 00 		push	OFFSET _player
	*** 002751	68 00 00 		push	OFFSET _imagery_pcx
	*** 002754	9a 00 00 00 00 		call	FAR PTR _PCX_Grab_Bitmap
	*** 002759	83 c4 0a 		add	sp,OFFSET 10
; ; ; Line 2968
	*** 00275c	c7 06 00 00 a0 00 	mov	WORD PTR _player,OFFSET 160
; ; Line 2969
	*** 002762	c7 06 02 00 a8 00 	mov	WORD PTR _player+2,OFFSET 168
; ; Line 2970
	*** 002768	c7 06 74 00 00 00 	mov	WORD PTR _player+116,OFFSET 0
; ; Line 2971
	*** 00276e	c7 06 78 00 01 00 	mov	WORD PTR _player+120,OFFSET 1
; ; ; ; Line 2974
; Line 2974
					L01592:
	*** 002774	5f 			pop	di
	*** 002775	5e 			pop	si
	*** 002776	c9 			leave
	*** 002777	cb 			ret	OFFSET 0
Local Size: 2
; Line 0
ine 2980
					_Load_Mother:
	*** 002778	c8 00 00 00 		enter	OFFSET L01714,OFFSET 0
	*** 00277c	56 			push	si
	*** 00277d	57 			push	di
; ; ; ; ; Line 2984
	*** 00277e	6a 00 			push	OFFSET 0
	*** 002780	6a 00 			push	OFFSET 0
	*** 002782	6a 00 			push	OFFSET 0
	*** 002784	6a 00 			push	OFFSET 0
	*** 002786	6a 00 			push	OFFSET 0
	*** 002788	6a 00 			push	OFFSET 0
	*** 00278a	68 00 00 		push	OFFSET _mother
	*** 00278d	9a 00 00 00 00 		call	FAR PTR _Sprite_Init
	*** 002792	83 c4 0e 		add	sp,OFFSET 14
; ; ; Line 2986
	*** 002795	6a 04 			push	OFFSET 4
	*** 002797	6a 00 			push	OFFSET 0
	*** 002799	6a 00 			push	OFFSET 0
	*** 00279b	68 00 00 		push	OFFSET _mother
	*** 00279e	68 00 00 		push	OFFSET _imagery_pcx
	*** 0027a1	9a 00 00 00 00 		call	FAR PTR _PCX_Grab_Bitmap
	*** 0027a6	83 c4 0a 		add	sp,OFFSET 10
; ; Line 2987
	*** 0027a9	6a 04 			push	OFFSET 4
	*** 0027ab	6a 01 			push	OFFSET 1
	*** 0027ad	6a 01 			push	OFFSET 1
	*** 0027af	68 00 00 		push	OFFSET _mother
	*** 0027b2	68 00 00 		push	OFFSET _imagery_pcx
	*** 0027b5	9a 00 00 00 00 		call	FAR PTR _PCX_Grab_Bitmap
	*** 0027ba	83 c4 0a 		add	sp,OFFSET 10
; ; ; Line 2989
	*** 0027bd	c7 06 00 00 00 00 	mov	WORD PTR _mother,OFFSET 0
; ; Line 2990
	*** 0027c3	c7 06 02 00 00 00 	mov	WORD PTR _mother+2,OFFSET 0
; ; Line 2991
	*** 0027c9	c7 06 74 00 00 00 	mov	WORD PTR _mother+116,OFFSET 0
; ; Line 2992
	*** 0027cf	c7 06 78 00 00 00 	mov	WORD PTR _mother+120,OFFSET 0
; ; ; ; Line 2995
; Line 2995
					L01595:
	*** 0027d5	5f 			pop	di
	*** 0027d6	5e 			pop	si
	*** 0027d7	c9 			leave
	*** 0027d8	cb 			ret	OFFSET 0
Local Size: 2
; Line 0
ine 3000
					_Load_Explosions:
	*** 0027da	c8 00 00 00 		enter	OFFSET L01715,OFFSET 0
	*** 0027de	56 			push	si
	*** 0027df	57 			push	di
; index = fffc
; ; ; ; Line 3003
; ; ; ; ; ; ; ; Line 3010
	*** 0027e0	c7 46 fc 00 00 		mov	WORD PTR -4[bp],OFFSET 0
	*** 0027e5	e9 00 00 		jmp	L01602
					L01599:
; ; Line 3011
; ; ; Line 3013
	*** 0027e8	6a 00 			push	OFFSET 0
	*** 0027ea	6a 00 			push	OFFSET 0
	*** 0027ec	6a 00 			push	OFFSET 0
	*** 0027ee	6a 00 			push	OFFSET 0
	*** 0027f0	6a 00 			push	OFFSET 0
	*** 0027f2	6a 00 			push	OFFSET 0
	*** 0027f4	69 46 fc 82 00 		_imul3 	ax,WORD PTR -4[bp],OFFSET 130
	*** 0027f9	b9 00 00 		mov	cx,OFFSET _explosions
	*** 0027fc	03 c8 			add	cx,ax
	*** 0027fe	51 			push	cx
	*** 0027ff	9a 00 00 00 00 		call	FAR PTR _Sprite_Init
	*** 002804	83 c4 0e 		add	sp,OFFSET 14
; ; ; Line 3015
; ; Line 3016
	*** 002807	6a 03 			push	OFFSET 3
	*** 002809	6a 06 			push	OFFSET 6
	*** 00280b	6a 00 			push	OFFSET 0
	*** 00280d	69 46 fc 82 00 		_imul3 	ax,WORD PTR -4[bp],OFFSET 130
	*** 002812	b9 00 00 		mov	cx,OFFSET _explosions
	*** 002815	03 c8 			add	cx,ax
	*** 002817	51 			push	cx
	*** 002818	68 00 00 		push	OFFSET _imagery_pcx
	*** 00281b	9a 00 00 00 00 		call	FAR PTR _PCX_Grab_Bitmap
	*** 002820	83 c4 0a 		add	sp,OFFSET 10
; ; ; Line 3018
; ; Line 3019
	*** 002823	6a 03 			push	OFFSET 3
	*** 002825	6a 07 			push	OFFSET 7
	*** 002827	6a 01 			push	OFFSET 1
	*** 002829	69 46 fc 82 00 		_imul3 	ax,WORD PTR -4[bp],OFFSET 130
	*** 00282e	b9 00 00 		mov	cx,OFFSET _explosions
	*** 002831	03 c8 			add	cx,ax
	*** 002833	51 			push	cx
	*** 002834	68 00 00 		push	OFFSET _imagery_pcx
	*** 002837	9a 00 00 00 00 		call	FAR PTR _PCX_Grab_Bitmap
	*** 00283c	83 c4 0a 		add	sp,OFFSET 10
; ; ; Line 3021
; ; Line 3022
	*** 00283f	6a 03 			push	OFFSET 3
	*** 002841	6a 08 			push	OFFSET 8
	*** 002843	6a 02 			push	OFFSET 2
	*** 002845	69 46 fc 82 00 		_imul3 	ax,WORD PTR -4[bp],OFFSET 130
	*** 00284a	b9 00 00 		mov	cx,OFFSET _explosions
	*** 00284d	03 c8 			add	cx,ax
	*** 00284f	51 			push	cx
	*** 002850	68 00 00 		push	OFFSET _imagery_pcx
	*** 002853	9a 00 00 00 00 		call	FAR PTR _PCX_Grab_Bitmap
	*** 002858	83 c4 0a 		add	sp,OFFSET 10
; ; ; Line 3024
; ; Line 3025
	*** 00285b	6a 03 			push	OFFSET 3
	*** 00285d	6a 09 			push	OFFSET 9
	*** 00285f	6a 03 			push	OFFSET 3
	*** 002861	69 46 fc 82 00 		_imul3 	ax,WORD PTR -4[bp],OFFSET 130
	*** 002866	b9 00 00 		mov	cx,OFFSET _explosions
	*** 002869	03 c8 			add	cx,ax
	*** 00286b	51 			push	cx
	*** 00286c	68 00 00 		push	OFFSET _imagery_pcx
	*** 00286f	9a 00 00 00 00 		call	FAR PTR _PCX_Grab_Bitmap
	*** 002874	83 c4 0a 		add	sp,OFFSET 10
; ; ; Line 3027
; ; Line 3028
	*** 002877	6a 03 			push	OFFSET 3
	*** 002879	6a 0a 			push	OFFSET 10
	*** 00287b	6a 04 			push	OFFSET 4
	*** 00287d	69 46 fc 82 00 		_imul3 	ax,WORD PTR -4[bp],OFFSET 130
	*** 002882	b9 00 00 		mov	cx,OFFSET _explosions
	*** 002885	03 c8 			add	cx,ax
	*** 002887	51 			push	cx
	*** 002888	68 00 00 		push	OFFSET _imagery_pcx
	*** 00288b	9a 00 00 00 00 		call	FAR PTR _PCX_Grab_Bitmap
	*** 002890	83 c4 0a 		add	sp,OFFSET 10
; ; ; Line 3030
; ; Line 3031
	*** 002893	6a 03 			push	OFFSET 3
	*** 002895	6a 0b 			push	OFFSET 11
	*** 002897	6a 05 			push	OFFSET 5
	*** 002899	69 46 fc 82 00 		_imul3 	ax,WORD PTR -4[bp],OFFSET 130
	*** 00289e	b9 00 00 		mov	cx,OFFSET _explosions
	*** 0028a1	03 c8 			add	cx,ax
	*** 0028a3	51 			push	cx
	*** 0028a4	68 00 00 		push	OFFSET _imagery_pcx
	*** 0028a7	9a 00 00 00 00 		call	FAR PTR _PCX_Grab_Bitmap
	*** 0028ac	83 c4 0a 		add	sp,OFFSET 10
; ; ; Line 3033
					L01600:
; Line 3033
	*** 0028af	83 46 fc 01 		add	WORD PTR -4[bp],OFFSET 1
					L01602:
	*** 0028b3	83 7e fc 05 		cmp	WORD PTR -4[bp],OFFSET 5
	*** 0028b7	7d 03 e9 2c ff 		jl	L01599
					L01601:
; ; ; Line 3035
; Line 3035
					L01597:
	*** 0028bc	5f 			pop	di
	*** 0028bd	5e 			pop	si
	*** 0028be	c9 			leave
	*** 0028bf	cb 			ret	OFFSET 0
Local Size: 4
; Line 0
ine 3040
					_Load_Mechs:
	*** 0028c0	c8 00 00 00 		enter	OFFSET L01716,OFFSET 0
	*** 0028c4	56 			push	si
	*** 0028c5	57 			push	di
; index = fffc
; ; ; ; Line 3043
; ; ; ; ; ; ; Line 3049
	*** 0028c6	6a 00 			push	OFFSET 0
	*** 0028c8	6a 00 			push	OFFSET 0
	*** 0028ca	6a 00 			push	OFFSET 0
	*** 0028cc	6a 00 			push	OFFSET 0
	*** 0028ce	6a 00 			push	OFFSET 0
	*** 0028d0	6a 00 			push	OFFSET 0
	*** 0028d2	68 00 00 		push	OFFSET _robot_1
	*** 0028d5	9a 00 00 00 00 		call	FAR PTR _Sprite_Init
	*** 0028da	83 c4 0e 		add	sp,OFFSET 14
; ; Line 3050
	*** 0028dd	6a 00 			push	OFFSET 0
	*** 0028df	6a 00 			push	OFFSET 0
	*** 0028e1	6a 00 			push	OFFSET 0
	*** 0028e3	6a 00 			push	OFFSET 0
	*** 0028e5	6a 00 			push	OFFSET 0
	*** 0028e7	6a 00 			push	OFFSET 0
	*** 0028e9	68 00 00 		push	OFFSET _robot_2
	*** 0028ec	9a 00 00 00 00 		call	FAR PTR _Sprite_Init
	*** 0028f1	83 c4 0e 		add	sp,OFFSET 14
; ; Line 3051
	*** 0028f4	6a 00 			push	OFFSET 0
	*** 0028f6	6a 00 			push	OFFSET 0
	*** 0028f8	6a 00 			push	OFFSET 0
	*** 0028fa	6a 00 			push	OFFSET 0
	*** 0028fc	6a 00 			push	OFFSET 0
	*** 0028fe	6a 00 			push	OFFSET 0
	*** 002900	68 00 00 		push	OFFSET _robot_3
	*** 002903	9a 00 00 00 00 		call	FAR PTR _Sprite_Init
	*** 002908	83 c4 0e 		add	sp,OFFSET 14
; ; ; ; ; Line 3055
	*** 00290b	c7 06 00 00 00 00 	mov	WORD PTR _robot_1,OFFSET 0
; ; Line 3056
	*** 002911	c7 06 02 00 00 00 	mov	WORD PTR _robot_1+2,OFFSET 0
; ; Line 3057
	*** 002917	c7 06 74 00 00 00 	mov	WORD PTR _robot_1+116,OFFSET 0
; ; ; Line 3059
	*** 00291d	c7 06 00 00 00 00 	mov	WORD PTR _robot_2,OFFSET 0
; ; Line 3060
	*** 002923	c7 06 02 00 00 00 	mov	WORD PTR _robot_2+2,OFFSET 0
; ; Line 3061
	*** 002929	c7 06 74 00 00 00 	mov	WORD PTR _robot_2+116,OFFSET 0
; ; ; Line 3063
	*** 00292f	c7 06 00 00 00 00 	mov	WORD PTR _robot_3,OFFSET 0
; ; Line 3064
	*** 002935	c7 06 02 00 00 00 	mov	WORD PTR _robot_3+2,OFFSET 0
; ; Line 3065
	*** 00293b	c7 06 74 00 00 00 	mov	WORD PTR _robot_3+116,OFFSET 0
; ; ; ; ; Line 3069
	*** 002941	c7 46 fc 00 00 		mov	WORD PTR -4[bp],OFFSET 0
	*** 002946	e9 00 00 		jmp	L01609
					L01606:
; ; Line 3070
; ; ; ; Line 3073
; ; Line 3074
	*** 002949	6a 00 			push	OFFSET 0
	*** 00294b	ff 76 fc 		push	WORD PTR -4[bp]
	*** 00294e	ff 76 fc 		push	WORD PTR -4[bp]
	*** 002951	68 00 00 		push	OFFSET _robot_1
	*** 002954	68 00 00 		push	OFFSET _imagery_pcx
	*** 002957	9a 00 00 00 00 		call	FAR PTR _PCX_Grab_Bitmap
	*** 00295c	83 c4 0a 		add	sp,OFFSET 10
; ; ; ; Line 3077
; ; Line 3078
	*** 00295f	6a 01 			push	OFFSET 1
	*** 002961	ff 76 fc 		push	WORD PTR -4[bp]
	*** 002964	ff 76 fc 		push	WORD PTR -4[bp]
	*** 002967	68 00 00 		push	OFFSET _robot_2
	*** 00296a	68 00 00 		push	OFFSET _imagery_pcx
	*** 00296d	9a 00 00 00 00 		call	FAR PTR _PCX_Grab_Bitmap
	*** 002972	83 c4 0a 		add	sp,OFFSET 10
; ; ; ; Line 3081
; ; Line 3082
	*** 002975	6a 02 			push	OFFSET 2
	*** 002977	ff 76 fc 		push	WORD PTR -4[bp]
	*** 00297a	ff 76 fc 		push	WORD PTR -4[bp]
	*** 00297d	68 00 00 		push	OFFSET _robot_3
	*** 002980	68 00 00 		push	OFFSET _imagery_pcx
	*** 002983	9a 00 00 00 00 		call	FAR PTR _PCX_Grab_Bitmap
	*** 002988	83 c4 0a 		add	sp,OFFSET 10
; ; ; ; Line 3085
					L01607:
; Line 3085
	*** 00298b	83 46 fc 01 		add	WORD PTR -4[bp],OFFSET 1
					L01609:
	*** 00298f	83 7e fc 0a 		cmp	WORD PTR -4[bp],OFFSET 10
	*** 002993	7d 03 e9 b1 ff 		jl	L01606
					L01608:
; ; ; ; ; Line 3089
	*** 002998	68 00 00 		push	OFFSET _imagery_pcx
	*** 00299b	9a 00 00 00 00 		call	FAR PTR _PCX_Delete
	*** 0029a0	83 c4 02 		add	sp,OFFSET 2
; ; ; ; Line 3092
; Line 3092
					L01604:
	*** 0029a3	5f 			pop	di
	*** 0029a4	5e 			pop	si
	*** 0029a5	c9 			leave
	*** 0029a6	cb 			ret	OFFSET 0
Local Size: 4
; Line 0
ine 3097
; argc = 0006
; argv = 0008
					_main:
	*** 0029a8	c8 00 00 00 		enter	OFFSET L01717,OFFSET 0
	*** 0029ac	56 			push	si
	*** 0029ad	57 			push	di
; fired = fffc
; buffer = ffac
; index = ffaa
; done = ffa8
; ; ; ; Line 3100
	*** 0029ae	c7 46 a8 00 00 		mov	WORD PTR -88[bp],OFFSET 0
; ; Line 3101
	*** 0029b3	c7 46 fc 00 00 		mov	WORD PTR -4[bp],OFFSET 0
; ; Line 3102
; ; ; Line 3104
; ; ; Line 3106
	*** 0029b8	68 b1 07 		push	OFFSET L01620
	*** 0029bb	9a 00 00 00 00 		call	FAR PTR _printf
	*** 0029c0	83 c4 02 		add	sp,OFFSET 2
; ; ; ; ; Line 3110
	*** 0029c3	9a 00 00 00 00 		call	FAR PTR _Initialize_Sound_System
	*** 0029c8	a3 4c 06 		mov	WORD PTR _sound_available,ax
; ; ; Line 3112
	*** 0029cb	6a 64 			push	OFFSET 100
	*** 0029cd	9a 00 00 00 00 		call	FAR PTR _Delay
	*** 0029d2	83 c4 02 		add	sp,OFFSET 2
; ; ; ; ; Line 3116
	*** 0029d5	6a 13 			push	OFFSET 19
	*** 0029d7	9a 00 00 00 00 		call	FAR PTR _Set_Video_Mode
	*** 0029dc	83 c4 02 		add	sp,OFFSET 2
; ; ; ; ; Line 3120
	*** 0029df	68 c8 00 		push	OFFSET 200
	*** 0029e2	9a 00 00 00 00 		call	FAR PTR _Create_Double_Buffer
	*** 0029e7	83 c4 02 		add	sp,OFFSET 2
	*** 0029ea	3d 00 00 		cmp	ax,OFFSET 0
	*** 0029ed	74 03 e9 00 00 		jne	L01621
; ; Line 3121
; ; Line 3122
	*** 0029f2	68 c4 07 		push	OFFSET L01622
	*** 0029f5	9a 00 00 00 00 		call	FAR PTR _printf
	*** 0029fa	83 c4 02 		add	sp,OFFSET 2
; ; ; Line 3124
; ; ; ; ; Line 3128
					L01621:
	*** 0029fd	c7 46 aa 00 00 		mov	WORD PTR -86[bp],OFFSET 0
	*** 002a02	e9 00 00 		jmp	L01626
					L01623:
; ; Line 3129
	*** 002a05	b8 08 00 		mov	ax,OFFSET 8
	*** 002a08	99 			cwd
	*** 002a09	89 46 a0 		mov	WORD PTR -96[bp],ax
	*** 002a0c	89 56 a2 		mov	WORD PTR -94[bp],dx
	*** 002a0f	9b db 46 a0 		fldi	DWORD PTR -96[bp]
	*** 002a13	9b db 7e 96 		fstp	TBYTE PTR -106[bp]
	*** 002a17	83 ec 08 		sub	sp,OFFSET 8
	*** 002a1c	8b 46 aa 		mov	ax,WORD PTR -86[bp]
	*** 002a1f	99 			cwd
	*** 002a20	89 46 8e 		mov	WORD PTR -114[bp],ax
	*** 002a23	89 56 90 		mov	WORD PTR -112[bp],dx
	*** 002a26	9b db 46 8e 		fldi	DWORD PTR -114[bp]
	*** 002a2a	9b dd 06 00 00 		fld	QWORD PTR con0
	*** 002a2f	9b de c9 		fmulp	ST(1),ST(0)
	*** 002a32	b8 b4 00 		mov	ax,OFFSET 180
	*** 002a35	99 			cwd
	*** 002a36	89 46 86 		mov	WORD PTR -122[bp],ax
	*** 002a39	89 56 88 		mov	WORD PTR -120[bp],dx
	*** 002a3c	9b db 46 86 		fldi	DWORD PTR -122[bp]
	*** 002a40	9b de f9 		fdivp	ST(1),ST(0)
	*** 002a43	8b dc 			mov	bx,sp
	*** 002a45	9b dd 1f 		fstp	QWORD PTR ss:[bx]
	*** 002a48	9a 00 00 00 00 		call	FAR PTR _cos
	*** 002a4f	83 c4 08 		add	sp,OFFSET 8
	*** 002a52	9b db 6e 96 		fld	TBYTE PTR -106[bp]
	*** 002a56	8b d8 			mov	bx,ax
	*** 002a5a	9b dc 0f 		fmul	ST(0),QWORD PTR [bx]
	*** 002a5d	9a 00 00 00 00 		call	FAR PTR __aFftol
	*** 002a62	8b 5e aa 		mov	bx,WORD PTR -86[bp]
	*** 002a65	d1 e3 			shl	bx,OFFSET 1
	*** 002a67	89 87 00 00 		mov	WORD PTR _cos_look[bx],ax
					L01624:
	*** 002a6b	83 46 aa 01 		add	WORD PTR -86[bp],OFFSET 1
					L01626:
	*** 002a6f	81 7e aa 40 01 		cmp	WORD PTR -86[bp],OFFSET 320
	*** 002a74	7d 03 e9 8c ff 		jl	L01623
					L01625:
; ; ; ; ; Line 3133
	*** 002a79	6a 00 			push	OFFSET 0
	*** 002a7b	9a 00 00 00 00 		call	FAR PTR _Fill_Double_Buffer
	*** 002a80	83 c4 02 		add	sp,OFFSET 2
; ; ; ; ; Line 3137
	*** 002a83	9a 00 00 00 00 		call	FAR PTR _Load_Background
; ; ; ; ; Line 3141
	*** 002a88	9a 00 00 00 00 		call	FAR PTR _Do_Intro
; ; ; ; ; Line 3145
	*** 002a8d	6a 09 			push	OFFSET 9
	*** 002a8f	9a 00 00 00 00 		call	FAR PTR __dos_getvect
	*** 002a94	83 c4 02 		add	sp,OFFSET 2
	*** 002a97	a3 00 00 		mov	WORD PTR _Old_Isr,ax
	*** 002a9a	89 16 02 00 		mov	WORD PTR _Old_Isr+2,dx
; ; ; Line 3147
	*** 002a9e	68 00 00 		push	SEG _New_Key_Int
	*** 002aa1	68 00 00 		push	OFFSET _New_Key_Int
	*** 002aa4	6a 09 			push	OFFSET 9
	*** 002aa6	9a 00 00 00 00 		call	FAR PTR __dos_setvect
	*** 002aab	83 c4 06 		add	sp,OFFSET 6
; ; ; ; ; Line 3151
	*** 002aae	9a 00 00 00 00 		call	FAR PTR _Load_Player
; ; ; ; ; Line 3155
	*** 002ab3	9a 00 00 00 00 		call	FAR PTR _Load_Mother
; ; ; ; ; Line 3159
	*** 002ab8	9a 00 00 00 00 		call	FAR PTR _Load_Explosions
; ; ; ; ; Line 3163
	*** 002abd	9a 00 00 00 00 		call	FAR PTR _Load_Mechs
; ; ; ; ; Line 3167
	*** 002ac2	c7 06 00 00 2e 00 	mov	WORD PTR _waves,OFFSET _wave_0
; ; Line 3168
	*** 002ac8	c7 06 02 00 74 00 	mov	WORD PTR _waves+2,OFFSET _wave_1
; ; Line 3169
	*** 002ace	c7 06 04 00 ba 00 	mov	WORD PTR _waves+4,OFFSET _wave_2
; ; Line 3170
	*** 002ad4	c7 06 06 00 00 01 	mov	WORD PTR _waves+6,OFFSET _wave_3
; ; Line 3171
	*** 002ada	c7 06 08 00 46 01 	mov	WORD PTR _waves+8,OFFSET _wave_4
; ; Line 3172
	*** 002ae0	c7 06 0a 00 8c 01 	mov	WORD PTR _waves+10,OFFSET _wave_5
; ; Line 3173
	*** 002ae6	c7 06 0c 00 d2 01 	mov	WORD PTR _waves+12,OFFSET _wave_6
; ; Line 3174
	*** 002aec	c7 06 0e 00 18 02 	mov	WORD PTR _waves+14,OFFSET _wave_7
; ; Line 3175
	*** 002af2	c7 06 10 00 5e 02 	mov	WORD PTR _waves+16,OFFSET _wave_8
; ; Line 3176
	*** 002af8	c7 06 12 00 a4 02 	mov	WORD PTR _waves+18,OFFSET _wave_9
; ; Line 3177
	*** 002afe	c7 06 14 00 ea 02 	mov	WORD PTR _waves+20,OFFSET _wave_10
; ; Line 3178
	*** 002b04	c7 06 16 00 30 03 	mov	WORD PTR _waves+22,OFFSET _wave_11
; ; Line 3179
	*** 002b0a	c7 06 18 00 76 03 	mov	WORD PTR _waves+24,OFFSET _wave_12
; ; Line 3180
	*** 002b10	c7 06 1a 00 bc 03 	mov	WORD PTR _waves+26,OFFSET _wave_13
; ; Line 3181
	*** 002b16	c7 06 1c 00 02 04 	mov	WORD PTR _waves+28,OFFSET _wave_14
; ; ; Line 3183
	*** 002b1c	8b 1e 2a 00 		mov	bx,WORD PTR _wave_number
	*** 002b20	d1 e3 			shl	bx,OFFSET 1
	*** 002b22	8b 87 00 00 		mov	ax,WORD PTR _waves[bx]
	*** 002b26	a3 00 00 		mov	WORD PTR _current_wave,ax
; ; ; ; ; Line 3187
	*** 002b29	9a 00 00 00 00 		call	FAR PTR _Init_Mechs
; ; ; ; ; Line 3191
	*** 002b2e	9a 00 00 00 00 		call	FAR PTR _Init_Stars
; ; ; ; ; Line 3195
	*** 002b33	9a 00 00 00 00 		call	FAR PTR _Init_Explosions
; ; ; ; ; Line 3199
	*** 002b38	9a 00 00 00 00 		call	FAR PTR _Start_Wave
; ; ; ; ; Line 3203
	*** 002b3d	9a 00 00 00 00 		call	FAR PTR _Behind_Mechs
; ; ; ; ; Line 3207
	*** 002b42	68 00 00 		push	OFFSET _player
	*** 002b45	9a 00 00 00 00 		call	FAR PTR _Behind_Sprite_DB
	*** 002b4a	83 c4 02 		add	sp,OFFSET 2
; ; ; ; ; Line 3211
	*** 002b4d	9a 00 00 00 00 		call	FAR PTR _Behind_Stars
; ; ; ; ; Line 3215
	*** 002b52	9a 00 00 00 00 		call	FAR PTR _Display_Instruments
; ; ; ; ; Line 3219
	*** 002b57	e9 00 00 		jmp	L01630
					L01627:
; ; Line 3220
; ; ; ; ; Line 3224
	*** 002b5a	c7 46 fc 00 00 		mov	WORD PTR -4[bp],OFFSET 0
; ; ; ; ; Line 3228
	*** 002b5f	68 00 00 		push	OFFSET _player
	*** 002b62	9a 00 00 00 00 		call	FAR PTR _Erase_Sprite_DB
	*** 002b67	83 c4 02 		add	sp,OFFSET 2
; ; ; Line 3230
	*** 002b6a	9a 00 00 00 00 		call	FAR PTR _Erase_Missiles
; ; ; Line 3232
	*** 002b6f	9a 00 00 00 00 		call	FAR PTR _Erase_Stars
; ; ; Line 3234
	*** 002b74	9a 00 00 00 00 		call	FAR PTR _Erase_Mother
; ; ; Line 3236
	*** 002b79	9a 00 00 00 00 		call	FAR PTR _Erase_Mechs
; ; ; Line 3238
	*** 002b7e	9a 00 00 00 00 		call	FAR PTR _Erase_PDeath
; ; ; Line 3240
	*** 002b83	9a 00 00 00 00 		call	FAR PTR _Erase_Explosions
; ; ; Line 3242
	*** 002b88	9a 00 00 00 00 		call	FAR PTR _Erase_Instruments
; ; ; ; ; Line 3246
	*** 002b8d	83 3e 78 00 01 		cmp	WORD PTR _player+120,OFFSET 1
	*** 002b92	74 03 e9 00 00 		jne	L01631
; ; Line 3247
; ; ; ; ; Line 3251
	*** 002b97	83 3e 04 00 00 		cmp	WORD PTR _key_table+4,OFFSET 0
	*** 002b9c	75 03 e9 00 00 		je	L01632
; ; Line 3252
; ; Line 3253
	*** 002ba1	83 06 00 00 06 		add	WORD PTR _player,OFFSET 6
; ; ; Line 3255
	*** 002ba6	a1 00 00 		mov	ax,WORD PTR _player
	*** 002ba9	3d 2c 01 		cmp	ax,OFFSET 300
	*** 002bac	77 03 e9 00 00 		jbe	L01633
; ; Line 3256
	*** 002bb1	c7 06 00 00 2c 01 	mov	WORD PTR _player,OFFSET 300
; ; ; Line 3258
					L01633:
; ; ; Line 3260
	*** 002bb7	e9 00 00 		jmp	L01634
					L01632:
; Line 3260
; ; Line 3261
	*** 002bba	83 3e 06 00 00 		cmp	WORD PTR _key_table+6,OFFSET 0
	*** 002bbf	75 03 e9 00 00 		je	L01635
; ; Line 3262
; ; ; Line 3264
	*** 002bc4	83 2e 00 00 06 		sub	WORD PTR _player,OFFSET 6
; ; ; Line 3266
	*** 002bc9	83 3e 00 00 00 		cmp	WORD PTR _player,OFFSET 0
	*** 002bce	7c 03 e9 00 00 		jge	L01636
; ; Line 3267
	*** 002bd3	c7 06 00 00 00 00 	mov	WORD PTR _player,OFFSET 0
; ; ; Line 3269
					L01636:
; ; ; ; Line 3272
					L01635:
					L01634:
	*** 002bd9	83 3e 02 00 00 		cmp	WORD PTR _key_table+2,OFFSET 0
	*** 002bde	75 03 e9 00 00 		je	L01637
; ; Line 3273
; ; Line 3274
	*** 002be3	c7 46 a8 01 00 		mov	WORD PTR -88[bp],OFFSET 1
; ; ; Line 3276
; ; ; ; Line 3279
					L01637:
	*** 002be8	83 3e 00 00 00 		cmp	WORD PTR _key_table,OFFSET 0
	*** 002bed	75 03 e9 00 00 		je	L01638
; ; Line 3280
; ; Line 3281
	*** 002bf2	83 3e 22 00 00 		cmp	WORD PTR _player_gun_state,OFFSET 0
	*** 002bf7	74 03 e9 00 00 		jne	L01639
	*** 002bfc	83 3e 24 00 00 		cmp	WORD PTR _player_gun_state+2,OFFSET 0
	*** 002c01	74 03 e9 00 00 		jne	L01639
	*** 002c06	83 3e 1c 00 00 		cmp	WORD PTR _player_energy+2,OFFSET 0
	*** 002c0b	7d 03 e9 00 00 		jl	L01639
	*** 002c10	7e 03 e9 00 00 		jg	L01720
	*** 002c15	83 3e 1a 00 00 		cmp	WORD PTR _player_energy,OFFSET 0
	*** 002c1a	77 03 e9 00 00 		jbe	L01639
					L01720:
; ; Line 3282
; ; ; Line 3284
	*** 002c1f	c7 06 22 00 01 00 	mov	WORD PTR _player_gun_state,OFFSET 1
	*** 002c25	c7 06 24 00 00 00 	mov	WORD PTR _player_gun_state+2,OFFSET 0
; ; Line 3285
	*** 002c2b	c7 46 fc 01 00 		mov	WORD PTR -4[bp],OFFSET 1
; ; ; Line 3287
	*** 002c30	9a 00 00 00 00 		call	FAR PTR _rand
	*** 002c35	b9 02 00 		mov	cx,OFFSET 2
	*** 002c38	99 			cwd
	*** 002c39	f7 f9 			idiv	cx
	*** 002c3b	8b c2 			mov	ax,dx
	*** 002c3d	05 05 00 		add	ax,OFFSET 5
	*** 002c40	99 			cwd
	*** 002c41	29 06 1a 00 		sub	WORD PTR _player_energy,ax
	*** 002c45	19 16 1c 00 		sbb	WORD PTR _player_energy+2,dx
; ; ; Line 3289
	*** 002c49	83 3e 1c 00 ff 		cmp	WORD PTR _player_energy+2,OFFSET -1
	*** 002c4e	7e 03 e9 00 00 		jg	L01640
	*** 002c53	7d 03 e9 00 00 		jl	L01721
	*** 002c58	83 3e 1a 00 9c 		cmp	WORD PTR _player_energy,OFFSET -100
	*** 002c5d	72 03 e9 00 00 		jae	L01640
					L01721:
; ; Line 3290
	*** 002c62	c7 06 1a 00 9c ff 	mov	WORD PTR _player_energy,OFFSET -100
	*** 002c68	c7 06 1c 00 ff ff 	mov	WORD PTR _player_energy+2,OFFSET -1
; ; ; Line 3292
					L01640:
; ; ; Line 3294
					L01639:
; ; ; Line 3296
					L01638:
; ; ; ; ; Line 3300
					L01631:
	*** 002c6e	9a 00 00 00 00 		call	FAR PTR _Move_Missiles
; ; ; Line 3302
	*** 002c73	9a 00 00 00 00 		call	FAR PTR _Move_Mother
; ; ; Line 3304
	*** 002c78	9a 00 00 00 00 		call	FAR PTR _Move_Stars
; ; ; Line 3306
	*** 002c7d	9a 00 00 00 00 		call	FAR PTR _Move_Mechs
; ; ; Line 3308
	*** 002c82	9a 00 00 00 00 		call	FAR PTR _Animate_PDeath
; ; ; Line 3310
	*** 002c87	9a 00 00 00 00 		call	FAR PTR _Animate_Explosions
; ; ; ; ; ; ; Line 3316
	*** 002c8c	83 7e fc 00 		cmp	WORD PTR -4[bp],OFFSET 0
	*** 002c90	75 03 e9 00 00 		je	L01641
; ; Line 3317
; ; Line 3318
; ; Line 3319
; ; Line 3320
; ; Line 3321
; ; Line 3322
; ; Line 3323
; ; Line 3324
	*** 002c95	6a 01 			push	OFFSET 1
	*** 002c97	6a 0c 			push	OFFSET 12
	*** 002c99	6a f8 			push	OFFSET -8
	*** 002c9b	6a 00 			push	OFFSET 0
	*** 002c9d	a1 02 00 		mov	ax,WORD PTR _player+2
	*** 002ca0	05 04 00 		add	ax,OFFSET 4
	*** 002ca3	50 			push	ax
	*** 002ca4	a1 00 00 		mov	ax,WORD PTR _player
	*** 002ca7	05 02 00 		add	ax,OFFSET 2
	*** 002caa	50 			push	ax
	*** 002cab	68 00 00 		push	OFFSET _player
	*** 002cae	9a 00 00 00 00 		call	FAR PTR _Start_Missile
	*** 002cb3	83 c4 0e 		add	sp,OFFSET 14
; ; ; Line 3326
; ; Line 3327
; ; Line 3328
; ; Line 3329
; ; Line 3330
; ; Line 3331
; ; Line 3332
	*** 002cb6	6a 01 			push	OFFSET 1
	*** 002cb8	6a 0c 			push	OFFSET 12
	*** 002cba	6a f8 			push	OFFSET -8
	*** 002cbc	6a 00 			push	OFFSET 0
	*** 002cbe	a1 02 00 		mov	ax,WORD PTR _player+2
	*** 002cc1	05 04 00 		add	ax,OFFSET 4
	*** 002cc4	50 			push	ax
	*** 002cc5	a1 00 00 		mov	ax,WORD PTR _player
	*** 002cc8	05 0f 00 		add	ax,OFFSET 15
	*** 002ccb	50 			push	ax
	*** 002ccc	68 00 00 		push	OFFSET _player
	*** 002ccf	9a 00 00 00 00 		call	FAR PTR _Start_Missile
	*** 002cd4	83 c4 0e 		add	sp,OFFSET 14
; ; ; Line 3334
	*** 002cd7	6a 00 			push	OFFSET 0
	*** 002cd9	9a 00 00 00 00 		call	FAR PTR _Play_Sound
	*** 002cde	83 c4 02 		add	sp,OFFSET 2
; ; ; Line 3336
; ; ; ; ; Line 3340
					L01641:
	*** 002ce1	9a 00 00 00 00 		call	FAR PTR _Control_Mother
; ; ; ; ; Line 3344
	*** 002ce6	a1 28 00 		mov	ax,WORD PTR _num_mechs
	*** 002ce9	39 06 2c 00 		cmp	WORD PTR _mechs_killed,ax
	*** 002ced	74 03 e9 00 00 		jne	L01642
; ; Line 3345
; ; ; ; Line 3348
	*** 002cf2	83 06 2a 00 01 		add	WORD PTR _wave_number,OFFSET 1
; ; ; Line 3350
	*** 002cf7	9a 00 00 00 00 		call	FAR PTR _Start_Wave
; ; ; ; ; Line 3354
	*** 002cfc	c7 06 2c 00 00 00 	mov	WORD PTR _mechs_killed,OFFSET 0
; ; ; Line 3356
; ; ; ; ; Line 3360
					L01642:
	*** 002d02	68 00 00 		push	OFFSET _player
	*** 002d05	9a 00 00 00 00 		call	FAR PTR _Behind_Sprite_DB
	*** 002d0a	83 c4 02 		add	sp,OFFSET 2
; ; ; Line 3362
	*** 002d0d	9a 00 00 00 00 		call	FAR PTR _Behind_Missiles
; ; ; Line 3364
	*** 002d12	9a 00 00 00 00 		call	FAR PTR _Behind_Mother
; ; ; Line 3366
	*** 002d17	9a 00 00 00 00 		call	FAR PTR _Behind_Mechs
; ; ; Line 3368
	*** 002d1c	9a 00 00 00 00 		call	FAR PTR _Behind_Stars
; ; ; Line 3370
	*** 002d21	9a 00 00 00 00 		call	FAR PTR _Behind_Explosions
; ; ; Line 3372
	*** 002d26	9a 00 00 00 00 		call	FAR PTR _Behind_PDeath
; ; ; ; ; ; ; Line 3378
	*** 002d2b	83 3e 78 00 01 		cmp	WORD PTR _player+120,OFFSET 1
	*** 002d30	74 03 e9 00 00 		jne	L01643
; ; Line 3379
; ; Line 3380
	*** 002d35	83 3e 22 00 00 		cmp	WORD PTR _player_gun_state,OFFSET 0
	*** 002d3a	74 03 e9 00 00 		jne	L01644
	*** 002d3f	83 3e 24 00 00 		cmp	WORD PTR _player_gun_state+2,OFFSET 0
	*** 002d44	74 03 e9 00 00 		jne	L01644
; ; Line 3381
; ; ; Line 3383
	*** 002d49	9a 00 00 00 00 		call	FAR PTR _rand
	*** 002d4e	b9 02 00 		mov	cx,OFFSET 2
	*** 002d51	99 			cwd
	*** 002d52	f7 f9 			idiv	cx
	*** 002d54	89 16 74 00 		mov	WORD PTR _player+116,dx
; ; ; Line 3385
	*** 002d58	83 06 1a 00 01 		add	WORD PTR _player_energy,OFFSET 1
	*** 002d5d	83 16 1c 00 00 		adc	WORD PTR _player_energy+2,OFFSET 0
	*** 002d62	a1 1a 00 		mov	ax,WORD PTR _player_energy
	*** 002d65	8b 16 1c 00 		mov	dx,WORD PTR _player_energy+2
	*** 002d69	83 fa 00 		cmp	dx,OFFSET 0
	*** 002d6c	7d 03 e9 00 00 		jl	L01645
	*** 002d71	7e 03 e9 00 00 		jg	L01722
	*** 002d76	3d 64 00 		cmp	ax,OFFSET 100
	*** 002d79	77 03 e9 00 00 		jbe	L01645
					L01722:
	*** 002d7e	c7 06 1a 00 64 00 	mov	WORD PTR _player_energy,OFFSET 100
	*** 002d84	c7 06 1c 00 00 00 	mov	WORD PTR _player_energy+2,OFFSET 0
; ; ; ; Line 3388
					L01645:
; ; Line 3389
	*** 002d8a	e9 00 00 		jmp	L01646
					L01644:
; Line 3389
; ; Line 3390
; ; Line 3391
	*** 002d8d	83 06 74 00 01 		add	WORD PTR _player+116,OFFSET 1
	*** 002d92	a1 74 00 		mov	ax,WORD PTR _player+116
	*** 002d95	3d 04 00 		cmp	ax,OFFSET 4
	*** 002d98	7f 03 e9 00 00 		jle	L01647
; ; Line 3392
; ; Line 3393
	*** 002d9d	c7 06 74 00 00 00 	mov	WORD PTR _player+116,OFFSET 0
; ; Line 3394
	*** 002da3	c7 06 22 00 00 00 	mov	WORD PTR _player_gun_state,OFFSET 0
	*** 002da9	c7 06 24 00 00 00 	mov	WORD PTR _player_gun_state+2,OFFSET 0
; ; Line 3395
; ; ; Line 3397
					L01647:
					L01646:
; ; ; Line 3399
; ; Line 3400
	*** 002daf	e9 00 00 		jmp	L01648
					L01643:
; Line 3400
; ; Line 3401
	*** 002db2	c7 06 74 00 05 00 	mov	WORD PTR _player+116,OFFSET 5
					L01648:
; ; ; ; ; Line 3405
	*** 002db8	68 00 00 		push	OFFSET _player
	*** 002dbb	9a 00 00 00 00 		call	FAR PTR _Draw_Sprite_DB
	*** 002dc0	83 c4 02 		add	sp,OFFSET 2
; ; ; Line 3407
	*** 002dc3	9a 00 00 00 00 		call	FAR PTR _Draw_Missiles
; ; ; Line 3409
	*** 002dc8	9a 00 00 00 00 		call	FAR PTR _Draw_Stars
; ; ; Line 3411
	*** 002dcd	9a 00 00 00 00 		call	FAR PTR _Draw_Explosions
; ; ; Line 3413
	*** 002dd2	9a 00 00 00 00 		call	FAR PTR _Draw_Mother
; ; ; Line 3415
	*** 002dd7	9a 00 00 00 00 		call	FAR PTR _Draw_Mechs
; ; ; Line 3417
	*** 002ddc	9a 00 00 00 00 		call	FAR PTR _Draw_PDeath
; ; ; Line 3419
	*** 002de1	9a 00 00 00 00 		call	FAR PTR _Display_Instruments
; ; ; Line 3421
	*** 002de6	9a 00 00 00 00 		call	FAR PTR _Blink_Lights
; ; ; ; ; Line 3425
	*** 002deb	ff 36 02 00 		push	WORD PTR _double_buffer+2
	*** 002def	ff 36 00 00 		push	WORD PTR _double_buffer
	*** 002df3	9a 00 00 00 00 		call	FAR PTR _Show_Double_Buffer
	*** 002df8	83 c4 04 		add	sp,OFFSET 4
; ; ; ; ; Line 3429
	*** 002dfb	83 3e 16 00 00 		cmp	WORD PTR _player_ships,OFFSET 0
	*** 002e00	74 03 e9 00 00 		jne	L01649
	*** 002e05	83 3e 18 00 00 		cmp	WORD PTR _player_ships+2,OFFSET 0
	*** 002e0a	74 03 e9 00 00 		jne	L01649
	*** 002e0f	83 3e 0c 00 78 		cmp	WORD PTR _player+12,OFFSET 120
	*** 002e14	7d 03 e9 00 00 		jl	L01649
; ; Line 3430
; ; ; Line 3432
	*** 002e19	68 f0 07 		push	OFFSET L01650
	*** 002e1c	8d 46 ac 		lea	ax,WORD PTR -84[bp]
	*** 002e1f	50 			push	ax
	*** 002e20	9a 00 00 00 00 		call	FAR PTR _sprintf
	*** 002e25	83 c4 04 		add	sp,OFFSET 4
; ; ; Line 3434
	*** 002e28	6a 01 			push	OFFSET 1
	*** 002e2a	8d 46 ac 		lea	ax,WORD PTR -84[bp]
	*** 002e2d	50 			push	ax
	*** 002e2e	6a 04 			push	OFFSET 4
	*** 002e30	6a 3c 			push	OFFSET 60
	*** 002e32	6a 60 			push	OFFSET 96
	*** 002e34	9a 00 00 00 00 		call	FAR PTR _Blit_String_G
	*** 002e39	83 c4 0a 		add	sp,OFFSET 10
; ; ; Line 3436
	*** 002e3c	ff 36 20 00 		push	WORD PTR _player_score+2
	*** 002e40	ff 36 1e 00 		push	WORD PTR _player_score
	*** 002e44	68 01 08 		push	OFFSET L01651
	*** 002e47	8d 46 ac 		lea	ax,WORD PTR -84[bp]
	*** 002e4a	50 			push	ax
	*** 002e4b	9a 00 00 00 00 		call	FAR PTR _sprintf
	*** 002e50	83 c4 08 		add	sp,OFFSET 8
; ; ; Line 3438
	*** 002e53	6a 01 			push	OFFSET 1
	*** 002e55	8d 46 ac 		lea	ax,WORD PTR -84[bp]
	*** 002e58	50 			push	ax
	*** 002e59	6a 01 			push	OFFSET 1
	*** 002e5b	6a 50 			push	OFFSET 80
	*** 002e5d	6a 60 			push	OFFSET 96
	*** 002e5f	9a 00 00 00 00 		call	FAR PTR _Blit_String_G
	*** 002e64	83 c4 0a 		add	sp,OFFSET 10
; ; ; Line 3440
	*** 002e67	c7 46 a8 01 00 		mov	WORD PTR -88[bp],OFFSET 1
; ; ; Line 3442
; ; ; ; ; Line 3446
	*** 002e6c	e9 00 00 		jmp	L01652
					L01649:
; Line 3446
; ; Line 3447
; ; Line 3448
	*** 002e6f	83 3e 26 00 01 		cmp	WORD PTR _energize_state,OFFSET 1
	*** 002e74	74 03 e9 00 00 		jne	L01653
; ; Line 3449
; ; ; Line 3451
	*** 002e79	a1 2a 00 		mov	ax,WORD PTR _wave_number
	*** 002e7c	05 01 00 		add	ax,OFFSET 1
	*** 002e7f	50 			push	ax
	*** 002e80	68 11 08 		push	OFFSET L01654
	*** 002e83	8d 46 ac 		lea	ax,WORD PTR -84[bp]
	*** 002e86	50 			push	ax
	*** 002e87	9a 00 00 00 00 		call	FAR PTR _sprintf
	*** 002e8c	83 c4 06 		add	sp,OFFSET 6
; ; ; Line 3453
	*** 002e8f	6a 01 			push	OFFSET 1
	*** 002e91	8d 46 ac 		lea	ax,WORD PTR -84[bp]
	*** 002e94	50 			push	ax
	*** 002e95	6a 0a 			push	OFFSET 10
	*** 002e97	6a 3c 			push	OFFSET 60
	*** 002e99	6a 78 			push	OFFSET 120
	*** 002e9b	9a 00 00 00 00 		call	FAR PTR _Blit_String_G
	*** 002ea0	83 c4 0a 		add	sp,OFFSET 10
; ; ; Line 3455
; ; Line 3456
	*** 002ea3	e9 00 00 		jmp	L01655
					L01653:
; Line 3456
; ; Line 3457
	*** 002ea6	83 3e 26 00 02 		cmp	WORD PTR _energize_state,OFFSET 2
	*** 002eab	74 03 e9 00 00 		jne	L01656
; ; Line 3458
; ; ; ; ; Line 3462
	*** 002eb0	6a 00 			push	OFFSET 0
	*** 002eb2	68 1d 08 		push	OFFSET L01657
	*** 002eb5	6a 00 			push	OFFSET 0
	*** 002eb7	6a 3c 			push	OFFSET 60
	*** 002eb9	6a 78 			push	OFFSET 120
	*** 002ebb	9a 00 00 00 00 		call	FAR PTR _Blit_String_G
	*** 002ec0	83 c4 0a 		add	sp,OFFSET 10
; ; ; ; ; Line 3466
	*** 002ec3	83 06 26 00 01 		add	WORD PTR _energize_state,OFFSET 1
; ; ; Line 3468
; ; ; Line 3470
					L01656:
					L01655:
					L01652:
; ; ; ; ; ; ; ; Line 3477
	*** 002ec8	83 7e 06 01 		cmp	WORD PTR 6[bp],OFFSET 1
	*** 002ecc	7f 03 e9 00 00 		jle	L01658
; ; Line 3478
	*** 002ed1	6a 01 			push	OFFSET 1
	*** 002ed3	9a 00 00 00 00 		call	FAR PTR _Delay
	*** 002ed8	83 c4 02 		add	sp,OFFSET 2
; ; Line 3479
	*** 002edb	e9 00 00 		jmp	L01659
					L01658:
; Line 3479
; ; Line 3480
	*** 002ede	9a 00 00 00 00 		call	FAR PTR _Wait_For_Vsync
					L01659:
; ; ; ; ; Line 3484
	*** 002ee3	83 06 08 00 01 		add	WORD PTR _game_clock,OFFSET 1
	*** 002ee8	83 16 0a 00 00 		adc	WORD PTR _game_clock+2,OFFSET 0
; ; ; Line 3486
					L01628:
; Line 3486
					L01630:
	*** 002eed	83 7e a8 00 		cmp	WORD PTR -88[bp],OFFSET 0
	*** 002ef1	75 03 e9 64 fc 		je	L01627
					L01629:
; ; ; ; ; Line 3490
	*** 002ef6	6a 07 			push	OFFSET 7
	*** 002ef8	9a 00 00 00 00 		call	FAR PTR _Play_Sound
	*** 002efd	83 c4 02 		add	sp,OFFSET 2
; ; ; Line 3492
	*** 002f00	6a 64 			push	OFFSET 100
	*** 002f02	9a 00 00 00 00 		call	FAR PTR _Delay
	*** 002f07	83 c4 02 		add	sp,OFFSET 2
; ; ; ; ; Line 3496
	*** 002f0a	9a 00 00 00 00 		call	FAR PTR _Fade_Lights
; ; ; ; ; Line 3500
	*** 002f0f	6a 03 			push	OFFSET 3
	*** 002f11	9a 00 00 00 00 		call	FAR PTR _Set_Video_Mode
	*** 002f16	83 c4 02 		add	sp,OFFSET 2
; ; ; ; ; Line 3504
	*** 002f19	9a 00 00 00 00 		call	FAR PTR _Delete_Mechs
; ; ; ; ; Line 3508
	*** 002f1e	9a 00 00 00 00 		call	FAR PTR _Delete_Double_Buffer
; ; ; ; ; Line 3512
	*** 002f23	ff 36 02 00 		push	WORD PTR _Old_Isr+2
	*** 002f27	ff 36 00 00 		push	WORD PTR _Old_Isr
	*** 002f2b	6a 09 			push	OFFSET 9
	*** 002f2d	9a 00 00 00 00 		call	FAR PTR __dos_setvect
	*** 002f32	83 c4 06 		add	sp,OFFSET 6
; ; ; ; ; Line 3516
	*** 002f35	9a 00 00 00 00 		call	FAR PTR _Close_Sound_System
; ; ; ; ; Line 3520
; Line 3520
					L01615:
	*** 002f3a	5f 			pop	di
	*** 002f3b	5e 			pop	si
	*** 002f3c	c9 			leave
	*** 002f3d	cb 			ret	OFFSET 0
Local Size: 122
; Line 0
