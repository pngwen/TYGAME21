; File scale.c
; // I N C L U D E S ////////////////////////////////////////////////////////////
; #include <io.h>
; #include <conio.h>
; #include <stdio.h>
; #include <stdlib.h>
; #include <dos.h>
; #include <bios.h>
; #include <fcntl.h>
; #include <memory.h>
; #include <malloc.h>
; #include <math.h>
; #include <string.h>
; 
; #include <graph.h>   // microsoft's stuff if we need it
; 
; #include "graph3.h"  // the module from day 3
; #include "graph4.h"  // the module from day 4
; #include "better4.h" // my better functions
; 
; 
; 
; // F U N C T I O N S //////////////////////////////////////////////////////////
; void main()
; {
; Line 24
					_main:
	*** 000000	c8 00 00 00 		enter	OFFSET L00941,OFFSET 0
	*** 000004	56 			push	si
	*** 000005	57 			push	di
; tank = ff7c
; dir = ff7a
; index = ff78
; scaled_tank = fcee
; objects_pcx = f96a
; sprite tank;
; Line 25
; pcx_picture objects_pcx;
; Line 26
; int index;
; Line 27
; int dir=1;
; Line 28
	*** 000006	c7 86 7a ff 01 00 	mov	WORD PTR -134[bp],OFFSET 1
; sprite scaled_tank[5];
; Line 29
; 
; // load the .PCX file with the tank cells
; 
; // load in the players imagery
; PCX_Init((pcx_picture_ptr)&objects_pcx);
; Line 34
	*** 00000c	8d 86 6a f9 		lea	ax,WORD PTR -1686[bp]
	*** 000010	50 			push	ax
	*** 000011	9a 00 00 00 00 		call	FAR PTR _PCX_Init
	*** 000016	83 c4 02 		add	sp,OFFSET 2
; PCX_Load("tanks.pcx", (pcx_picture_ptr)&objects_pcx,0);
; Line 35
	*** 000019	6a 00 			push	OFFSET 0
	*** 00001b	8d 86 6a f9 		lea	ax,WORD PTR -1686[bp]
	*** 00001f	50 			push	ax
	*** 000020	68 00 00 		push	OFFSET L00926
	*** 000023	9a 00 00 00 00 		call	FAR PTR _PCX_Load
	*** 000028	83 c4 06 		add	sp,OFFSET 6
; 
; 
; // initialize sprite size and data structure
; sprite_width  = 16;
; Line 39
	*** 00002b	c7 06 00 00 10 00 	mov	WORD PTR _sprite_width,OFFSET 16
; sprite_height = 16;
; Line 40
	*** 000031	c7 06 00 00 10 00 	mov	WORD PTR _sprite_height,OFFSET 16
; 
; // place tank (player) in center of screen
; Sprite_Init((sprite_ptr)&tank,152,91,0,0,0,0);
; Line 43
	*** 000037	6a 00 			push	OFFSET 0
	*** 000039	6a 00 			push	OFFSET 0
	*** 00003b	6a 00 			push	OFFSET 0
	*** 00003d	6a 00 			push	OFFSET 0
	*** 00003f	6a 5b 			push	OFFSET 91
	*** 000041	68 98 00 		push	OFFSET 152
	*** 000044	8d 86 7c ff 		lea	ax,WORD PTR -132[bp]
	*** 000048	50 			push	ax
	*** 000049	9a 00 00 00 00 		call	FAR PTR _Sprite_Init
	*** 00004e	83 c4 0e 		add	sp,OFFSET 14
; 
; // grab all 16 images from the tanks pcx picture
; for (index=0; index<16; index++)
; Line 46
	*** 000051	c7 86 78 ff 00 00 	mov	WORD PTR -136[bp],OFFSET 0
	*** 000057	e9 00 00 		jmp	L00930
					L00927:
;     {
; Line 47
; 
;     PCX_Grab_Bitmap((pcx_picture_ptr)&objects_pcx,(sprite_ptr)&tank,index,index,0);
; Line 49
	*** 00005a	6a 00 			push	OFFSET 0
	*** 00005c	ff b6 78 ff 		push	WORD PTR -136[bp]
	*** 000060	ff b6 78 ff 		push	WORD PTR -136[bp]
	*** 000064	8d 86 7c ff 		lea	ax,WORD PTR -132[bp]
	*** 000068	50 			push	ax
	*** 000069	8d 86 6a f9 		lea	ax,WORD PTR -1686[bp]
	*** 00006d	50 			push	ax
	*** 00006e	9a 00 00 00 00 		call	FAR PTR _PCX_Grab_Bitmap
	*** 000073	83 c4 0a 		add	sp,OFFSET 10
; 
;     } // end for index
; Line 51
					L00928:
; Line 51
	*** 000076	83 86 78 ff 01 		add	WORD PTR -136[bp],OFFSET 1
					L00930:
	*** 00007b	83 be 78 ff 10 		cmp	WORD PTR -136[bp],OFFSET 16
	*** 000080	7d 03 e9 d5 ff 		jl	L00927
					L00929:
; 
; //get rid of the PCX
; PCX_Delete((pcx_picture_ptr)&objects_pcx);
; Line 54
	*** 000085	8d 86 6a f9 		lea	ax,WORD PTR -1686[bp]
	*** 000089	50 			push	ax
	*** 00008a	9a 00 00 00 00 		call	FAR PTR _PCX_Delete
	*** 00008f	83 c4 02 		add	sp,OFFSET 2
; 
; //scale the tank at each level
; for(index=0; index<5; index++) {
; Line 57
	*** 000092	c7 86 78 ff 00 00 	mov	WORD PTR -136[bp],OFFSET 0
	*** 000098	e9 00 00 		jmp	L00934
					L00931:
;     Better_Scale_Sprite(scaled_tank+index, &tank, index+1);
; Line 58
	*** 00009b	8b 86 78 ff 		mov	ax,WORD PTR -136[bp]
	*** 00009f	05 01 00 		add	ax,OFFSET 1
	*** 0000a2	50 			push	ax
	*** 0000a3	8d 86 7c ff 		lea	ax,WORD PTR -132[bp]
	*** 0000a7	50 			push	ax
	*** 0000a8	69 86 78 ff 82 00 	_imul3 	ax,WORD PTR -136[bp],OFFSET 130
	*** 0000ae	8d 8e ee fc 		lea	cx,WORD PTR -786[bp]
	*** 0000b2	03 c8 			add	cx,ax
	*** 0000b4	51 			push	cx
	*** 0000b5	9a 00 00 00 00 		call	FAR PTR _Better_Scale_Sprite
	*** 0000ba	83 c4 06 		add	sp,OFFSET 6
; }
; Line 59
					L00932:
; Line 59
	*** 0000bd	83 86 78 ff 01 		add	WORD PTR -136[bp],OFFSET 1
					L00934:
	*** 0000c2	83 be 78 ff 05 		cmp	WORD PTR -136[bp],OFFSET 5
	*** 0000c7	7d 03 e9 cf ff 		jl	L00931
					L00933:
; 
; // set video mode to 320x200 256 color mode
; Set_Video_Mode(VGA256);
; Line 62
	*** 0000cc	6a 13 			push	OFFSET 19
	*** 0000ce	9a 00 00 00 00 		call	FAR PTR _Set_Video_Mode
	*** 0000d3	83 c4 02 		add	sp,OFFSET 2
; 
; Better_Behind_Sprite(scaled_tank);
; Line 64
	*** 0000d6	8d 86 ee fc 		lea	ax,WORD PTR -786[bp]
	*** 0000da	50 			push	ax
	*** 0000db	9a 00 00 00 00 		call	FAR PTR _Better_Behind_Sprite
	*** 0000e0	83 c4 02 		add	sp,OFFSET 2
; index=0;
; Line 65
	*** 0000e3	c7 86 78 ff 00 00 	mov	WORD PTR -136[bp],OFFSET 0
; 
; //wait for keyboard
; while(!kbhit())
; Line 68
					L00936:
	*** 0000e9	9a 00 00 00 00 		call	FAR PTR _kbhit
	*** 0000ee	3d 00 00 		cmp	ax,OFFSET 0
	*** 0000f1	74 03 e9 00 00 		jne	L00937
; {
; Line 69
;     Better_Erase_Sprite(scaled_tank+index);
; Line 70
	*** 0000f6	69 86 78 ff 82 00 	_imul3 	ax,WORD PTR -136[bp],OFFSET 130
	*** 0000fc	8d 8e ee fc 		lea	cx,WORD PTR -786[bp]
	*** 000100	03 c8 			add	cx,ax
	*** 000102	51 			push	cx
	*** 000103	9a 00 00 00 00 		call	FAR PTR _Better_Erase_Sprite
	*** 000108	83 c4 02 		add	sp,OFFSET 2
; 
;     //adjust scale
;     index += dir;
; Line 73
	*** 00010b	8b 86 7a ff 		mov	ax,WORD PTR -134[bp]
	*** 00010f	01 86 78 ff 		add	WORD PTR -136[bp],ax
;     if(index==0 || index == 4) {
; Line 74
	*** 000113	83 be 78 ff 00 		cmp	WORD PTR -136[bp],OFFSET 0
	*** 000118	75 03 e9 00 00 		je	L00940
	*** 00011d	83 be 78 ff 04 		cmp	WORD PTR -136[bp],OFFSET 4
	*** 000122	74 03 e9 00 00 		jne	L00939
					L00940:
; 	dir=-dir;
; Line 75
	*** 000127	8b 86 7a ff 		mov	ax,WORD PTR -134[bp]
	*** 00012b	f7 d8 			neg	ax
	*** 00012d	89 86 7a ff 		mov	WORD PTR -134[bp],ax
;     }
; Line 76
; 
;     Better_Behind_Sprite(scaled_tank+index);
; Line 78
					L00939:
	*** 000131	69 86 78 ff 82 00 	_imul3 	ax,WORD PTR -136[bp],OFFSET 130
	*** 000137	8d 8e ee fc 		lea	cx,WORD PTR -786[bp]
	*** 00013b	03 c8 			add	cx,ax
	*** 00013d	51 			push	cx
	*** 00013e	9a 00 00 00 00 		call	FAR PTR _Better_Behind_Sprite
	*** 000143	83 c4 02 		add	sp,OFFSET 2
;     Better_Draw_Sprite(scaled_tank+index);
; Line 79
	*** 000146	69 86 78 ff 82 00 	_imul3 	ax,WORD PTR -136[bp],OFFSET 130
	*** 00014c	8d 8e ee fc 		lea	cx,WORD PTR -786[bp]
	*** 000150	03 c8 			add	cx,ax
	*** 000152	51 			push	cx
	*** 000153	9a 00 00 00 00 		call	FAR PTR _Better_Draw_Sprite
	*** 000158	83 c4 02 		add	sp,OFFSET 2
; 
;     //make the next sprite
;     Delay(1);
; Line 82
	*** 00015b	6a 01 			push	OFFSET 1
	*** 00015d	9a 00 00 00 00 		call	FAR PTR _Delay
	*** 000162	83 c4 02 		add	sp,OFFSET 2
; }
; Line 83
; Line 83
	*** 000165	e9 81 ff 		jmp	L00936
					L00937:
; 
; Sprite_Fizzle(scaled_tank + index);
; Line 85
	*** 000168	69 86 78 ff 82 00 	_imul3 	ax,WORD PTR -136[bp],OFFSET 130
	*** 00016e	8d 8e ee fc 		lea	cx,WORD PTR -786[bp]
	*** 000172	03 c8 			add	cx,ax
	*** 000174	51 			push	cx
	*** 000175	9a 00 00 00 00 		call	FAR PTR _Sprite_Fizzle
	*** 00017a	83 c4 02 		add	sp,OFFSET 2
; 
; // go back to text mode
; Set_Video_Mode(TEXT_MODE);
; Line 88
	*** 00017d	6a 03 			push	OFFSET 3
	*** 00017f	9a 00 00 00 00 		call	FAR PTR _Set_Video_Mode
	*** 000184	83 c4 02 		add	sp,OFFSET 2
; }
; Line 89
; Line 89
					L00920:
	*** 000187	5f 			pop	di
	*** 000188	5e 			pop	si
	*** 000189	c9 			leave
	*** 00018a	cb 			ret	OFFSET 0
Local Size: 1686
; Line 0
